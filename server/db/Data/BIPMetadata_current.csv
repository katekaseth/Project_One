tool_type,title,created,updated,custodian,author,description,subject_area,support_name,sql_query,database_name,uw_profile
Report,How Many Students By College,12/10/2015,12/12/2004,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin","Displays a graph of the unduplicated headcount by College or School as of Census Day for a specified quarter for the past ten years. Excluded from these counts are foreign study students, on leave students, and students who register for the first time after Census Day. Useful for trend analysis. Required parameters are quarter and college.",Financial Resources,Enrollment Information Services,"SELECT AcctngMonth, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear =@BienniumYear) GROUP BY AcctngMonth ORDER BY AcctngMonth",EDWAdminMart,No
Report,How Many Students at the University,7/9/2019,7/11/2008,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin","Displays a graph of the unduplicated headcount of students at the University of Washington (all campuses) as of Census Day for a specified quarter for the past ten years. Excluded from these counts are foreign study students, on leave students, and students who register for the first time after Census Day. Useful for trend analysis. Required parameter is quarter",Financial Resources,Enrollment Information Services,"SELECT rao.FACILITY_CODE FacilityCode, rao.ROOM_NUMBER RoomNumber, rao.ORGANIZATION assignee_organization, rao.EMPLOYEE_ID assignee_eid, rao.Occupant_EID, ISNULL(s_occup.Name, 'n/a') Occupant_Name FROM dbo.room_assignment_occupant rao LEFT JOIN dbo.Person s_occup ON s_occup.IdNbr = rao.occupant_eid WHERE rao.FACILITY_CODE = @facilitycode AND rao.ROOM_NUMBER = @roomno AND rao.ORGANIZATION = @assignorg AND rao.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,How Many Credit Hours Are Being Taught,7/10/2023,7/12/2012,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin",Displays a graph of total credit hours taught by quarter by college for the last ten years. Useful for trend analysis. Required parameters are quarter and college.,Financial Resources,Enrollment Information Services,"SELECT YEAR(P.PayPeriodEndDate) AS PayYear, MONTH(P.PayPeriodEndDate) AS PayMonth, P.PayPeriodEndDate AS PaycycleEndDate, SUM(P.NetPayAmt) AS HeppsPayrollSum, CASE WHEN S.StateFiscalMonth < 10 THEN '0' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth, -- used in subreport param SUBSTRING(S.StateFiscalBiennium, 1, 4) AS FisBien -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S INNER JOIN ODS.sec.PayrollResultSummary AS P ON S.CalendarDate = P.PayPeriodEndDate GROUP BY YEAR(P.PayPeriodEndDate), MONTH(P.PayPeriodEndDate), P.PayPeriodEndDate, S.StateFiscalMonth, SUBSTRING(S.StateFiscalBiennium, 1, 4) ORDER BY P.PayPeriodEndDate",EDWAdminMart,No
Report,How Many Students By Department,8/3/2027,8/5/2016,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin","Displays a graph of the unduplicated headcount by department as of Census Day for a specified quarter for the past ten years. Excluded from these counts are foreign study students, on leave students, and students who register for the first time after Census Day. Required parameters are quarter, college, and department.",Financial Resources,Enrollment Information Services,"SELECT ts.ts_year ,ts.ts_quarter ,yrqtr = CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) ,Qtr_desc = CASE WHEN ts.ts_quarter = 1 THEN 'Winter ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 2 THEN 'Spring ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 3 THEN 'Summer ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 4 THEN 'Autumn ' + CAST(ts.ts_year AS char(4)) END ,Program = RTRIM(CASE WHEN dc.dept_abbr LIKE 'B %' THEN SUBSTRING(dc.dept_abbr,3,6) ELSE dc.dept_abbr END) ,Program_full_name = RTRIM(dc.dept_full_nm) ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name ,ts.students_denied ,ts.starting_time ,ts.day_of_week ,ts.ending_time ,ts.pm_flag FROM UWSDBDataStore.sec.time_schedule ts INNER JOIN UWSDBDataStore.sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM UWSDBDataStore.sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN UWSDBDataStore.sec.sr_dept_code dc ON scc.curric_dept = dc.dept_code LEFT JOIN UWSDBDataStore.sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) IN (@yrqtr) AND ts.course_branch=1 AND ts.delete_flag <> '@' AND ts.dept_abbrev IN(@curric) AND ts.course_no IN(@crsno) ORDER BY ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,How Many Students List,8/3/2027,8/5/2016,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin","Creates a count and roster of students registered on Census Day of the specified quarter, sorted by major within the specified department. Excluded from these counts are foreign study students, on leave students, and students who register for the first time after Census Day for that quarter. Required parameters are year, quarter, college, and department.",Financial Resources,Enrollment Information Services,"WITH --CTE 1 Cohort(syskey,cohort_yrqtr) AS ( SELECT smm0.mm_system_key ,MIN(smm0.mm_year * 10 + smm0.mm_qtr) FROM UWSDBDataStore.sec.sr_mini_master smm0 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp0 ON smm0.mm_year = smmdp0.mm_year AND smm0.mm_qtr = smmdp0.mm_qtr AND smm0.mm_proc_ind = smmdp0.mm_proc_ind AND smm0.mm_student_no = smmdp0.mm_student_no AND smmdp0.index1 =1 AND smmdp0.mm_branch =1 WHERE smmdp0.mm_major_abbr = 'B PRE' AND smm0.mm_proc_ind = 2 AND ((smm0.mm_year <1998 AND smm0.mm_curr_credits >0) OR (smm0.mm_sea_st_funded+smm0.mm_sea_self_sus+smm0.mm_bot_st_funded+smm0.mm_bot_self_sus+smm0.mm_tac_st_funded+smm0.mm_tac_self_sus >0)) GROUP BY smm0.mm_system_key ) --CTE 2 ,First_CUSP_yrqtr(syskey, CUSP_cohort_yrqtr, Cohort_Type) AS ( SELECT c.syskey ,c.cohort_yrqtr ,CASE WHEN smm00.mm_last_schl_type = 1 THEN 'Freshmen' WHEN smm00.mm_last_schl_type IN(2,3) THEN 'Transfer' ELSE 'Error' END FROM Cohort c INNER JOIN UWSDBDataStore.sec.sr_mini_master smm00 ON c.syskey = smm00.mm_system_key AND c.cohort_yrqtr = (smm00.mm_year * 10 + smm00.mm_qtr) AND smm00.mm_proc_ind = 2 --WHERE c.cohort_yrqtr IN(@cohort) --add this line back in if you want to restrict what cohorts you want to look at ) --CTE 3 ,Last_CUSP_yrqtr(syskey, Last_CUSP_yrqtr) AS ( SELECT smm1.mm_system_key ,MAX(smm1.mm_year * 10 + smm1.mm_qtr) FROM UWSDBDataStore.sec.sr_mini_master smm1 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp1 ON smm1.mm_year = smmdp1.mm_year AND smm1.mm_qtr = smmdp1.mm_qtr AND smm1.mm_proc_ind = smmdp1.mm_proc_ind AND smm1.mm_student_no = smmdp1.mm_student_no AND smmdp1.index1 =1 AND smmdp1.mm_branch =1 WHERE smmdp1.mm_major_abbr = 'B PRE' AND smm1.mm_proc_ind = 2 AND ((smm1.mm_year <1998 AND smm1.mm_curr_credits >0) OR (smm1.mm_sea_st_funded+smm1.mm_sea_self_sus+smm1.mm_bot_st_funded+smm1.mm_bot_self_sus+smm1.mm_tac_st_funded+smm1.mm_tac_self_sus >0)) GROUP BY smm1.mm_system_key ) --CTE 4 ,First_major_yrqtr(syskey, First_major_yrqtr --,Program,Major ) AS ( SELECT smm2.mm_system_key ,MIN(smm2.mm_year * 10 + smm2.mm_qtr) AS First_major_yrqtr --,dc2.dept_abbr --,smmdp2.mm_major_abbr FROM UWSDBDataStore.sec.sr_mini_master smm2 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp2 ON smm2.mm_year = smmdp2.mm_year AND smm2.mm_qtr = smmdp2.mm_qtr AND smm2.mm_proc_ind = smmdp2.mm_proc_ind AND smm2.mm_student_no = smmdp2.mm_student_no AND smmdp2.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc2 ON smmdp2.mm_major_abbr = mc2.major_abbr AND smmdp2.mm_pathway = mc2.major_pathway AND mc2.major_last_yr IN(SELECT MAX(mc2a.major_last_yr) FROM UWSDBDataStore.sec.Sr_major_code mc2a WHERE smmdp2.mm_major_abbr = mc2a.major_abbr AND smmdp2.mm_pathway = mc2a.major_pathway) INNER JOIN UWSDBDataStore.sec.Sr_dept_code dc2 ON mc2.major_dept = dc2.dept_code AND mc2.major_branch = dc2.dept_branch WHERE smm2.mm_proc_ind = 2 AND smmdp2.mm_deg_level <2 AND ((smm2.mm_year <1998 AND smm2.mm_curr_credits >0) OR (smm2.mm_sea_st_funded+smm2.mm_sea_self_sus+smm2.mm_bot_st_funded+smm2.mm_bot_self_sus+smm2.mm_tac_st_funded+smm2.mm_tac_self_sus >0)) AND mc2.major_dept NOT IN(864,866,883,1032) GROUP BY smm2.mm_system_key ) ------------------------------------ SELECT DISTINCT cusp.syskey ,cohort.Cohort_Type ,cohort = cohort.CUSP_cohort_yrqtr ,cohort_acadyr = CASE WHEN RIGHT(cohort.CUSP_cohort_yrqtr,1) IN (3,4) THEN CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)) + '-' + CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)+1) WHEN RIGHT(cohort.CUSP_cohort_yrqtr,1) IN (1,2) THEN CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)-1) + '-' + CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)) ELSE 'Error' END ,qtr = CASE WHEN smm.mm_qtr = 1 THEN 'Winter ' WHEN smm.mm_qtr = 2 THEN 'Spring ' WHEN smm.mm_qtr = 3 THEN 'Summer ' WHEN smm.mm_qtr = 4 THEN 'Autumn ' ELSE 'ERROR' END + CONVERT(char(4), smm.mm_year) ,cusp.Last_CUSP_yrqtr ,major.First_major_yrqtr ,Program = dc.dept_full_nm ,dc.dept_abbr ,Major = major_full_nm ,mc.major_abbr ,mc.major_pathway FROM First_CUSP_yrqtr cohort INNER JOIN Last_CUSP_yrqtr cusp ON cohort.syskey = cusp.syskey INNER JOIN First_major_yrqtr major ON cusp.syskey = major.syskey AND cusp.Last_CUSP_yrqtr < major.First_major_yrqtr INNER JOIN UWSDBDataStore.sec.sr_mini_master smm ON major.syskey = smm.mm_system_key AND major.First_major_yrqtr = smm.mm_year * 10 + smm.mm_qtr INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp ON smm.mm_year = smmdp.mm_year AND smm.mm_qtr = smmdp.mm_qtr AND smm.mm_proc_ind = smmdp.mm_proc_ind AND smm.mm_student_no = smmdp.mm_student_no AND smmdp.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc ON smmdp.mm_major_abbr = mc.major_abbr AND smmdp.mm_pathway = mc.major_pathway AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr) FROM UWSDBDataStore.sec.Sr_major_code mc1 WHERE smmdp.mm_major_abbr = mc1.major_abbr AND smmdp.mm_pathway",EDWAdminMart,No
Report,Student Class List,9/6/2001,9/7/2021,University Registrar and Chief Officer of Enrollment Information Services,"Randy Byers, Ann Wunderlin","For the selected year/quarter, this list displays students who are either registered for or have withdrawn from the course/section. Information on this list is sortable by clicking on the column heading. The information in the report is up to 24 hours old and is typically refreshed nightly.",Financial Resources,Enrollment Information Services,"SELECT ts.ts_year ,ts.ts_quarter ,d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE ts.ts_year=@year AND ts.ts_quarter=@Quarter AND ts.course_branch=1 AND ts.delete_flag <> '@' ORDER BY d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,Undergraduate Degree Applicants,9/7/2017,9/9/2005,University Registrar and Chief Officer of Enrollment Information Services,"Andrew Hummel-Schluger, Ann Wunderlin",Creates a roster of undergraduate students within a selected department who have filed a graduation application for an upcoming quarter. Useful for monitoring graduation applications and for creating e-mail lists to contact graduating students. Required parameters are College and Department.,Financial Resources,Enrollment Information Services,"SELECT ts.ts_year ,ts.ts_quarter ,d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE ts.ts_year=@year AND ts.ts_quarter=@Quarter AND ts.course_branch=1 AND ts.delete_flag <> '@' ORDER BY d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,Student Transcript Detail,9/7/2022,9/9/2010,University Registrar and Chief Officer of Enrollment Information Services,"Andrew Hummel-Schluger, Ann Wunderlin","UW transcript information for an individual student. Lists all transcript information for a student. Useful for reviewing student academic progress, displays snapshot of complete student record. Excludes transfer credits. Required parameter is student number.",Financial Resources,Enrollment Information Services,"SELECT ts.ts_year ,ts.ts_quarter ,d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE ts.ts_year=@year AND ts.ts_quarter=@Quarter AND ts.course_branch=1 AND ts.delete_flag <> '@' ORDER BY d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,Affixed Payment Detail,9/9/2022,9/11/2011,Todd Mildon,Jeff Petersen & Colin Sachs,"Displays detailed charge information (i.e., amount charged, affixed, exempted and unpaid) by student for any entered charge code or charge code range within a date range. It is most useful for reviewing charge amounts placed on student accounts as well as determining which students have an outstanding balance. (Similar to: SDB Report SA70110-R-04)",Financial Resources,Student Accounts Office,"SELECT DISTINCT v.student_name, v.student_no, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, ar.req_major_abbr, mc.major_full_nm, v.num_holds, a.trans_gpa, v.tot_2yr_transfer, v.tot_4yr_transfer, v.tot_lowd_transfer, v.tot_upd_transfer, v.class, class_desc = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class in (11,12,13,14) THEN 'Professional' ELSE convert(char(1),v.class) END ,Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, Paid_Date = ( Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where appl_status_new in (15, 16) and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr ), MailCode = CASE WHEN mlc.mail_code IN ('UW', 'PB', 'BOR') THEN mlc.mail_code ELSE 'None' END FROM sec.student_1 v inner join sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.system_key = ar.system_key and a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key WHERE a.appl_yr = @year and a.appl_qtr = @Quarter and a.appl_branch = 1 and convert(char(1),a.appl_type) in ('2','4','5','R') --and (a.trans_gpa is null or a.trans_gpa = 0) and a.appl_status in (12,15,16) and v.class <> 6 and mc.major_pathway = 0",EDWAdminMart,No
Report,How Many Degrees Have I Granted,9/10/2002,9/11/2021,University Registrar and Chief Officer of Enrollment Information Services,Andrew Hummel-Schluger,Displays a graph of the count of degrees granted within a College or School for the past ten years.. Useful for trend analysis in graduation rates. Required parameter is College.,Financial Resources,Enrollment Information Services,"SELECT rau.FACILITY_CODE FacilityCode, rau.ROOM_NUMBER RoomNumber, rau.ORGANIZATION assignee_organization, rau.EMPLOYEE_ID assignee_eid, rau.functional_use_code, fuc.DESCRIPTION Functional_Use, rau.functional_use_percent FROM dbo.room_assignment_use rau LEFT JOIN dbo.functional_use_code fuc ON rau.functional_use_code = fuc.functional_use_code WHERE rau.FACILITY_CODE = @facilitycode AND rau.ROOM_NUMBER = @roomno AND rau.ORGANIZATION = @assignorg AND rau.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Contact Information - Unmet Requests,9/10/1930,9/12/2019,University Registrar and Chief Officer of Enrollment Information Services,Andrew Hummel-Schluger,This report provides contact information for all students who have attempted to register for a specified course and been denied for lack of space. Useful for contacting students when new sections are opened. Required parameters are Curriculum and Course Number.,Financial Resources,Enrollment Information Services,"SELECT BienniumYear, SUM(OpenBalAmt) AS BeginningBalance, SUM(DebitSumAmt) AS DebitAmount, SUM(CreditSumAmt) AS CreditAmount FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') GROUP BY BienniumYear ORDER BY BienniumYear",EDWAdminMart,No
Report,Aid Authorization and Disbursement by Year,9/11/2024,10/1/2013,"Director, Student Financial Aid",Colin Sachs,"Displays the dollar amount of aid authorized and disbursed by student number and name for a specified award fund/budget within each quarter over a given aid year. Report is useful for determining if all aid has been disbursed to students over the course of a year, or within a given quarter. For an individual quarter and award fund/budget, see ""Aid Authorized and Disbursed by Quarter"" report. (Similar to: SA70140-D-02)",Financial Resources,Student Accounts Office,"SELECT DISTINCT v.student_name , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END ,v.system_key ,class = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class = 11 THEN '1st Year Professional' WHEN v.class = 12 THEN '2nd Year Professional' WHEN v.class = 13 THEN '3rd Year Professional' WHEN v.class = 14 THEN '4th Year Professional' ELSE 'Unknown Class Status' END ,v.admitted_for_yr ,admitted_for_qtr = CASE WHEN v.admitted_for_qtr = 1 THEN 'Winter' WHEN v.admitted_for_qtr = 2 THEN 'Spring' WHEN v.admitted_for_qtr = 3 THEN 'Summer' WHEN v.admitted_for_qtr = 4 THEN 'Autumn' ELSE 'Unknown Quarter' END ,v.tot_graded_attmp ,uwb = (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) ,uwb_gpa = ( SELECT (SUM((CONVERT(DEC(2),grade)/10)*course_credits))/SUM(course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0 AND grade NOT IN ('I', 'W','HW','W3','W4','W5','W6','W7','')) ,v.tot_nongrd_earn ,gpa = CASE WHEN v.tot_graded_attmp > 0 THEN (v.tot_grade_points/v.tot_graded_attmp) ELSE 0 END ,current_credits = (SELECT current_credits from sec.registration where system_key = v.system_key AND regis_yr = @Year and regis_qtr = 4) ,mc.major_name ,addr.e_mail_ucs ,addr.local_line_1 ,addr.local_line_2 ,addr.local_city ,addr.local_state ,addr.local_zip_5 FROM sec.student_1 v INNER JOIN sec.student_1_college_major cm ON v.system_key = cm.system_key INNER JOIN sec.sr_major_code mc ON cm.major_abbr = mc.major_abbr AND cm.pathway = mc.major_pathway INNER JOIN sec.registration r ON v.system_key = r.system_key LEFT JOIN sec.transcript t ON v.system_key = t.system_key LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE r.regis_yr = @Year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 AND cm.major_abbr = 'B BUS' AND (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) >= 30 order by gpa desc",EDWAdminMart,No
Report,Degree Codes,11/4/2013,11/6/2002,University Registrar and Chief Officer of Enrollment Information Services,Randy Byers,"Displays information about degree codes for selected departments. Useful for finding a code when filling out a change of major form or filing a graduation application, or for looking up a degree's tuition category. Required parameters are College and Department.",Financial Resources,Enrollment Information Services,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '2540578000' SET @budgetgroup = '5GC' SET @calmonth = '6' SET @calyear = 2010 SET @budgetperiod = 'f'*/ DECLARE @fiscalyear char(4) SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4) SET @bienniumyear = (@fiscalyear - (@fiscalyear % 2) - 1) DECLARE @fiscalYearToUse char(4) SELECT @fiscalYearToUse = CONVERT(char(4), (CASE WHEN (CONVERT(int,@fiscalyear)%2)=0 AND CONVERT(int,@fiscalyear) < (SELECT max(CONVERT(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN CONVERT(varchar(4),CONVERT(int,@fiscalyear)+1) ELSE @fiscalyear end)) DECLARE @evenoddfy int SET @evenoddfy = convert(int,@fiscalyear)%2 IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6), Budgetname varchar(50), BudgetStatusCode char(1), RevenueSource char(2), RevenueSourceDesc varchar(30), RevenueClass char(4), RevenueClassDesc varchar(30), PrincipalInvestigatorID char(9), PrincipalInvestigator varchar(50), ParentSubFlag char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN INSERT INTO #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptname, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, RevenueSource, RevenueSourceDesc, RevenueClass, RevenueClassDesc, PrincipalInvestigatorID, PrincipalInvestigator, ParentSubFlag, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.FiscalYear, BI.OrgCode , Left(BI.OrgCode,7) 'OrgDeptCode' , OD.OrgDeptName, BTC.budgetsuperclasscode, BTC.budgettypecode, BTC.budgetclasscode, BI.budgetnbr, BI.budgetname, BI.BudgetStatusCode, BI1.RevenueSource, BI1.RevenueSourceDesc,BI1.RevenueClass, BI1.RevenueClassDesc, BI1.PrincipalInvestigatorID, BI1.PrincipalInvestigator, CASE WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) = BI.Budgetnbr THEN 'P' WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) != BI.Budgetnbr AND rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) != '' THEN 'S' ELSE '' END AS 'ParentSubFlag', 'Grants and Contracts' AS 'BudgetGroup', '5GC' AS 'BudgetGroupCode' FROM sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT BudgetNbr FROM ODS.sec.BudgetIndexBudgetOfficeFlag WHERE BienniumYear = @bienniumyear AND index1 = '2' AND BudgetOfficeFlag IN ('2', '3', '4', '5', '6')) BOF ON BI.Budgetnbr = BOF.Budgetnbr LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD ON LEFT(BI.OrgCode,7) = OD.OrgDeptLevel INNER JOIN ODS.sec.BudgetIndex BI1 ON BI1.BudgetNbr = BI.BudgetNbr AND BI1.BienniumYear = @bienniumyear WHERE (BI.budgetTypecode + BI.budgetClassCode != '0552') AND BI.RFAcctngCode = 'R' AND BTC.BudgetSuperClassCode = 'ROF31' AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgCode, BTC.OrgDeptCode, BTC.OrgDeptName, BTC.BudgetGroup, BTC.BudgetGroupCode, BTC.BudgetNbr, BTC.BudgetName, (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) AS 'TYPE_CLASS', BTC.BudgetStatusCode, BTC.ParentSubFlag, BTC.RevenueSource, BTC.RevenueSourceDesc,BTC.RevenueClass, BTC.RevenueClassDesc, BTC.PrincipalInvestigator, BTC.PrincipalInvestigatorID, /*Beginning Balance */ SUM(CASE WHEN FS.TranCode IN ('24') AND fs.BudgetPermTempCryFwdCode != 'C' AND cast(FS.Acctngmonth as int) < 3 THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'BegBalance', /*New Awards and Adjustments*/ SUM(CASE WHEN FS.TranCode IN ('25') AND fs.BudgetPermTempCryFwdCode != 'C' AND CONVERT(INT, fs.fiscalyear) <= CONVERT(INT, @fiscalyear) THEN (FS.SummaryAmt * -",EDWAdminMart,No
Report,Miscellaneous Student Accounts - Non-Tuition Charge Summary,9/12/2020,10/2/2008,"Director, Student Fiscal Services",Colin Sachs,"This report displays non-tuition based charge code details for charge codes active on SDB for a given year and quarter. It is useful for reviewing the charge amount associated with a charge code for a given quarter, as well as the currently defined maximum possible charge and, in some instances, the charged due date. (Similar to: SDB Report SA70140-D-02)",Financial Resources,Student Accounts Office,"SELECT AcctngMonth, SUM(DebitSumAmt) AS DebitAmount, SUM(CreditSumAmt) AS CreditAmount FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801' and BienniumYear IN (@bienYear) ) GROUP BY AcctngMonth ORDER BY AcctngMonth",EDWAdminMart,No
Report,Current Student Information By Major,9/12/2022,10/2/2010,University Registrar and Chief Officer of Enrollment Information Services,Ann Wunderlin,"Creates a roster with information about currently registered students in a specified major. Displays student demographic information, contact information, majors, and GPAs for students registered in the current quarter. Required parameters are college, department, and major.",Financial Resources,Enrollment Information Services,"SELECT s2di.deg_branch,s2di.deg_earned_yr ,s2di.deg_earned_qtr ,s2di.deg_status ,s2di.deg_title ,v.student_name_lowc ,s1cm.major_abbr ,addr.e_mail_ucs ,v.s1_ins_sevis_id ,v.s1_visa_type ,v.student_no ,v.system_key ,DegQuarter = CASE WHEN s2di.deg_earned_qtr =1 THEN 'Winter' WHEN s2di.deg_earned_qtr =2 THEN 'Spring' WHEN s2di.deg_earned_qtr =3 THEN 'Summer' WHEN s2di.deg_earned_qtr =4 THEN 'Fall' ELSE '--' END ,DegApplication_Status = CASE WHEN s2di.deg_status =3 THEN 'Applied' WHEN s2di.deg_status =4 THEN 'Applied' WHEN s2di.deg_status =5 THEN 'Applied' WHEN s2di.deg_status =9 THEN 'Granted' ELSE '--' END FROM sec.student_1 v INNER JOIN sec.student_1_college_major s1cm ON v.system_key = s1cm.system_key INNER JOIN sec.student_2_uw_degree_info s2di ON v.system_key = s2di.system_key INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE (s2di.deg_branch = 1) AND (s2di.deg_status IN(3,4,5,9)) AND (s2di.deg_earned_yr = @year) AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> '' ORDER BY v.student_name_lowc",EDWAdminMart,No
Report,Current Student Transcript Courses,9/12/2024,10/2/2012,University Registrar and Chief Officer of Enrollment Information Services,Laurel Cheap,"This report displays transcript information for all students who are in a selected major for the current quarter. This report can be used to identify satisfactory progress and for tracking student progress in a major. Current Quarter Reports display data for the current quarter, up until the Thursday before the start of the next term. During Summer and Autumn, these reports display current quarter data through the 2nd Wednesday after the end of the term. During Winter and Spring, the reports d",Financial Resources,Enrollment Information Services,"SELECT s2di.deg_branch,s2di.deg_earned_yr ,s2di.deg_earned_qtr ,s2di.deg_status ,s2di.deg_title ,v.student_name_lowc ,s1cm.major_abbr ,addr.e_mail_ucs ,v.s1_ins_sevis_id ,v.s1_visa_type ,v.student_no ,v.system_key ,DegQuarter = CASE WHEN s2di.deg_earned_qtr =1 THEN 'Winter' WHEN s2di.deg_earned_qtr =2 THEN 'Spring' WHEN s2di.deg_earned_qtr =3 THEN 'Summer' WHEN s2di.deg_earned_qtr =4 THEN 'Fall' ELSE '--' END ,DegApplication_Status = CASE WHEN s2di.deg_status =3 THEN 'Applied' WHEN s2di.deg_status =4 THEN 'Applied' WHEN s2di.deg_status =5 THEN 'Applied' WHEN s2di.deg_status =9 THEN 'Granted' ELSE '--' END FROM sec.student_1 v INNER JOIN sec.student_1_college_major s1cm ON v.system_key = s1cm.system_key INNER JOIN sec.student_2_uw_degree_info s2di ON v.system_key = s2di.system_key INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE (s2di.deg_branch = 1) AND (s2di.deg_status IN(3,4,5,9)) AND (s2di.deg_earned_yr = @year) AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> '' ORDER BY v.student_name_lowc",EDWAdminMart,No
Report,Student Degree Information,10/1/2015,10/3/2006,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"Creates a roster of students who have applied for and/or been granted a degree for one or more years or quarters. Displays contact information, demographics, and academic performance indicators. Required parameters are quarter, college, department, and degree. October 2015 Update: New features include being about to choose from Majors or Minors, Filter on Degree Level, Pull information from student_2_uw_degree_infor for Granted (9) Degrees and Filter Parameter for Report Type 1) Display only D",Financial Resources,Enrollment Information Services,"SELECT r.ReportKey, r.ReportHidden, r.ReportFolder, r.ReportName, --r.ReportTypeCd, lr.ReportFolder AS LinkedReportFolder, lr.ReportName AS LinkedReportName, Max(el.TimeStart) AS LastRunDate, Count(el.ExecutionLogKey) AS Executions, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN 1 ELSE 0 END) AS Succeeded, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' OR sc.StatusDesc Is Null THEN 0 ELSE 1 END) AS Failed, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN DateDiff(ms,el.TimeStart,el.TimeEnd) ELSE 0 END) AS TotalRunMSs, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN el.ByteCount ELSE 0 END) AS TotalBytes, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN el.[RowCount] ELSE 0 END) AS TotalRows FROM sec.RSReport AS r LEFT JOIN sec.RSReport AS lr ON r.LinkedReportUID = lr.ReportUID LEFT JOIN sec.RSExecutionLog AS el ON r.ReportKey = el.ReportKey AND DATEDIFF(day, el.TimeStart, GetDate()) <= @days LEFT JOIN sec.RSExecStatus AS sc ON el.StatusKey = sc.StatusKey WHERE r.ReportKey > 0 --AND r.ReportDeleted = 0 AND r.ReportName Not Like '%_sub' GROUP BY r.ReportKey, r.ReportHidden, r.ReportFolder, r.ReportName, lr.ReportFolder, lr.ReportName ORDER BY r.ReportFolder, r.ReportHidden, r.ReportName",EDWAdminMart,No
Report,Current Student Information By Minor,10/1/2022,10/3/2013,University Registrar and Chief Officer of Enrollment Information Services,Ann Wunderlin,"Creates a roster with contact information for currently registered students in a specified minor. Displays student demographic information, majors, and academic information. Required parameters are college, department, and minor.",Financial Resources,Enrollment Information Services,"SELECT DISTINCT s1.system_key, s1.student_no, s1.student_name, a.appl_status, aps.appl_stat_descrip, Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END, a.appl_yr, a.appl_type, Appl_level = CASE when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' ELSE 'No Appl Type' END, a.appl_rcvd_dt, ar.req_major_abbr, cm.major_abbr, r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm on a.system_key = cm.system_key and a.appl_no = cm.appl_no and a.appl_qtr = cm.appl_qtr and a.appl_yr = cm.appl_yr and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r ON a.system_key = r.system_key AND a.appl_yr = r.regis_yr AND a.appl_qtr = r.regis_qtr AND r.enroll_status = 12 WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN ('2','4','5','6','N','R') AND a.appl_status IN (15,16) and (ar.req_major_abbr = 'B PRE' or cm.major_abbr = 'B PRE')",EDWAdminMart,No
Report,Current Student Registration Courses,10/1/2025,10/3/2016,University Registrar and Chief Officer of Enrollment Information Services,Laurel Cheap,"Displays current registration information for all students in a selected major. Useful for tracking majors and satisfactory progress . Required parameters are quarter, college, and department.",Financial Resources,Enrollment Information Services,"SELECT DISTINCT s1.system_key, s1.student_no, s1.student_name, a.appl_status, aps.appl_stat_descrip, Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END, a.appl_yr, a.appl_type, Appl_level = CASE when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' ELSE 'No Appl Type' END, a.appl_rcvd_dt, ar.req_major_abbr, cm.major_abbr, r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm on a.system_key = cm.system_key and a.appl_no = cm.appl_no and a.appl_qtr = cm.appl_qtr and a.appl_yr = cm.appl_yr and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r ON a.system_key = r.system_key AND a.appl_yr = r.regis_yr AND a.appl_qtr = r.regis_qtr AND r.enroll_status = 12 WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN ('2','4','5','6','N','R') AND a.appl_status IN (15,16) and (ar.req_major_abbr = 'B PRE' or cm.major_abbr = 'B PRE')",EDWAdminMart,No
Report,Current Student Transcript Quarterly Summary,10/3/2022,10/5/2011,University Registrar and Chief Officer of Enrollment Information Services,Laurel Cheap,"Displays quarterly transcript summary information for students in a selected major for a selected quarter. Useful for tracking quarterly progress, and you can click through to full transcript information for an individual student. Required parameters are Quarter, College, Department, and Major.",Financial Resources,Enrollment Information Services,"SELECT DISTINCT Person.PersonKey, Person.Name, Person.PreferredName, Person.FirstMiddleLastName, Person.UWNetId, Contact.PrimaryTitle, Contact.PrimaryDeptName, Contact.PrimaryWorkPhone, Contact.PrimaryWorkPhoneExt, Contact.HomeDeptCampusMailbox, Contact.HomeDeptName, Contact.HomeDeptOrgCode, Contact.CollegeOrgCode, Contact.CollegeOrgName, Contact.AltTitle, Contact.AltDeptName, Contact.PersonalCampusMailbox, Contact.HomePhone, Contact.PrimaryUWEmailAddr, Contact.AltUWEmailAddr, Contact.OnOffCampusCode, Contact.OnOffCampusDesc, Person.IdNbr, Contact.DirectoryInfoReleaseCode, Contact.DirectoryInfoReleaseDesc, ODS_HEPPS.sec.Appointment .EndDate, ODS_HEPPS.sec.Appointment .DeptOrgCode, ODS_HEPPS.sec.Appointment .DeptOrgName, ODS_HEPPS.sec.Appointment .JobClassCode, ODS_HEPPS.sec.Appointment .JobClass, ODS_HEPPS.sec.Appointment .Status, ODS_HEPPS.sec.Appointment .StatusCode, ODS_HEPPS.sec.Appointment .ApptTerm, ODS_HEPPS.sec.Appointment .PercentOfFulltime, ODS_HEPPS.sec.Appointment .PayCycleSchedule, ODS_HEPPS.sec.Appointment .FTE, Contact.AcademicHomeDeptOrgCode, Contact.AcadmicHomeDeptName, ODS_HEPPS.sec.Appointment .PaidApptCode, ODS_HEPPS.sec.Appointment .PaidApptCodeDesc, ODS_HEPPS.sec.JobClassification .PayRateCode, ODS_HEPPS.sec.JobClassification .PayRateDesc, ODS_HEPPS.sec.JobClassification .ECSCode, ODS_HEPPS.sec.JobClassification .ECSDesc, ODS_HEPPS.sec.JobClassification .AcademicGroupCode, ODS_HEPPS.sec.JobClassification .AcademicGroupDesc FROM ODS_HEPPS.sec.Person AS Person INNER JOIN ODS_HEPPS.sec.Contact AS Contact ON Person.PersonKey = Contact.PersonKey INNER JOIN ODS_HEPPS.sec.Appointment ON Person.PersonKey = ODS_HEPPS.sec.Appointment .PersonKey INNER JOIN ODS_HEPPS.sec.JobClassification ON ODS_HEPPS.sec.Appointment .JobClassCode = ODS_HEPPS.sec.JobClassification .JobClassCode WHERE (ODS_HEPPS.sec.Appointment .StatusCode = 'A') AND (Contact.PersonalCampusMailbox <> 351272) AND (ODS_HEPPS.sec.Appointment .ECSCode != 'R') ORDER BY Person.Name",EDWAdminMart,No
Report,Current Student Transfer Summary,10/3/2024,10/5/2013,University Registrar and Chief Officer of Enrollment Information Services,Laurel Cheap,"Creates a roster of currently-registered transfer students within a selected major and provides a summary of information about the students' prior schools. Useful for a quick overview of prior academic work, and also allows access to full transcript details for individual students. Required parameters are College, Department, and Major.",Financial Resources,Enrollment Information Services,"SELECT GLProcessingDate, TransBatchNbr AS FASRunNbr, TransTypeCode AS TransCode, SUM(RecordCount) RecordCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @bienyr) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,Time Schedule Information,10/3/2018,10/5/2007,University Registrar and Chief Officer of Enrollment Information Services,Ann Wunderlin,"Displays time schedule, meeting and instructor data for selected quarters, curricula, instructors, courses and sections. Useful for planning next year's courses. Required parameters are Quarter, College, Department, Curriculum, Instructor, Course Number, and Section. Provides functionality to drill-down to joint course sections detail information which are part of a given joint course sections curriculum loop. Note: Instructor data is not sortable by type, such as faculty, graduate student, i",Financial Resources,Enrollment Information Services,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', BienniumYear, FasRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '30' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Ser",EDWAdminMart,No
Report,Class List By Curriculum Course Section,10/2/2001,10/3/2023,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"Current roster of registered or no longer registered students for each course by curriculum, course and section. Useful for reviewing satisfactory progress, managing curriculum, determining course overload issues. This report does not include grade information. Required selection parameters are year, quarter, college, department, curriculum, course number, and course section.",Financial Resources,Enrollment Information Services,"SELECT 'UW' as UW, mm.mm_year as AcadYr, CASE WHEN mm.mm_class='06' THEN 4 WHEN mm.mm_class<'06' THEN 1 WHEN mm.mm_class='08' THEN 2 ELSE 3 END as ClassSort, CASE WHEN mm.mm_class=6 THEN 'Non-matric' WHEN mm.mm_class<6 THEN 'Undergraduate' WHEN mm.mm_class='08' THEN 'Graduate' ELSE 'Professional' END as ClassGrouping, COUNT(mm.mm_system_key) as HeadCount FROM sec.sr_mini_master mm Where mm.mm_year > Year(getdate())-10 and mm.mm_qtr = @Quarter and mm.mm_proc_ind = 2 and (mm.mm_sea_st_funded + mm.mm_sea_self_sus + mm.mm_bot_st_funded + mm.mm_bot_self_sus + mm.mm_tac_st_funded + mm.mm_tac_self_sus) > 0 GROUP BY mm.mm_year , mm.mm_qtr , CASE WHEN mm.mm_class='06' THEN 4 WHEN mm.mm_class<'06' THEN 1 WHEN mm.mm_class='08' THEN 2 ELSE 3 END , CASE WHEN mm.mm_class=6 THEN 'Non-matric' WHEN mm.mm_class<6 THEN 'Undergraduate' WHEN mm.mm_class='08' THEN 'Graduate' ELSE 'Professional' END ORDER BY AcadYr, ClassSort",EDWAdminMart,No
Report,Daily Faculty Reappointment Download,9/7/2023,9/9/2011,"Assistant Vice Provost, Office of Academic Personnel","Ann Wunderlin, Alexis Chin",To be completed by data custodians.,Financial Resources,Academic Personnel (AHRIS),SELECT * FROM Report WHERE ReportCodeNbr = @rptcd,EDWAdminMart,No
Report,Faculty Distributions Other than 100%,9/8/2020,9/10/2009,"Assistant Vice Provost, Office of Academic Personnel",Ann Wunderlin and Brandon Whitehead,The purpose of this report is to identify those faculty to whom funds have been distributed either above or below the prescribed 100% level. Users select the desired layout (greater than or less than 100%) from the Report Type drop down option.,Financial Resources,Academic Personnel (AHRIS),"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.local_line_1 , addr.local_line_2 , addr.local_city , addr.local_state , addr.local_zip_5 , addr.local_phone_num , addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 , addr.perm_phone_num ,st30hs.high_school_name ,Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE appl_yr IN(@Year) AND appl_qtr IN (@Quarter) AND appl_branch = @branch AND addr.perm_state IN (@State)",EDWAdminMart,No
Report,Legacy Faculty On Leave,9/8/2024,9/10/2013,"Assistant Vice Provost, Office of Academic Personnel",Ann Wunderlin and Brandon Whitehead,Produces as list of faculty appointments and distributions that are active on the specified that and that have a leave earn type. Records are as they currently exist in HEPPS/OPUS. Results may be limited by Home Department Organization and/or Appointing Department Organization.,Financial Resources,Academic Personnel (AHRIS),"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.local_line_1 , addr.local_line_2 , addr.local_city , addr.local_state , addr.local_zip_5 , addr.local_phone_num , addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 , addr.perm_phone_num ,st30hs.high_school_name ,Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE appl_yr IN(@Year) AND appl_qtr IN (@Quarter) AND appl_branch = @branch AND addr.perm_state IN (@State)",EDWAdminMart,No
Report,Organization Names and Codes,9/7/2020,9/9/2008,"Assistant Vice Provost, Office of Academic Personnel",Alexis Chin,List of organization codes and names.,Financial Resources,Academic Personnel (AHRIS),"SELECT YEAR(P.PaycycleEndDate) AS PayYear, MONTH(P.PaycycleEndDate) AS PayMonth, P.PaycycleEndDate, SUM(P.NetPayAmt) AS HeppsPayrollSum, CASE WHEN S.StateFiscalMonth < 10 THEN '0' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth, -- used in subreport param SUBSTRING(S.StateFiscalBiennium, 1, 4) AS FisBien -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S INNER JOIN ODS_HEPPS.sec.PaymentHistory AS P ON S.CalendarDate = P.PaycycleEndDate GROUP BY YEAR(P.PaycycleEndDate), MONTH(P.PaycycleEndDate), P.PaycycleEndDate, S.StateFiscalMonth, SUBSTRING(S.StateFiscalBiennium, 1, 4) ORDER BY P.PaycycleEndDate",EDWAdminMart,No
Report,Remaining Balance by OrgCode and Category,8/3/2001,8/4/2020, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report answers the question: How much money do I have to spend? It displays balances for budget categories with a drill through to individual budgets balances for each budget category.To view the glossary definition for a budget category, click on the budget category name. To drill to the Remaining Balance subreport for a budget category, click on the amount for that category. Expenses and encumbrances are shown as negative amounts, budgeted amounts and revenue are shown as positive am",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name , v.student_no , a.appl_yr , Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END , ar.req_major_abbr , mc.major_full_nm , v.num_holds , a.trans_gpa , v.tot_2yr_transfer , v.tot_4yr_transfer , v.tot_lowd_transfer , v.tot_upd_transfer , v.class , class_desc = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class in (11,12,13,14) THEN 'Professional' ELSE CONVERT(char(1),v.class) END , Appl_level = CASE WHEN a.appl_type = '1' THEN 'FR' WHEN a.appl_type = '2' THEN 'UG 2yr' WHEN a.appl_type = '4' THEN 'UG 4yr' WHEN a.appl_type = '6' OR a.appl_type = 'R' THEN 'UG (Returning)' WHEN a.appl_type = '5' THEN '5YR' WHEN a.appl_type = 'N' OR a.appl_type = 'P' THEN 'NM' WHEN a.appl_type = '7' THEN 'GR (Returning)' WHEN a.appl_type = 'G' THEN 'GR (Gradute)' WHEN a.appl_type = 'E' THEN 'GNM' WHEN a.appl_type = 'P' THEN 'PRO' ELSE 'No Appl Type' END , Paid_Date = ( SELECT MAX(ab.trans_dt) FROM sec.sr_adm_stat_chg ab WHERE appl_status_new in (15, 16) AND ab.system_key = a.system_key AND ab.appl_no = a.appl_no AND ab.appl_yr = a.appl_yr AND ab.appl_qtr = a.appl_qtr ) , MailCode = mlc.mail_code FROM sec.student_1 v INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr AND a.appl_qtr = ar.appl_qtr AND a.system_key = ar.system_key AND a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key WHERE a.appl_yr = @year AND a.appl_qtr = @Quarter AND a.appl_branch = 1 AND CONVERT(char(1),a.appl_type) in ('2','4','5','R') --AND (a.trans_gpa is null or a.trans_gpa = 0) AND a.appl_status in (12,15,16) AND v.class <> 6 AND mc.major_pathway = 0",EDWAdminMart,No
Report,Financial Summary - Remaining Auth to Spend_Bothell,8/3/2001,8/4/2020, Dan Schaaf,Dinah Walters,Answers the Top 5 Question: How much money do I have to spend? Balances for Budget categories for the Bothell Campus with drill down to individual budgets balances for each budget category.,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, TransBatchNbr, TransTypeCode, TransDate, TransDebitAmt, TransCreditAmt, TransRef2Text, GLProcessingDate FROM GLDataMart.sec.TransGLPayrollCash WHERE ( BienniumYear = @BienYear) AND (TransBatchNbr = @FasNo) ORDER BY GLProcessingDate",EDWAdminMart,No
Report,Financial Summary - Remaining Auth to Spend_Tacoma,8/3/2001,8/4/2020, Dan Schaaf,Dinah Walters,Answers the Top 5 Question: How much money do I have to spend? Balances for Budget categories for the Tacoma Campus with drill down to individual budgets balances for each budget category.,Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Remaining Balance R1,8/3/2001,8/4/2020, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report provides balances for selected budget categories for a selected month by budget and Org Code. Expenses and encumbrances are shown as negative amounts, budgeted amounts and revenue are shown as positive amounts.",Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Remaining Balance R2,8/3/2001,8/4/2020, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report provides balances for selected budget categories for a selected month by budget and Org Code. Expenses and encumbrances are shown as negative amounts, budgeted amounts and revenue are shown as positive amounts.",Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Remaining Balance R3,8/3/2001,8/4/2020, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report provides balances for selected budget categories for a selected month by budget and Org Code. Expenses and encumbrances are shown as negative amounts, budgeted amounts and revenue are shown as positive amounts.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END , 'SAT' = CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 ,st30hs.high_school_name FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE a.appl_yr IN(@Year) AND a.appl_qtr IN (@Quarter) AND a.appl_branch = @branch AND a.appl_type IN ('2', '4') AND (a.resident NOT IN ('5', '6') AND addr.perm_state <> 'WA' ) AND a.trans_GPA >= 3.4",EDWAdminMart,No
Report,Remaining Balance R4,8/3/2001,8/4/2020, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report provides balances for selected budget categories for a selected month by budget and Org Code. Expenses and encumbrances are shown as negative amounts, budgeted amounts and revenue are shown as positive amounts.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.system_key ,v.student_name ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END ,v.admitted_for_yr ,admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end ,rcm.regis_major_abbr ,current_major = ( SELECT rcm.regis_major_abbr FROM sec.registration_regis_col_major rcm WHERE rcm.regis_yr = @Current_Year AND rcm.regis_qtr = @Current_Qtr AND rcm.index1=1 AND rcm.system_key = v.system_key ) ,class = CASE when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' END ,addr.local_phone_num ,addr.e_mail_ucs ,addr.e_mail_other FROM sec.student_1 v INNER JOIN sec.registration r ON v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key AND r.regis_yr = rcm.regis_yr AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.registration_courses rc ON r.system_key = rc.system_key AND r.regis_yr = rc.regis_yr AND r.regis_qtr = rc.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE rcm.regis_major_abbr in ('B PRE', 'B XPRE') AND r.enroll_status = 12 AND r.regis_yr = @Previous_Year AND r.regis_qtr = @Previous_Qtr AND NOT EXISTS ( SELECT r.system_key from sec.registration_courses rcc WHERE rcc.regis_yr = @Current_Year AND rcc.regis_qtr = @Current_Qtr AND rcc.system_key = v.system_key AND rcc.request_status in ('A','C','R') AND rcc.course_branch IN(@campus) ) order by v.student_name",EDWAdminMart,No
Report,Grant and Contract Certification Report,9/1/2014,9/3/2005,"Executive Director, Management Accounting and Analysis","Dinah Mite Millikin, Eric Rucker, & Phillip Burger",This report is to certify that the work performed and that the salary distribution detailed herein is a reasonable reflection of effort for the specified reporting period and project(s). Access to the Grant & Contract Certification reports (GCCRs) requires the ASTRA Grant Generator role which should be requested through your department ASTRA administrator. Having this role change will ensure you receive critical communications concerning GCCRs. Please direct any questions you may have to efec,Services & Resources,Management Accounting and Analysis,"WITH CTE_PolicyData (Folder, PolicyRootFolder, UserName, RoleName, RowNbr, PolicyRoot) AS ( SELECT CASE WHEN cat.parentid is null THEN ' (Home)' ELSE cat.path end as Folder, CASE WHEN cat.PolicyRoot=1 THEN (CASE WHEN cat.parentid is null THEN ' (Home)' ELSE cat.path end) ELSE (CASE WHEN c2.parentid is null THEN ' (Home)' ELSE c2.path end) end as PolicyRootFolder, wk.UserName, wk.RoleName, wk.RowNbr, cat.PolicyRoot FROM catalog cat LEFT JOIN catalog c2 on c2.PolicyId=cat.PolicyId and c2.PolicyRoot=1 LEFT JOIN (SELECT pur.PolicyId, u.UserName, r.RoleName, Row_Number() OVER (PARTITION BY pur.PolicyId, u.UserName ORDER BY r.RoleName) as RowNbr FROM PolicyUserRole pur INNER JOIN Roles r on r.RoleId = pur.RoleId INNER JOIN Users u on u.UserId = pur.UserId WHERE u.UserName not in ('Everyone','NT AUTHORITY\SYSTEM','BUILTIN\Administrators')) as wk on wk.PolicyId = cat.PolicyId and cat.PolicyRoot = 1 WHERE cat.Type = 1 ) SELECT a.PolicyRootFolder, a.Folder, a.UserName, a.RoleName + CASE WHEN b.RoleName Is Not Null THEN ', '+ b.RoleName ELSE '' END + CASE WHEN c.RoleName Is Not Null THEN ', '+ c.RoleName ELSE '' END + CASE WHEN d.RoleName Is Not Null THEN ', '+ d.RoleName ELSE '' END + CASE WHEN e.RoleName Is Not Null THEN ' ...' ELSE '' END as Roles FROM CTE_PolicyData a LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=2) b on a.Folder = b.Folder AND a.UserName = b.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=3) c on a.Folder = c.Folder AND a.UserName = c.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=4) d on a.Folder = d.Folder AND a.UserName = d.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr>=5) e on a.Folder = e.Folder AND a.UserName = e.UserName WHERE a.RowNbr = 1 OR a.RowNbr Is Null ORDER BY a.PolicyRootFolder, a.PolicyRoot desc, a.UserName, a.Folder",EDWAdminMart,No
Report,Expense and Revenue Transfer Report,9/2/2002,9/3/2024, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays posted Expense and Revenue Journal Entries (Transaction Code 35) and Salary Expense Transfers (Transaction Code 70) for selected Org Codes for a selected date range. It is similar to the MyFinancial.desktop Posted Expense Transfer query template, but also includes Journal Entries initiated in other applications - e.g. FASTRANS. Grant Budgets are defined in this context as those with a Budget Type of ""05"".",Services & Resources,Enterprise Reporting and Analytics,"SELECT Distinct a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, v.student_name, fname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), 1, CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,mname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))+1,LEN(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,lname = SUBSTRING(v.student_name_lowc, 1, CHARINDEX(',',v.student_name_lowc)-1) , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, addr.perm_line_1, addr.perm_line_2, addr.perm_city, addr.perm_state, addr.perm_zip_5, addr.local_line_1, addr.local_line_2, addr.local_city, addr.local_state, addr.local_zip_5, addr.perm_phone_num, addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr and ab.appl_status_new in (15,16) ), r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END, v.running_start, v.college_in_hs FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key left join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr and ar.req_pathway = mc.major_pathway inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key LEFT JOIN sec.registration r ON v.system_key = r.system_key AND r.regis_yr=@year AND r.regis_qtr=@Quarter WHERE a.appl_branch = 1 and a.appl_type = '1' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15,16) order by v.student_name",EDWAdminMart,No
Report,Transfer Detail Report,11/2/2015,11/4/2006, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays transfer detail for the selected transaction.,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, FundCode, SUM(DebitSumAmt) AS DebitAmt, SUM(CreditSumAmt) AS CreditAmt FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') AND (AcctngMonth =@Acctmonth) AND (BienniumYear = @BienYear) GROUP BY AcctngMonth, FundCode ORDER BY AcctngMonth, FundCode",EDWAdminMart,No
Report,Custom Budget Index Report by OrgCode,9/2/2027,9/4/2018, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays customizable Budget Index information for selected Org Codes.,Services & Resources,Enterprise Reporting and Analytics,"SELECT Distinct a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, v.student_name, fname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), 1, CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,mname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))+1,LEN(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,lname = SUBSTRING(v.student_name_lowc, 1, CHARINDEX(',',v.student_name_lowc)-1) , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, addr.perm_line_1, addr.perm_line_2, addr.perm_city, addr.perm_state, addr.perm_zip_5, addr.local_line_1, addr.local_line_2, addr.local_city, addr.local_state, addr.local_zip_5, addr.perm_phone_num, addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr and ab.appl_status_new in (15,16) ), r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END, v.running_start, v.college_in_hs FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key left join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr and ar.req_pathway = mc.major_pathway inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key LEFT JOIN sec.registration r ON v.system_key = r.system_key AND r.regis_yr=@year AND r.regis_qtr=@Quarter WHERE a.appl_branch = 1 and a.appl_type = '1' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15,16) order by v.student_name",EDWAdminMart,No
Report,MyFD Expense Transfer Volume Report,9/3/2027,9/5/2016, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays metrics for a selected date range about the volume of Expense Transfers initiated/executed in MyFinancialDesktop, beginning with Dec-08-2008.",Services & Resources,Enterprise Reporting and Analytics,"DECLARE @fundingtable table ( f_systemkey decimal(9,0) , Funding_Source varchar(30) ) INSERT INTO @fundingtable SELECT DISTINCT s1.system_key , CASE WHEN mc.major_ss_inelig = 1 THEN 'Fee Based' WHEN s1.system_key IN ( SELECT DISTINCT r1.system_key FROM UWSDBDataStore.sec.registration r1 INNER JOIN UWSDBDataStore.sec.registration_courses rc1 ON r1.system_key = rc1.system_key AND r1.regis_yr = rc1.regis_yr AND r1.regis_qtr = rc1.regis_qtr AND rc1.course_branch = 1 INNER JOIN UWSDBDataStore.sec.sys_tbl_39_calendar st39 ON '0' + CAST(rc1.regis_yr AS char(4)) + CAST(rc1.regis_qtr AS char(1)) = st39.table_key WHERE r1.enroll_status = 12 AND ((rc1.request_status IN('A','C','R')) OR (rc1.request_status IN('W','Y','D') AND rc1.request_dt > st39.tenth_day)) AND r1.regis_qtr = @Quarter AND r1.regis_yr = @year AND CAST(r1.regis_yr AS char(4)) + CAST(r1.regis_qtr AS char(1)) + rc1.crs_curric_abbr + CAST(rc1.crs_number AS char(3)) + rc1.crs_section_id IN ( '20104B NURS350C', '20104B NURS430D', --Fall 2010 '20111B NURS407C', '20111B NURS410C', --Winter 2011 '20112B NURS403C', '20112B HLTH497D', --Spring 2011 '20113B HLTH497D','20113B NURS409F','20113B NURS409G','20113B NURS409H','20113B NURS495G','20113B NURS495H','20113B NURS495I', --Summer 2011 '20114B NURS430D', '20114B HLTH497D', '20114B NURS350C', --Fall 2011 '20121B NURS407C', '20121B NURS410C', --Winter 2012 '20122B NURS403C', '20122B HLTH497C', --Spring 2012 '20123B HLTH450A', '20123B NURS409F', '20123B NURS409G', '20123B NURS409H', --Summer 2012 '20124B HLTH497D', '20124B NURS350C', '20124B NURS430D', --Fall 2012 '20131B NURS407C', '20131B NURS410C', --Winter 2013 '20132B NURS403C', '20132B HLTH497C', --Spring 2013 '20133B HLTH497A', '20133B NURS409F', '20133B NURS409G', '20133B NURS409H' --Summer 2013 ) ) THEN 'University Center Everett' --NOTE there will need to be a separate WHEN...THEN statement for each year and quarter that the Everett Nursing program runs at least until Seattle comes up with some way to code them appropriately WHEN s1.system_key IN ( SELECT DISTINCT sg.system_key FROM UWSDBDataStore.sec.sr_student_grp sg WHERE sg.sg_group_cd = 'NEVT' AND @year *10 + @Quarter BETWEEN sg.sg_init_yr *10 + sg.sg_init_qtr AND sg.sg_exp_yr *10 + sg.sg_exp_qtr ) THEN 'University Center Everett' ELSE ' State Funded' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key AND s1cm.branch = 1 AND s1cm.index1 = 1 INNER JOIN UWSDBDataStore.sec.registration r ON s1.system_key = r.system_key INNER JOIN UWSDBDataStore.sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr AND s1cm.pathway = mc.major_pathway AND mc.major_last_yr IN ( SELECT MAX(mc1.major_last_yr) AS lastyr FROM UWSDBDataStore.sec.Sr_major_code mc1 WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway ) WHERE r.regis_yr = @year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 ----------------------------------------------------------------------------------------------------- --Headcount SELECT Dept = CASE WHEN scm.major_abbr = 'B NM' THEN 'Non-Matric' WHEN scm.major_abbr = 'B BUSX' THEN 'BUSINESS ADMINISTRATION (BELLEVUE)' WHEN scm.major_abbr = 'B NURS' AND ft.funding_source ='University Center Everett' THEN 'NURSING (EVERETT)' WHEN m.major_dept IN(865, 1073, 1091, 1092, 1093) THEN 'School of Science, Technology, Engr & Math' ELSE d.dept_full_nm END , Funding = ft.Funding_Source , r.regis_qtr , r.regis_yr , class_status = CASE WHEN s1.class = 1 AND m.major_dept = 864 THEN 'Undergrad-Freshman' --NOTE that dept code 864 is CUSP WHEN s1.class = 2 AND m.major_dept = 864 THEN 'Undergrad-Sophomore' WHEN s1.class = 3 AND m.major_dept = 864 THEN 'Undergrad-Junior' WHEN s1.class = 4 AND m.major_dept = 864 THEN 'Undergrad-Senior' WHEN s1.class = 5 AND m.major_dept = 864 THEN 'Undergrad-Fifth Year' WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 0 THEN 'Undergrad-Non-Matric' WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 2 THEN 'Graduate-Non-Matric' WHEN s1.class < 6 AND m.major_dept <> 864 THEN 'Undergrad' WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 0 THEN 'Undergrad' WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 2 THEN 'Graduate' WHEN s1.class = 8 THEN 'Graduate' ELSE 'UNKNOWN' END , class_status_order = CASE WHEN s1.class = 1 AND m.major_dept = 864 THEN 20 WHEN s1.class = 2 AND m.major_dept = 864 THEN 30 WHEN s1.class = 3 AND m.major_dept = 864 THEN 40 WHEN s1.class = 4 AND m.major_dept = 864 THEN 50 WHEN s1.class = 5 AND m.major_dept = 864 THEN 60 WHEN s1.class = 6 AND m.major_dept = 864 THEN 70 WHEN s1.class < 6 AND m.major_dept <> 864 THEN 10 WHEN s1.class = 6 AND scm.deg_level = 0 AND m.major_dept <> 864 THEN 10 WHEN s1.class = 6 AND scm.deg_level = 2 AND m.major_dept",EDWAdminMart,No
Report,Budget Profile Report,9/4/2006,9/5/2026, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays all detail information for a given budget number in a given biennium.,Services & Resources,Enterprise Reporting and Analytics,"SELECT BienniumYear, SUM(OpenBalAmt) AS BeginingBalance, SUM(DebitSumAmt) AS debit, SUM(CreditSumAmt) AS credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') GROUP BY BienniumYear ORDER BY BienniumYear",EDWAdminMart,No
Report,Budget Summary by OrgCode,9/5/2020,9/7/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays budgeted amounts, encumbrances, transaction totals, and budget balances for the selected Org Codes, by account code, during a reporting period.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_city ,addr.perm_state ,addr.local_state ,st30hs.high_school_name FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join UWSDBDataStore.sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join UWSDBDataStore.sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE appl_yr IN (@Year) AND appl_qtr IN (@Quarter) AND appl_branch = @branch AND appl_type = '1' AND high_sch_gpa >= @GPA AND ( CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END >= @ACT OR CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END >= @SATV OR CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END >= @SATM )",EDWAdminMart,No
Report,Transaction Summary by OrgCode,9/5/2020,9/7/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays individual transactions that impacted the budgets for the selected Org Codes, by account code, during a reporting period.",Services & Resources,Enterprise Reporting and Analytics,"SELECT Distinct a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, v.student_name, fname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), 1, CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,mname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))+1,LEN(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,lname = SUBSTRING(v.student_name_lowc, 1, CHARINDEX(',',v.student_name_lowc)-1) , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, addr.perm_line_1, addr.perm_line_2, addr.perm_city, addr.perm_state, addr.perm_zip_5, addr.local_line_1, addr.local_line_2, addr.local_city, addr.local_state, addr.local_zip_5, addr.perm_phone_num, addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr and ab.appl_status_new in (15,16) ), r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END, v.running_start, v.college_in_hs FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key left join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr and ar.req_pathway = mc.major_pathway inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key LEFT JOIN sec.registration r ON v.system_key = r.system_key AND r.regis_yr=@year AND r.regis_qtr=@Quarter WHERE a.appl_branch = 1 and a.appl_type = '1' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15,16) order by v.student_name",EDWAdminMart,No
Report,Transaction Detail,9/5/2020,9/7/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays a list of budget numbers that are not associated with a room in the GeoSIMS application. Budget type classes 0552 and 0557 are excluded by default because departments are not required to assign space for budgets in these type classes. The list is by home department OrgCode. For a home department with budget activity, the aim is to identify the space that the activity occurs in and then update the room profile in GeoSIMS with the budget number. The list of budgets on this r",Services & Resources,Enterprise Reporting and Analytics,"SELECT sr_adm_appl.appl_qtr , sr_adm_appl.appl_yr , sr_adm_appl.appl_branch , sr_adm_appl.appl_status_rsn , v.student_no , v.student_name_lowc , v.system_key , sr_adm_appl.appl_status , addr.e_mail_ucs , addr.e_mail_other , AppStatus = CASE WHEN sr_adm_appl.appl_status = 1 THEN 'Application Received -- Not Processed' WHEN sr_adm_appl.appl_status = 2 THEN 'Incomplete' WHEN sr_adm_appl.appl_status = 4 THEN 'File Complete and Sent to Department' WHEN sr_adm_appl.appl_status = 5 THEN 'HOLD- Requested Additional Documenation' WHEN sr_adm_appl.appl_status = 7 THEN 'Applicant Withdrew Application' WHEN sr_adm_appl.appl_status = 8 THEN 'Applicant is Denied Admission' WHEN sr_adm_appl.appl_status = 9 THEN 'Temp Hold- File is Complete and Sent to Evaluators' WHEN sr_adm_appl.appl_status = 10 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 12 THEN 'Applicant has Registered for Classes' WHEN sr_adm_appl.appl_status = 14 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 15 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 16 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 17 THEN 'Files Complete - Too Late for an Admissions Decision' WHEN sr_adm_appl.appl_status = 24 THEN 'Applicant Declined Our Offer of Admission' ELSE 'NON UWB App Status' END, (SELECT COUNT(*) AS Expr1 FROM sec.sr_adm_appl AS app_sea WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0)) AS seattle_appl_count, CASE WHEN (SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0) = 0 THEN 'No' ELSE 'Yes' END AS Seattle_app, CASE WHEN (SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2) = 0 THEN 'No' ELSE 'Yes' END AS Tacoma_app, CASE WHEN (select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16) = 0 THEN 'Seattle' WHEN (select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16) = 1 THEN 'Bothell' WHEN (select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16) = 2 THEN 'Tacoma' ELSE 'None' END AS Confirmed FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.addresses addr ON addr.system_key= v.system_key WHERE (sr_adm_appl.appl_branch = 1) AND (sr_adm_appl.appl_yr = @year) AND (sr_adm_appl.appl_qtr = @Quarter) AND (sr_adm_appl.appl_status_rsn = 91) AND sr_adm_appl.appl_type = '1'",EDWAdminMart,No
Report,Organization-Budget Relationship Report,10/7/2020,10/9/2008, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays the current and past relationships between budgets and user-selected org codes for a user-specified date.,Services & Resources,Enterprise Reporting and Analytics,"SELECT v.system_key, a.appl_yr, a.appl_qtr, v.student_name, -- addr.local_line_1, -- addr.local_line_2, -- addr.local_city, -- addr.local_state, -- addr.local_zip_5, -- addr.local_zip_4, addr.local_phone_num, addr.perm_phone_num, addr.e_mail_ucs, addr.e_mail_other, v.s1_gender, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' OR a.appl_type = '4' then 'UG (2yr/4yr)' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, v.s1_visa_type, v.resident, addr.perm_country, addr.parent_country, ReasonCode= CASE WHEN a.appl_status_rsn= 0 THEN 'Direct' WHEN a.appl_status_rsn= 90 THEN 'Conditional - ELP' WHEN a.appl_status_rsn= 91 THEN 'Conditional - ATP' WHEN a.appl_status_rsn= 92 THEN 'Conditional - English Proficiency in Progress' WHEN a.appl_status_rsn= 93 THEN 'B BUS - Bellevue' WHEN a.appl_status_rsn= 99 THEN 'Director Approval' ELSE '-' END, a.appl_status_rsn, v.student_no FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key WHERE a.appl_branch = 1 and mc.major_pathway = 0 and v.resident in (5,6) and v.s1_visa_type is not null and v.s1_visa_type <> '' AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter)",EDWAdminMart,No
Report,Consolidated Budget Status Report Menu,10/10/2020,10/12/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report supercedes all varieties of the discontinued paper-based Consolidated Budget Status Report AM28619 and AM28225. It can be used to view current budget status information by OrgCode or by Parent Budget/Grant.,Services & Resources,Enterprise Reporting and Analytics,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Consolidated Budget Status Report R1,10/10/2020,10/12/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays rejected and accepted transaction information for a given Originating Area Code (OAC) for a selected time period. A complete listing of OAC's is available in the MyFD Glossary. Please note that Rejected GL transactions are reflected in this report while Accepted GL Transactions are not.,Services & Resources,Enterprise Reporting and Analytics,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Consolidated Budget Status Report R2,10/10/2020,10/12/2009, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays rejected and accepted transaction information for a given Originating Area Code (OAC) for a selected time period. A complete listing of OAC's is available in the MyFD Glossary. Please note that Rejected GL transactions are reflected in this report while Accepted GL Transactions are not.,Services & Resources,Enterprise Reporting and Analytics,"select budgetnbr, budgetname, accountcode, accountname, trancodedesc, tranamount, trandesc, tranadditionaldesc, tranreference2 from ODS.sec.BudgetActivityDetail where bienniumyear = @BienniumYear and fasrunnbr =@fasno and trancode = '35' and tranreference2 = @ref2 order by budgetnbr, budgetname,accountcode",EDWAdminMart,No
Report,FAS Batch Summary Report,9/7/2015,9/9/2003, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays rejected and accepted transaction information for a given Originating Area Code (OAC) for a selected time period. A complete listing of OAC's is available in the MyFD Glossary. Please note that Rejected GL transactions are reflected in this report while Accepted GL Transactions are not.,Services & Resources,Procurement Customer Service,"SELECT Distinct a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, v.student_name, fname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), 1, CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,mname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))+1,LEN(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,lname = SUBSTRING(v.student_name_lowc, 1, CHARINDEX(',',v.student_name_lowc)-1) , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, addr.perm_line_1, addr.perm_line_2, addr.perm_city, addr.perm_state, addr.perm_zip_5, addr.local_line_1, addr.local_line_2, addr.local_city, addr.local_state, addr.local_zip_5, addr.perm_phone_num, addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr and ab.appl_status_new in (15,16) ), r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END, v.running_start, v.college_in_hs FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key left join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr and ar.req_pathway = mc.major_pathway inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key LEFT JOIN sec.registration r ON v.system_key = r.system_key AND r.regis_yr=@year AND r.regis_qtr=@Quarter WHERE a.appl_branch = 1 and a.appl_type = '1' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15,16) order by v.student_name",EDWAdminMart,No
Report,GL Summary Report,10/11/2001,10/12/2021, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"Displays the GL Beginning Balance Amounts, Debit Amounts, Credit Amounts and Ending Balance amounts for the selected GL Accounts and Fund Codes for the selected reporting period.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name, v.student_no, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, v.class, v.tot_lowd_transfer, v.tot_upd_transfer, r.regis_yr, regis_qtr = case when r.regis_qtr = 1 then 'Winter' when r.regis_qtr = 2 then 'Spring' when r.regis_qtr = 3 then 'Summer' when r.regis_qtr = 4 then 'Autumn' end, r.current_credits, total_credits = ((v.tot_graded_attmp + tot_nongrd_earn) - tot_deductible), addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, addr.local_line_1, addr.local_city, addr.local_zip_5, addr.perm_line_1, addr.perm_city, addr.perm_zip_5, rcm.regis_major_abbr FROM sec.student_1 v INNER JOIN sec.registration r on v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key AND r.regis_yr = rcm.regis_yr AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_mail_codes mc ON a.system_key = mc.system_key AND a.appl_no = mc.appl_no AND a.appl_qtr = mc.appl_qtr AND a.appl_yr = mc.appl_yr AND ( a.appl_status_rsn=91 OR mc.mail_code = 'BCT') WHERE r.enroll_status = 12 AND rcm.regis_branch = 1 AND rcm.regis_major_abbr in ( 'B PRE','B XPRE','B NM') AND r.regis_yr = @Year AND r.regis_qtr = @Quarter ORDER BY admitted_for_yr,student_name, r.regis_yr, regis_qtr",EDWAdminMart,No
Report,Budget Type Class Matrix,9/10/2013,9/12/2002, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,The Budget Type/Class Matrix is used to classify and group budgets by their funding sources and is maintained by the Office of Planning and Budgeting. This classification system facilitates fiscal reporting and internal monitoring of budgets and funding levels. The Matrix comprises four hierarchical levels of Budgets: Community > Family > Super Class > Type/Class. Budget Type/Class codes are assigned to budgets when they are created. Budget Type/Class code is a 4 digit code used to classi,Services & Resources,Enterprise Reporting and Analytics,"SELECT p.IdNbr, dc.PaycycleEndDate, dc.GTNNbr, dc.Amount, dc.SourceDesc FROM HumanResources_HEPPS.sec.DeductAndContributions dc INNER JOIN HumanResources_HEPPS.sec.Person p ON p.PersonKey = dc.PersonKey AND p.RecordEffBeginDate <= dc.PaycycleEndDate AND p.recordEffEndDate >= dc.PaycycleEndDate WHERE dc.GTNNbr = @GTN AND p.IdNbr = @EID ORDER BY dc.GTNNbr, dc.PaycycleEndDate",EDWAdminMart,No
Report,FAS Batch Summary Report - Accepted TC-30,9/11/2010,9/12/1930, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays Accepted TC-30 Transactions for a selected Originating Area Code and Date Range.,Services & Resources,Procurement Customer Service,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', BienniumYear, FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '35' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Se",EDWAdminMart,No
Report,FAS Batch Summary Report - Accepted TC-35,9/11/2010,9/12/1930, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays Accepted TC-35 Transactions for a selected Originating Area Code and Date Range.,Services & Resources,Procurement Customer Service,"SELECT FundCode, TransDate, TransDebitAmt, TransCreditAmt, TransRef1Text , TransRef2Text FROM GLDataMart.sec.TransGLUseTax WHERE GLAccountCode = '4801' and BienniumYear = @BienYear and TransBatchNbr = @FASNo and TransTypeCode=@TransCode ORDER BY FundCode, TransDate",EDWAdminMart,No
Report,FAS Batch Summary Report - Accepted TC-60,9/11/2010,9/12/1930, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays Accepted TC-60 Transactions for a selected Originating Area Code and Date Range.,Services & Resources,Procurement Customer Service,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,FAS Batch Summary Report - Accepted TC-65,9/11/2010,9/12/1930, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays Accepted TC-65 Transactions for a selected Originating Area Code and Date Range.,Services & Resources,Procurement Customer Service,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,GL Payroll Cash Account Biennium Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This report summarizes, as of last night, the debit and credit balances of the GL account 1160 for Payroll Cash Account, by different biennium.",Services & Resources,Enterprise Reporting and Analytics,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,FAS Adjustment Runs,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report would display transactions that are not included in main FAS payroll runs. That would give user a detailed list to see how many transactions that can be attributed to the reconciling difference from comparison report.,Services & Resources,Enterprise Reporting and Analytics,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,Payroll Adjustment Runs Record Detail,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows the list of transactions included in the FAS run you have clicked. By looking at the type of the documentation number (Such as a leading letter ""D"", or ""P"", etc) a payroll office staff would be able to tell what type of adjustment in the transaction.",Services & Resources,Enterprise Reporting and Analytics,"declare @UserKey smallint /* -- Parameters used for testing -- declare @ReportUser varchar(50) declare @StartDate datetime declare @EndDate datetime set @ReportUser = 'netid\alchin'; set @StartDate = '05/15/2012' set @EndDate = '01/15/2013' */ set @StartDate = Dateadd(day,-1,@StartDate); set @EndDate = Dateadd(day, 1, @EndDate); select @UserKey = UserKey from EDWAdminMart.sec.RSUser where UserName = @ReportUser ;with cte_TopRpts as ( SELECT r.ReportName , r.ReportFolder , r.ReportKey , count(l.ExecutionLogKey) as RptRunCount , max(l.TimeStart) as RptLastRun FROM EDWAdminMart.sec.RSExecutionLog l JOIN EDWAdminMart.sec.RSReport r ON l.ReportKey = r.ReportKey WHERE l.UserKey = @UserKey and l.TimeStart between @StartDate and @EndDate and l.StatusKey = 1 and r.ReportDeleted = 0 group by r.ReportName , r.ReportFolder , r.ReportKey ) -- this version will return the last exec detail for the top N reports SELECT r.RptOrd , r.ReportName , r.ReportFolder , r.ReportKey , r.RptRunCount, r.RptLastRun , l.TimeStart , l.TimeEnd , l.Parameters from ( select top 10000 *, -- row_number() over(order by RptRunCount desc) RptOrd -- ordering # by report execution row_number() over(order by RptLastRun desc) RptOrd -- ordering # by last report run from cte_TopRpts order by RptLastRun desc -- order by last report run -- order by RptRunCount desc -- order by most executed report ) r join EDWAdminMart.sec.RSExecutionLog l ON l.ReportKey = r.ReportKey and l.TimeStart = (select max(TimeStart) from EDWAdminMart.sec.RSExecutionLog b where b.ReportKey = l.ReportKey and b.StatusKey = 1 and b.UserKey = @UserKey) where l.TimeStart between @StartDate and @EndDate order by r.RptOrd, l.TimeStart",EDWAdminMart,No
Report,Legacy GL Payroll Cash Activities in a Month: Major Payroll Runs,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This report shows the comparison between the summaries of GL payroll cash account processed by FAS, and payroll data processed by HEPPS. The upper portion of the report lists all FAS runs that process payroll related transactions coming from HEPPS. The lower portion of the report brings the payroll summarization, grouped by categories designed by payroll office, such as direct deposit, hand-drawn check, cancellation and overpayment. The amount in Reconciling Difference shows the result of com",Services & Resources,Enterprise Reporting and Analytics,"select budgetnbr, budgetname, accountcode, accountname, trancodedesc, tranamount, tranreference2, trandesc, tranadditionaldesc from ODS.sec.BudgetActivityDetail where bienniumyear = @bienyear and fasrunnbr =@fasno and tranreference1 = @ref1 and trancode = '44' order by budgetnbr, budgetname",EDWAdminMart,No
Report,GL Payroll Cash Account  Daily Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This report provides summarized amounts by FAS run in a month relating to GL Payroll Cash Account 1160. If you need to see detailed list of transaction, please go to reconcilation report and drill through from there. The link below will bring you to the Hepps Payroll Summaries report. You can choose a calendar year and month on that report, and see reconciling report from there.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name, student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, mmd.mm_major_abbr, class = case when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' end, addr.e_mail_ucs, addr.e_mail_other, Registered_Current = CASE WHEN EXISTS (SELECT r.system_key FROM sec.registration_courses r WHERE r.regis_yr=@Current_Year and r.regis_qtr=@Current_Quarter and r.course_branch = 1 and r.system_key = v.system_key) THEN 'Yes' ELSE 'No' END FROM sec.student_1 v LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @Current_Year AND mm_qtr = @Current_Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr NOT in ('B PRE', 'B XPRE') AND v.system_key IN ( SELECT v.system_key FROM sec.student_1 v INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key INNER JOIN ( SELECT DISTINCT rc.system_key FROM sec.registration_courses rc WHERE rc.course_branch=1 AND rc.regis_yr=@year AND rc.regis_qtr=@Quarter AND rc.request_status in ('A','C','R')) X ON X.system_key = v.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @year AND mm_qtr = @Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr in ('B PRE', 'B XPRE') )",EDWAdminMart,No
Report,GL Payroll Cash Account  Monthly Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows GL 1160 summaries of the month, grouped by transaction codes. The links in the month column will lead to daily summaries of the transaction relating to the account.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name, student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, mmd.mm_major_abbr, class = case when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' end, addr.e_mail_ucs, addr.e_mail_other, Registered_Current = CASE WHEN EXISTS (SELECT r.system_key FROM sec.registration_courses r WHERE r.regis_yr=@Current_Year and r.regis_qtr=@Current_Quarter and r.course_branch = 1 and r.system_key = v.system_key) THEN 'Yes' ELSE 'No' END FROM sec.student_1 v LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @Current_Year AND mm_qtr = @Current_Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr NOT in ('B PRE', 'B XPRE') AND v.system_key IN ( SELECT v.system_key FROM sec.student_1 v INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key INNER JOIN ( SELECT DISTINCT rc.system_key FROM sec.registration_courses rc WHERE rc.course_branch=1 AND rc.regis_yr=@year AND rc.regis_qtr=@Quarter AND rc.request_status in ('A','C','R')) X ON X.system_key = v.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @year AND mm_qtr = @Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr in ('B PRE', 'B XPRE') )",EDWAdminMart,No
Report,GL Payroll Cash Account  Monthly Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report lists monthly summaries of the biennium selected for the GL account 1160.,Services & Resources,Enterprise Reporting and Analytics,"/* --Variables for testing --DECLARE @startdate DATETIME, @enddate DATETIME , @jvbud_user VARCHAR(8) -- SET @startdate = '1/1/2013' -- SET @enddate = '3/25/2014' -- SET @jvbud_user = 'JVBO276 ' ------------Derive all Date Variables in the Following Section */ DECLARE @sfy char(4), @sby char(4), @sam char(2), @ecalyear char(4), @ecalmonth char(2), @efy char(4), @eby char(4), @eam VARCHAR(2), @jvbud VARCHAR(8), @searchtype CHAR(6) SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END SET @sby = (@sfy-(@sfy %2)-1) SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18 WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6 END SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end SET @sam = CASE WHEN LEN(@sam) = 1 THEN '0' + @sam ELSE @sam END SET @ecalyear = YEAR(@enddate) SET @ecalmonth = MONTH(@enddate) SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END SET @eby = (@efy-(@efy %2)-1) SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18 WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6 ELSE 27 END SET @eam = CASE WHEN LEN(@eam) = 1 THEN '0' + @eam ELSE @eam END --Remove the dash character from the @jv variable if entered with a budget# SET @jvbud = UPPER(@jvbud_user) SET @jvbud = CASE WHEN SUBSTRING(@jvbud,3,1)='-' AND LEFT(@jvbud,2)!='jv' THEN LEFT(@jvbud,2) + RIGHT(@jvbud,4) WHEN LEN(@jvbud)='5' THEN 'JV' + (@jvbud) ELSE RTRIM(LTRIM(@jvbud)) END SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN 'x' WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud,2)!='JV' THEN 'b' WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud,2)= 'JV' THEN 'j' ELSE 'x' END --SELECT @searchtype --SELECT @jvbud --select @sby, @sam, @eby, @eam IF OBJECT_ID('tempdb..#T1') IS NOT NULL DROP TABLE #T1 CREATE TABLE #T1 (Bienniumyear CHAR(4), TranReference2 CHAR (8)) INSERT INTO #T1(BienniumYear, TranReference2) ( SELECT DISTINCT BienniumYear, BAD.TranReference2 FROM sec.BudgetActivityDetail BAD WHERE (BAD.BudgetNbr = @jvbud AND LEFT(BAD.TranReference2,2)='JV' AND BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND BAD.TranPostingDate BETWEEN @startdate AND @enddate AND @searchtype = 'b' ) ) SELECT BAD.BienniumYear, BAD.BudgetNbr, BudgetName, AccountCode, OrgCode, OrgName, TranAmount, TranCode, TranDate1, TranPostingDate, BAD.TranReference2, TranReference3, TranDesc, TranFTE, PositionNbr, BAD.TDPrimaryKey, AppTranOriginating FROM sec.BudgetActivityDetail BAD LEFT JOIN #T1 ON BAD.TranReference2 = #T1.TranReference2 WHERE ( (@searchtype = 'b' AND #T1.TranReference2 IS NOT NULL) OR (@searchtype = 'j' AND @jvbud = BAD.TranReference2) ) and BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND TranPostingDate BETWEEN @startdate AND @enddate AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam) ORDER BY BAD.TranReference2, BAD.BudgetNbr",EDWAdminMart,No
Report,Hepps Payroll Monthly Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report summarizes HEPPS payroll activities by calendar year and month. The link in the month column will lead you to reconciling report for GL 1160 summaries from FAS and payroll summaries from HEPPS.,Services & Resources,Enterprise Reporting and Analytics,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '65' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' AND ISNULL(LEFT(CTIAccountCode,2),0) = CASE WHEN TranCode='65' THEN '96' WHEN TranCode='60' THEN '21' ELSE 0 END ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', Prior",EDWAdminMart,No
Report,Hepps Payroll and GL Payroll Cash Account,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This is a menu page for reports going to ""GL 1160 and payroll activity reconciling"" or ""GL summaries"". The link Hepps Payroll Monthly Summaries and Reconciliation goes to reports that compare the monthly summaries of GL account 1160 and Hepps payroll summaries. The link ""GL Payroll Cash Account Biennium Summary and Details"" goes to reports that are summaries of the GL account 1160 by fund, transaction code, as well as other grouping categories.",Services & Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report provides summarized list at the transaction codes (TC) level for each FAS daily run in the month. TC 35 is for payment and adjustment. TC 44 records Use Tax liability coming from accrued accounting entries. TC 50s are Use Tax entries from direct payment of purchased goods.,Services & Resources,Enterprise Reporting and Analytics,"SELECT sr_adm_appl.appl_qtr , sr_adm_appl.appl_yr , sr_adm_appl.appl_branch , sr_adm_appl.appl_status_rsn , v.student_no , v.student_name_lowc , v.system_key , sr_adm_appl.appl_status , sr_adm_appl.adv_reg_prt_dt , registration.regis_yr , registration.regis_qtr , registration.special_program AS Expr1 , registration.advising_date , registration.advising_type , registration.regis_class , addr.e_mail_ucs , addr.e_mail_other , AppStatus = CASE WHEN sr_adm_appl.appl_status = 1 THEN 'Application Received -- Not Processed' WHEN sr_adm_appl.appl_status = 2 THEN 'Incomplete' WHEN sr_adm_appl.appl_status = 4 THEN 'File Complete and Sent to Department' WHEN sr_adm_appl.appl_status = 5 THEN 'HOLD- Requested Additional Documenation' WHEN sr_adm_appl.appl_status = 7 THEN 'Applicant Withdrew Application' WHEN sr_adm_appl.appl_status = 8 THEN 'Applicant is Denied Admission' WHEN sr_adm_appl.appl_status = 9 THEN 'Temp Hold- File is Complete and Sent to Evaluators' WHEN sr_adm_appl.appl_status = 10 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 12 THEN 'Applicant has Registered for Classes' WHEN sr_adm_appl.appl_status = 14 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 15 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 16 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 17 THEN 'Files Complete - Too Late for an Admissions Decision' WHEN sr_adm_appl.appl_status = 24 THEN 'Applicant Declined Our Offer of Admission' ELSE 'NON UWB App Status' END , ( SELECT COUNT(*) AS Expr1 FROM sec.sr_adm_appl AS app_sea WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0 ) = 0 THEN 'No' ELSE 'Yes' END AS Seattle_app , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2 ) = 0 THEN 'No' ELSE 'Yes' END AS Tacoma_app , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14) ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10,14) ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) ) = 2 THEN 'Tacoma' /* WHEN ((select appl_branch from sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14)) AND (select appl_branch from sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) )) THEN 'Seattle and Tacoma'*/ --Build Case for Seattle- And Tacoma Acceptance --Build acceptance for all three campus ELSE 'None' END AS Accepted , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16 ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16 ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16 ) = 2 THEN 'Tacoma' ELSE 'None' END AS Confirmed ,HST_Received = appl_doc_rcvd_dt ,Current_Credits = registration.current_credits ,mpt.test_dt ,mpt.test_type ,mpt.test_score FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key AND registration.regis_yr = rcm.regis_yr AND registration.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN ( SELECT * FROM sec.sr_adm_applicant_docs WHERE appl",EDWAdminMart,No
Report,Use Tax Liability Biennium Summaries,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This report summarizes total amounts, as of last night, the debit and credit balances of the GL account 4801 for Use Tax by biennium.",Services & Resources,Enterprise Reporting and Analytics,SELECT * FROM Report WHERE ReportCodeNbr = @rptcd,EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows all transactions relating to the requisition number. The link will drill through to reports showing transaction details, including budget number, budget name, object code, and the input not, if there is one, from data entry. There are chances where a related detail record may not exist in the transaction data. In that case, it would be an empty report.",Services & Resources,Enterprise Reporting and Analytics,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows information from the original transaction details, including the note, if any, from the data entry.",Services & Resources,Enterprise Reporting and Analytics,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows detail data going beyongd just general leadger transaction, to look up the budget number, budget name, object code, object description, and input note that are related to the combination of FAS run number, JV number or document number and transaction code you are seaching. However, there are chances where the related record could not be found. In that case, one or all fields may be empty on the report.",Services & Resources,Enterprise Reporting and Analytics,"SELECT v.system_key, v.student_name, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, status_dt = convert(char(10), a.appl_status_dt,110), s.appl_stat_descrip, Case when r.enroll_status = 12 then 'Yes' end as Registered, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, rcvd_dt = convert(char(10),a.appl_rcvd_dt,110), ar.req_major_abbr, mc.major_full_nm, addr.local_line_1, addr.local_city, addr.local_state, addr.local_zip_5 FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key left join sec.registration r on a.system_key = r.system_key and a.appl_yr = r.regis_yr and a.appl_qtr = r.regis_qtr WHERE a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date",EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"The report shows all the transactions relating to this reference. It can be a JV or document number. If it is a JV, they are all transaction in the JV batch. If it is a check number or document number, the transactions are processed under that same reference number. Both the debit and credit entries to different GL accounts are listed in the report.",Services & Resources,Enterprise Reporting and Analytics,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '2600004000' SET @budgetgroup = '6GD' SET @calmonth = '5' SET @calyear = 2011 SET @budgetperiod = 'B' */ DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = convert(int,@fiscalyear)%2 /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */ DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4), @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@fiscalyear %2) - 1 select @fiscalYearToUse = convert(char(4),(CASE WHEN @evenoddfy =0 and @fiscalyear < (SELECT max(convert(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN @fiscalyear+1 ELSE @fiscalyear end)) IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6),Budgetname varchar(50), BudgetStatusCode char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN Insert into #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptName, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.fiscalyear , BI.OrgCode , LEFT(BI.OrgCode,7) , OD.OrgDeptName , BTC.budgetsuperclasscode , BTC.budgettypecode , BTC.budgetclasscode , BI.budgetnbr , BI.budgetname , BI.BudgetStatusCode , CASE WHEN BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R' THEN 'Gifts and Discretionary' WHEN BTC.budgetsuperclasscode = 'ROF40' AND BI.RFAcctngCode != 'R' THEN 'Self Sustaining - Auxillary Ed Activities' WHEN (BTC.budgetsuperclasscode = 'ROF70' AND BI.RFAcctngCode != 'R' ) OR (BI.BudgetTypeCode = '56' and BI.BudgetClassCode = '04') THEN 'Self Sustaining - Service Funds' WHEN BI.BudgetTypeCode = '05' and BI.BudgetClassCode = '52' THEN 'Clinical Medicine Fund' ELSE BTC.budgetsuperclasscode END AS 'BudgetGroup', CASE WHEN BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R' THEN '6GD' WHEN BTC.budgetsuperclasscode = 'ROF40' AND BI.RFAcctngCode != 'R' THEN '8SAEA' WHEN (BTC.budgetsuperclasscode = 'ROF70' AND BI.RFAcctngCode != 'R' ) OR (BI.BudgetTypeCode = '56' and BI.BudgetClassCode = '04') THEN '9SSSF' WHEN BI.BudgetTypeCode = '05' and BI.BudgetClassCode = '52' THEN '9CMF' ELSE Budgetsuperclasscode END AS 'BudgetGroupCode' FROM sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD on LEFT(BI.OrgCode,7) = OD.OrgDeptLevel WHERE ( (BTC.BudgetSuperClassCode IN ('ROF40', 'ROF70')) OR (BTC.BudgetTypeCode = '56' AND BTC.BudgetClassCode = '04') OR (BTC.BudgetTypeCode = '05' AND BTC.BudgetClassCode = '52') OR (BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R')) AND BTC.FiscalYear = @fiscalYearToUse AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgDeptCode , BTC.OrgDeptName , btc.OrgCode , BTC.BudgetGroup , BTC.BudgetGroupCode , BTC.BudgetNbr , BTC.BudgetName , BTC.BudgetStatusCode , (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) AS 'TYPE_CLASS' , SUM(CASE WHEN FS.TranCode ='32' AND FS.ObjSubObjCode = '9788' THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'FundBeginningBalance', SUM(CASE WHEN (/*Revenue*/ ((FS.TranCode IN ('30', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73')) OR(FS.Trancode = '32' AND FS.ObjSubObjCode != '9788')) AND LEFT(FS.ObjSubObjCode, 1) = '9') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'Revenue' , /*Expenditures without encumbrances*/ SUM(CASE WHEN (FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) != '9') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'Expense', SUM(CASE WHEN (/*Revenue*/ FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) = '9') OR (/*Expenses*/ FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) != '9') THEN (FS.SummaryAmt * -",EDWAdminMart,No
Report,Use Tax Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report drills down to the summarizations of the Use Tax account by different funds in the month selected. The link in the accounting month column will lead to the report for daily transaction summaries in the month.,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, TransTypeCode AS TransCode, CASE WHEN TransTypeCode = 35 THEN 'Adjustment' WHEN TransTypeCode = 50 THEN 'Stipend' WHEN TransTypeCode= 70 THEN 'Salary' WHEN TransTypeCode= 71 THEN 'Benefits' END AS 'transdesc', SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, TransTypeCode ORDER BY TransTypeCode",EDWAdminMart,No
Report,Use Tax Payment Liability,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,This report summarizes the debit and credit balances of the GL account 4801 for Use Tax by accounting month for the biennium selected. The color chart on the report shows the monthly balance comparisons between the debit (payment and adjustments) and credit (tax liabilities) of the account.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END , 'SAT' = CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 ,st30hs.high_school_name FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE a.appl_yr IN(@Year) AND a.appl_qtr IN (@Quarter) AND a.appl_branch = @branch AND a.appl_type = '1' AND (a.resident NOT IN ('5', '6') AND addr.perm_state <> 'WA' ) AND high_sch_gpa >= 3.4 AND ( CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END >= 1090 OR CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END >= 23 )",EDWAdminMart,No
Report,Use Tax JV List / Account Payable Accrual,9/12/2005,10/1/2024, Dan Schaaf,BK Chen\Alexis Chin,"This report displays one of 3 different types of Use Tax transactions: If you had clicked a TC 35, the report would show you a link to a JV batch via the JV number. If you had clicked a TC 44, it would show a link of requisition number for all entries in the requisition. If it was from a TC 50, the link would be a check number. Click the linked reference would bring you more detail.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_no ,Student_Name = s1.student_name_lowc ,r.regis_yr ,r.regis_qtr ,yr_qtr = CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1)) ,Academic_Year = CASE WHEN r.regis_qtr = 1 THEN CAST((r.regis_yr - 1) AS char(4)) + '-' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 2 THEN CAST((r.regis_yr - 1) AS char(4)) + '-' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 3 THEN CAST(r.regis_yr AS char(4)) + '-' + CAST((r.regis_yr + 1) AS char(4)) WHEN r.regis_qtr = 4 THEN CAST(r.regis_yr AS char(4)) + '-' + CAST((r.regis_yr + 1) AS char(4)) END ,Academic_Quarter = CASE WHEN r.regis_qtr = 1 THEN 'Winter ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 2 THEN 'Spring ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 3 THEN 'Summer ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 4 THEN 'Autumn ' + CAST(r.regis_yr AS char(4)) ELSE 'ERROR' END ,Application_Type = CASE WHEN a.appl_type = '1' THEN 'First-Years' WHEN a.appl_type IN('2','4') THEN 'Transfers' WHEN a.appl_type = '5' THEN '5th Years' WHEN a.appl_type = 'G' THEN 'Graduates' WHEN a.appl_type IN('E','7') THEN 'Graduate Non-Matric' WHEN a.appl_type IN('N','6') THEN 'Non-Matric' WHEN a.appl_type = 'R' THEN 'Returning Undergrad' WHEN s1cm.deg_level <2 THEN 'Continuing Undergrad' WHEN s1cm.deg_level >=2 THEN 'Continuing Graduate' ELSE 'Error' END ,Age = CASE WHEN s1.birth_dt >= st39.tenth_day OR s1.birth_dt IS NULL THEN NULL WHEN MONTH(s1.birth_dt) > MONTH(st39.tenth_day) OR (MONTH(s1.birth_dt) = MONTH(st39.tenth_day) AND DAY(s1.birth_dt) > DAY(st39.tenth_day)) THEN DATEDIFF(YY, (s1.birth_dt), (st39.tenth_day)) -1 ELSE DATEDIFF(YY, (s1.birth_dt), (st39.tenth_day)) END ,Gender = CASE WHEN s1.s1_gender ='M' THEN 'Male' WHEN s1.s1_gender = 'F' THEN 'Female' ELSE 'Unknown' END ,Education_Level = CASE WHEN s1cm.deg_level <2 THEN 'Undergraduate' WHEN s1cm.deg_level >=2 THEN 'Graduate' ELSE 'Error' END ,Class = CASE WHEN s1.class = 1 THEN '1 (First-Year)' WHEN s1.class = 2 THEN '2 (Sophomore)' WHEN s1.class = 3 THEN '3 (Junior)' WHEN s1.class = 4 THEN '4 (Senior)' WHEN s1.class = 5 THEN '5 (Fifth-Year)' WHEN s1.class = 6 THEN '6 (Non-Degree)' WHEN s1.class = 8 THEN '8 (Graduate)' ELSE 'Unknown' END ------------------------------------ ------------Program Data------------ ------------------------------------ ,s1cm.major_abbr ,mc.major_full_nm ,Dept = CASE WHEN dc.dept_abbr ='B VIS' THEN 'NONE' ELSE dc.dept_abbr END ,Dept_Name = CASE WHEN dc.dept_full_nm ='BOTHELL CAMPUS VISITING' THEN 'NONE' ELSE dc.dept_full_nm END ------------------------------- ---------Other Data-------- ------------------------------- ,HS_GPA = s2.high_sch_gpa ,Transfer_College_GPA = CASE WHEN s2.sr_col_gpa > 0 THEN s2.sr_col_gpa WHEN s2.sr_col_gpa = 0 AND s2.jr_col_gpa > 0 THEN s2.jr_col_gpa ELSE NULL END ,Last_School_Attended = CASE WHEN s1.last_sch_type = 1 THEN st30.high_school_name ELSE st02.institution_name END ,s1.s1_high_satv ,s1.s1_high_satm ,s1.s1_high_act ,s1.s1_last_toefl ,s1.s1_last_toefl_typ ,s1.s1_visa_type ,s1.s1_ins_sevis_id ,st33.home_addr_descrip ,addr.perm_country ,Registered_Credit_Hours = r.current_credits ,addr.e_mail_ucs ,addr.e_mail_other ,Qtr_GPA = CASE WHEN t.qtr_graded_attmp >0 THEN t.qtr_grade_points/t.qtr_graded_attmp ELSE NULL END ,Cumul_GPA = CASE WHEN s1.tot_graded_attmp >0 THEN s1.tot_grade_points/s1.tot_graded_attmp ELSE NULL END ,Qtr_attmp_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned ,Qtr_earned_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned - t.qtr_deductible ,t.scholarship_type ,st45.scholar_descrip FROM sec.student_1 s1 INNER JOIN sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key AND s1cm.index1 =1 AND s1cm.branch =1 INNER JOIN sec.registration r ON s1.system_key = r.system_key INNER JOIN sec.student_2 s2 ON s1.system_key = s2.system_key INNER JOIN sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr AND s1cm.pathway = mc.major_pathway AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr) FROM sec.Sr_major_code mc1 WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway) INNER JOIN sec.sys_tbl_39_calendar st39 ON ('0' + CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1))) = st39.table_key INNER JOIN sec.Sr_dept_code dc ON mc.major_dept = dc.dept_code AND mc.major_branch = dc.dept_branch INNER JOIN sec.addresses addr ON s1.system_key = addr.system_key LEFT JOIN sec.sr_adm_appl a ON r.system_key = a.system_key AND r.regis_yr = a.appl_yr AND r.regis_qtr = a.appl_qtr LEFT JOIN sec.Sys_tbl_33_home_addr_by_code st33 ON st33.table_key = CASE WHEN LEN(s1.home_addr_code)= 4 THEN '00' + CAST(s1.home_addr_code AS char(4)) WHEN LEN(s1.home_addr_code)= 3 THEN '000' + CAST(s1.home_addr_code AS char(3)) ELSE '000000' END LEFT JOIN sec.sys_tbl_02_ed_inst_info st02 ON s1.last_sch_code = CAST(st02.table_key AS int) LEFT JOIN sec.Sys_tbl_30_highschool st30 ON s1.la",EDWAdminMart,No
Report,Variable Reporting Period Budget Summary,10/1/2011,10/3/2002, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report displays the project period budgeted amount, encumbrances, transaction totals, and budget balances for a selected budget or static MyFD budget list for a selected date range.",Services & Resources,Enterprise Reporting and Analytics,--updated by summyd on 31 January 2014 to include ACT scores per CSS request. Also fixed code to pull all pathways for the most uptodate sr_major_code record. ----also changed s1.tot_2yr_transfer to s1.tot_lowd_transfer and s1.tot_4yr_transfer to s1.tot_u,EDWAdminMart,No
Report,Forecasting Template by Fiscal Year and OrgCode,10/5/2010,10/6/2029, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report template displays budgeted and actual amounts through the selected reporting period for both fiscal years of a biennium for all budgets within the selected orgcodes and budget categories. To use this report as a forecasting template, choose XML file with report data from the Export dialog above – the report will then open in an Excel spreadsheet with additional columns added to accommodate data entry of local encumbrances/receivables that are not reflected in FIN and forecasting summ",Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef2Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @bienyear and TransBatchNbr = @fasno and TransTypeCode IN ('35','50') and TransRef2Text= @ref2 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Hepps Payroll Monthly Summaries,9/7/2016,9/9/2004, Dan Schaaf,BK Chen\Dinah Mite Millikin,This report summaries montly payment amounts shown in Hepps Actual Distribution.,Services & Resources,Enterprise Reporting and Analytics,"SELECT coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) AS Appl_level, coalesce (T1.ethnicity, T2.ethnicity, T3.ethnicity, T4.ethnicity, T5.ethnicity, T6.ethnicity) AS Ethnicity, T1.Current_Year_Applied_Count , CASE WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Freshman' THEN '1' WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Transfer' THEN '2' WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Graduate' THEN '3' ELSE '0' END AS Order_1 , isnull (T2.Previous_Year_Applied_Count, 0) as Previous_Year_Applied_Count ,CAST ( (isnull (T1.Current_Year_Applied_Count, 0) - isnull (T2.Previous_Year_Applied_Count, 0)) AS FLOAT ) / isnull (T1.Current_Year_Applied_Count,1) as Change_Applied , isnull (T3.Current_Year_Admitted_Count, 0) as Current_Year_Admitted_Count , isnull (T4.Previous_Year_Admitted_Count, 0) as Previous_Year_Admitted_Count , CAST (( isnull (T3.Current_Year_Admitted_Count, 0) - isnull (T4.Previous_Year_Admitted_Count, 0)) AS FLOAT) / isnull (T3.Current_Year_Admitted_Count, 1) as Change_Admitted , isnull (T5.Current_Year_Confirmed_Count, 0) as Current_Year_Confirmed_Count , isnull (T6.Previous_Year_Confirmed_Count, 0) as Previous_Year_Confirmed_Count , CAST ( (isnull (T5.Current_Year_Confirmed_Count, 0) - isnull (T6.Previous_Year_Confirmed_Count, 0)) AS FLOAT) / isnull (T5.Current_Year_Confirmed_Count, 1) AS Change_Confirmed FROM ( SELECT --Column1 = cast(a.appl_yr as varchar(4)) + ' Applications as of: ' + convert(nvarchar(10),@AppDate,101), count(a.system_key) AS Current_Year_Applied_Count , Appl_level = case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, ethnicity = addr.perm_country from sec.sr_adm_appl a inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr inner join sec.student_1 v on v.system_key = a.system_key left join sec.addresses addr on v.system_key = addr.system_key where a.appl_qtr = @Quarter and a.appl_yr = @year and a.appl_branch = @branch AND v.s1_visa_type = 'F1' and b.trans_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.trans_dt <= @AppDate and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) GROUP BY case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, addr.perm_country )T1 full JOIN ( SELECT --Column1 = cast(a.appl_yr as varchar(4)) + ' Applications as of: ' + convert(nvarchar(10),@AppDate,101), ISNULL (count(a.system_key), 0) AS Previous_Year_Applied_Count , Appl_level = case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, ethnicity = addr.perm_country from sec.sr_adm_appl a inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr inner join sec.student_1 v on v.system_key = a.system_key left join sec.addresses addr on v.system_key = addr.system_key where a.appl_qtr = @Quarter and a.appl_yr = (@year-1) and a.appl_branch = @branch AND v.s1_visa_type = 'F1' and b.trans_dt = (Select max(trans_dt) from sec.sr_adm_stat_chg b where b.trans_dt <= (@PrevAppDate) and b.system_key = a.system_key and b.appl_no = a.appl_no and b.appl_yr = a.appl_yr and b.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) GROUP BY case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, addr.perm_country",EDWAdminMart,No
Report,Comparison of SDB & PNB Organization Hierarchies,10/2/2018,10/4/2009,Information Management,Ann Wunderlin,"Displays the Student Database (SDB) and Planning & Budgeting (PNB) organization codes and names based on links defined by the Financial Accounting System (FAS) org_code that exists in both systems. The comparison is between all campuses, colleges and departments from SDB records, and the campuses, colleges and departments associated with an academic unit in the current quarter from the PNB.",Healthcare,Enterprise Reporting and Analytics,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '3060001020' SET @budgetgroup = '7LNur' SET @calmonth = '1' SET @calyear = 2012 SET @budgetperiod = 'f' */ DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = @fiscalyear %2 /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */ DECLARE @acctngmonth INT SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4), @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@evenoddfy) - 1 select @fiscalYearToUse = convert(char(4),(CASE WHEN @evenoddfy =0 and @fiscalyear < (SELECT max(convert(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN @fiscalyear+1 ELSE @fiscalyear end)) IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6),Budgetname varchar(50), BudgetStatusCode char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN Insert into #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptName, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.fiscalyear, BI.OrgCode, LEFT(BI.OrgCode,7), OD.OrgDeptName, BTC.budgetsuperclasscode, BTC.budgettypecode, BTC.budgetclasscode, BI.budgetnbr, BI.budgetname, BI.BudgetStatusCode, 'Loans To Students - Revolving' as 'BudgetGroup', '7LNur' as 'BudgetGroupCode' from sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD on LEFT(BI.OrgCode,7) = OD.OrgDeptLevel WHERE BTC.BudgetSuperClassCode in ('ROF31', 'ROF35') AND BI.RFAcctngCode != 'R' AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgDeptCode, BTC.OrgDeptName, BTC.OrgCode, BTC.BudgetGroup, BTC.BudgetGroupCode, BTC.BudgetNbr, BTC.BudgetName, BTC.BudgetStatusCode, (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) as 'TYPE_CLASS', SUM(CASE WHEN ( FS.TranCode ='32' AND FS.ObjSubObjCode = '9788' ) THEN (FS.SummaryAmt * -1) ELSE 0 END) AS 'FundBeginningBalance', SUM(CASE WHEN (--Revenue ((FS.TranCode IN ('30','35','36','44','50','52','60','61','62','65','70','73')) OR (FS.Trancode = '32' and FS.ObjSubObjCode != '9788')) AND LEFT(FS.ObjSubObjCode,1) = '9' ) THEN (FS.SummaryAmt * -1) ELSE 0 END) AS 'Revenue', --Expenditures without encumberances SUM(CASE WHEN ( FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) != '9' ) THEN (FS.SummaryAmt*-1)ELSE 0 END) as 'Expense', Sum(Case WHEN (--Revenue FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) = '9') OR (--Expenses FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) != '9') THEN (FS.SummaryAmt*-1) ELSE 0 END) as 'TotalActuals', --Encumberances, which are not included in the final balance SUM(CASE WHEN FS.TranCode IN ('40', '41','42','43','51','53') THEN (FS.SummaryAmt*-1)ELSE 0 END) AS 'Encumbrances' FROM #BudgetGroups BTC INNER JOIN sec.AcctngMonthTransSum FS ON FS.BienniumYear = @bienniumyear AND BTC.BudgetNbr = FS.BudgetNbr WHERE BTC.budgetGroupCode = @budgetgroup --DATE LOGIC --regular transactions for acctngmonths up to now AND FS.BienniumYear = @bienniumyear AND ((CONVERT(INT, FS .Acctngmonth) <= @acctngmonth) /*Adds in trans for Calendar June of even fiscal year that are posted with AcctgMonth 13 & 14 of the subsequent fiscal year */ OR (@evenoddfy = 0 AND @calmonth = '6' AND FS.Acctngmonth IN ('13','14') AND fs.fiscalyear = CONVERT(CHAR(4), @fiscalyear) ) /*--Adds in trans for biennium close months 24-26 when user selects last month (June) of biennium.*/ OR (@evenoddfy = 1 AND @calmonth = '6' AND FS.Acctngmonth IN ('24','25','26')) /*Adds in Budget Trans for Calendar July of odd fisca",EDWAdminMart,No
Report,Payroll Detail Download,9/6/2008,9/7/2028,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Alexis Chin,This download file includes the same data as the Budget Verification and Payment Verification reports as well as the drill through reports. It can be viewed/saved in either an Excel (default) or CSV (comma delimited) format. It includes data from the current or prior pay cycle. It is designed to be used by those who maintain their own department databases.,University Advancement,Payroll Office,"SELECT Person.Name, Person.IdNbr, EmploymentStatus.EmploymentStatusCode, EmploymentStatus.EmploymentStatusDesc, Contact.HomePDC, Contact.HomeDeptName, EmploymentStatus.TravelCardInd, Contact.PersonalCampusMailbox, Contact.PrimaryUWEmailAddr, EmploymentStatus.PrimaryEmploymentTypeDesc FROM ODS_HEPPS.sec.Person AS Person INNER JOIN ODS_HEPPS.sec.EmploymentStatus AS EmploymentStatus ON Person.PersonKey = EmploymentStatus.PersonKey INNER JOIN ODS_HEPPS.sec.Contact AS Contact ON Person.PersonKey = Contact.PersonKey WHERE (EmploymentStatus.TravelCardInd = 'Y') ORDER BY EmploymentStatus.EmploymentStatusCode DESC",EDWAdminMart,No
Report,Stipend Recipients with Tax Deductions,9/10/2001,9/11/2020,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of employees who are only receiving Stipend payments and who have additional federal withholding tax deductions.,University Advancement,Payroll Office,"SELECT AcctngMonth, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear =@BienniumYear) GROUP BY AcctngMonth ORDER BY AcctngMonth",EDWAdminMart,No
Report,Negative Pretax Reductions,9/10/2001,9/11/2020,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of employees whose pre-tax deduction balances are negative.,University Advancement,Payroll Office,"SELECT rao.FACILITY_CODE FacilityCode, rao.ROOM_NUMBER RoomNumber, rao.ORGANIZATION assignee_organization, rao.EMPLOYEE_ID assignee_eid, rao.Occupant_EID, ISNULL(s_occup.Name, 'n/a') Occupant_Name FROM dbo.room_assignment_occupant rao LEFT JOIN dbo.Person s_occup ON s_occup.IdNbr = rao.occupant_eid WHERE rao.FACILITY_CODE = @facilitycode AND rao.ROOM_NUMBER = @roomno AND rao.ORGANIZATION = @assignorg AND rao.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Negative Federal W/H Taxable Gross,9/10/2002,9/11/2021,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of employees whose Federal Withholding Gross balances are negative.,University Advancement,Payroll Office,"SELECT YEAR(P.PayPeriodEndDate) AS PayYear, MONTH(P.PayPeriodEndDate) AS PayMonth, P.PayPeriodEndDate AS PaycycleEndDate, SUM(P.NetPayAmt) AS HeppsPayrollSum, CASE WHEN S.StateFiscalMonth < 10 THEN '0' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth, -- used in subreport param SUBSTRING(S.StateFiscalBiennium, 1, 4) AS FisBien -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S INNER JOIN ODS.sec.PayrollResultSummary AS P ON S.CalendarDate = P.PayPeriodEndDate GROUP BY YEAR(P.PayPeriodEndDate), MONTH(P.PayPeriodEndDate), P.PayPeriodEndDate, S.StateFiscalMonth, SUBSTRING(S.StateFiscalBiennium, 1, 4) ORDER BY P.PayPeriodEndDate",EDWAdminMart,No
Report,Returning Retirees-Medicare Tax Only,9/10/2005,9/11/2024,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of Returning Retirees Employees who are only subject to Medicare taxation.,University Advancement,Payroll Office,"SELECT ts.ts_year ,ts.ts_quarter ,yrqtr = CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) ,Qtr_desc = CASE WHEN ts.ts_quarter = 1 THEN 'Winter ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 2 THEN 'Spring ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 3 THEN 'Summer ' + CAST(ts.ts_year AS char(4)) WHEN ts.ts_quarter = 4 THEN 'Autumn ' + CAST(ts.ts_year AS char(4)) END ,Program = RTRIM(CASE WHEN dc.dept_abbr LIKE 'B %' THEN SUBSTRING(dc.dept_abbr,3,6) ELSE dc.dept_abbr END) ,Program_full_name = RTRIM(dc.dept_full_nm) ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name ,ts.students_denied ,ts.starting_time ,ts.day_of_week ,ts.ending_time ,ts.pm_flag FROM UWSDBDataStore.sec.time_schedule ts INNER JOIN UWSDBDataStore.sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM UWSDBDataStore.sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN UWSDBDataStore.sec.sr_dept_code dc ON scc.curric_dept = dc.dept_code LEFT JOIN UWSDBDataStore.sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) IN (@yrqtr) AND ts.course_branch=1 AND ts.delete_flag <> '@' AND ts.dept_abbrev IN(@curric) AND ts.course_no IN(@crsno) ORDER BY ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,Supplemental Retirees with Pretax Reductions,9/10/2005,9/11/2024,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of employees who are only receiving Supplemental Retiree payments who have pretax deductions.,University Advancement,Payroll Office,"WITH --CTE 1 Cohort(syskey,cohort_yrqtr) AS ( SELECT smm0.mm_system_key ,MIN(smm0.mm_year * 10 + smm0.mm_qtr) FROM UWSDBDataStore.sec.sr_mini_master smm0 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp0 ON smm0.mm_year = smmdp0.mm_year AND smm0.mm_qtr = smmdp0.mm_qtr AND smm0.mm_proc_ind = smmdp0.mm_proc_ind AND smm0.mm_student_no = smmdp0.mm_student_no AND smmdp0.index1 =1 AND smmdp0.mm_branch =1 WHERE smmdp0.mm_major_abbr = 'B PRE' AND smm0.mm_proc_ind = 2 AND ((smm0.mm_year <1998 AND smm0.mm_curr_credits >0) OR (smm0.mm_sea_st_funded+smm0.mm_sea_self_sus+smm0.mm_bot_st_funded+smm0.mm_bot_self_sus+smm0.mm_tac_st_funded+smm0.mm_tac_self_sus >0)) GROUP BY smm0.mm_system_key ) --CTE 2 ,First_CUSP_yrqtr(syskey, CUSP_cohort_yrqtr, Cohort_Type) AS ( SELECT c.syskey ,c.cohort_yrqtr ,CASE WHEN smm00.mm_last_schl_type = 1 THEN 'Freshmen' WHEN smm00.mm_last_schl_type IN(2,3) THEN 'Transfer' ELSE 'Error' END FROM Cohort c INNER JOIN UWSDBDataStore.sec.sr_mini_master smm00 ON c.syskey = smm00.mm_system_key AND c.cohort_yrqtr = (smm00.mm_year * 10 + smm00.mm_qtr) AND smm00.mm_proc_ind = 2 --WHERE c.cohort_yrqtr IN(@cohort) --add this line back in if you want to restrict what cohorts you want to look at ) --CTE 3 ,Last_CUSP_yrqtr(syskey, Last_CUSP_yrqtr) AS ( SELECT smm1.mm_system_key ,MAX(smm1.mm_year * 10 + smm1.mm_qtr) FROM UWSDBDataStore.sec.sr_mini_master smm1 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp1 ON smm1.mm_year = smmdp1.mm_year AND smm1.mm_qtr = smmdp1.mm_qtr AND smm1.mm_proc_ind = smmdp1.mm_proc_ind AND smm1.mm_student_no = smmdp1.mm_student_no AND smmdp1.index1 =1 AND smmdp1.mm_branch =1 WHERE smmdp1.mm_major_abbr = 'B PRE' AND smm1.mm_proc_ind = 2 AND ((smm1.mm_year <1998 AND smm1.mm_curr_credits >0) OR (smm1.mm_sea_st_funded+smm1.mm_sea_self_sus+smm1.mm_bot_st_funded+smm1.mm_bot_self_sus+smm1.mm_tac_st_funded+smm1.mm_tac_self_sus >0)) GROUP BY smm1.mm_system_key ) --CTE 4 ,First_major_yrqtr(syskey, First_major_yrqtr --,Program,Major ) AS ( SELECT smm2.mm_system_key ,MIN(smm2.mm_year * 10 + smm2.mm_qtr) AS First_major_yrqtr --,dc2.dept_abbr --,smmdp2.mm_major_abbr FROM UWSDBDataStore.sec.sr_mini_master smm2 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp2 ON smm2.mm_year = smmdp2.mm_year AND smm2.mm_qtr = smmdp2.mm_qtr AND smm2.mm_proc_ind = smmdp2.mm_proc_ind AND smm2.mm_student_no = smmdp2.mm_student_no AND smmdp2.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc2 ON smmdp2.mm_major_abbr = mc2.major_abbr AND smmdp2.mm_pathway = mc2.major_pathway AND mc2.major_last_yr IN(SELECT MAX(mc2a.major_last_yr) FROM UWSDBDataStore.sec.Sr_major_code mc2a WHERE smmdp2.mm_major_abbr = mc2a.major_abbr AND smmdp2.mm_pathway = mc2a.major_pathway) INNER JOIN UWSDBDataStore.sec.Sr_dept_code dc2 ON mc2.major_dept = dc2.dept_code AND mc2.major_branch = dc2.dept_branch WHERE smm2.mm_proc_ind = 2 AND smmdp2.mm_deg_level <2 AND ((smm2.mm_year <1998 AND smm2.mm_curr_credits >0) OR (smm2.mm_sea_st_funded+smm2.mm_sea_self_sus+smm2.mm_bot_st_funded+smm2.mm_bot_self_sus+smm2.mm_tac_st_funded+smm2.mm_tac_self_sus >0)) AND mc2.major_dept NOT IN(864,866,883,1032) GROUP BY smm2.mm_system_key ) ------------------------------------ SELECT DISTINCT cusp.syskey ,cohort.Cohort_Type ,cohort = cohort.CUSP_cohort_yrqtr ,cohort_acadyr = CASE WHEN RIGHT(cohort.CUSP_cohort_yrqtr,1) IN (3,4) THEN CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)) + '-' + CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)+1) WHEN RIGHT(cohort.CUSP_cohort_yrqtr,1) IN (1,2) THEN CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)-1) + '-' + CONVERT(char(4),LEFT(cohort.CUSP_cohort_yrqtr,4)) ELSE 'Error' END ,qtr = CASE WHEN smm.mm_qtr = 1 THEN 'Winter ' WHEN smm.mm_qtr = 2 THEN 'Spring ' WHEN smm.mm_qtr = 3 THEN 'Summer ' WHEN smm.mm_qtr = 4 THEN 'Autumn ' ELSE 'ERROR' END + CONVERT(char(4), smm.mm_year) ,cusp.Last_CUSP_yrqtr ,major.First_major_yrqtr ,Program = dc.dept_full_nm ,dc.dept_abbr ,Major = major_full_nm ,mc.major_abbr ,mc.major_pathway FROM First_CUSP_yrqtr cohort INNER JOIN Last_CUSP_yrqtr cusp ON cohort.syskey = cusp.syskey INNER JOIN First_major_yrqtr major ON cusp.syskey = major.syskey AND cusp.Last_CUSP_yrqtr < major.First_major_yrqtr INNER JOIN UWSDBDataStore.sec.sr_mini_master smm ON major.syskey = smm.mm_system_key AND major.First_major_yrqtr = smm.mm_year * 10 + smm.mm_qtr INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp ON smm.mm_year = smmdp.mm_year AND smm.mm_qtr = smmdp.mm_qtr AND smm.mm_proc_ind = smmdp.mm_proc_ind AND smm.mm_student_no = smmdp.mm_student_no AND smmdp.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc ON smmdp.mm_major_abbr = mc.major_abbr AND smmdp.mm_pathway = mc.major_pathway AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr) FROM UWSDBDataStore.sec.Sr_major_code mc1 WHERE smmdp.mm_major_abbr = mc1.major_abbr AND smmdp.mm_pathway",EDWAdminMart,No
Report,Budget Verification Download,9/10/2001,9/11/2020,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Alexis Chin,The output file contains Budget Verification download details by PUC and Paycycles.,University Advancement,Payroll Office,"SELECT ts.ts_year ,ts.ts_quarter ,d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id ,ts.sln ,ts.l_e_enroll as class_limit ,ts.current_enroll ,ts.space_available ,ts.course_title ,sci.fac_name FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc ON scc.curric_abbr = ts.dept_abbrev AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci ON ts.ts_year = sci.fac_yr AND ts.ts_quarter = sci.fac_qtr AND ts.dept_abbrev = sci.fac_curric_abbr AND ts.course_no = sci.fac_course_no AND ts.course_branch = sci.fac_branch AND ts.section_id = sci.fac_sect_id WHERE ts.ts_year=@year AND ts.ts_quarter=@Quarter AND ts.course_branch=1 AND ts.delete_flag <> '@' ORDER BY d.dept_full_nm ,ts.dept_abbrev ,ts.course_no ,ts.section_id",EDWAdminMart,No
Report,Supplemental_Retirees_with_FWT,9/10/2002,9/11/2021,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Ann Wunderlin,This is a list of employees who are only receiving Supplemental Retiree payments who have federal withholding tax deductions.,University Advancement,Payroll Office,"--Report: Building Summary by OrgCode --Datasource: Get_Detail --History: --Date, programmer: April 15, 2012, PBurger - To production. Refactored code to conform to current UW --practices and conventions. Leaving the joins as the pre-ANSI standard. --D",EDWAdminMart,No
Report,Fiscal Year Income and Expense Summary by OrgCode and Funding Source,10/6/2015,10/8/2004, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report template displays budgeted and actual amounts through the selected reporting period for the selected fiscal years summarized by budget category within the selected orgcodes.,Services & Resources,Enterprise Reporting and Analytics,"--search by name or eid /*declare @findwho varchar(100) SET @findwho = '862008689' --SET @findwho = 'Dinah'*/ DECLARE @fy char(4), @by char(4) SET @fy = CASE WHEN MONTH(GETDATE()) BETWEEN 7 AND 12 THEN YEAR(GETDATE()) +1 ELSE YEAR(GETDATE()) END SET @b",EDWAdminMart,No
Report,Grant and Contract Deficit Report,10/6/2015,10/8/2004, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report is provided to assist departments in managing Grant and Contract budgets in compliance with the University of Washington Deficit Policy. A budgets is determined to be in deficit when the Total Transactions exceeds the Budgeted Amount. The unit responsible for the budget is expected to take timely action to clear the deficit. The report is to be reviewed no less than once per quarter. For questions about this report, please contact the GCA compliance area. For questions about individu",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name, v.student_no, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, ar.req_major_abbr, mc.major_full_nm, v.num_holds, a.trans_gpa, v.tot_2yr_transfer, v.tot_4yr_transfer, v.tot_lowd_transfer, v.tot_upd_transfer, v.class, class_desc = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class in (11,12,13,14) THEN 'Professional' ELSE convert(char(1),v.class) END ,Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, Paid_Date = ( Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where appl_status_new in (15, 16) and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr ), MailCode = CASE WHEN mlc.mail_code IN ('UW', 'PB', 'BOR') THEN mlc.mail_code ELSE 'None' END FROM sec.student_1 v inner join sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.system_key = ar.system_key and a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key WHERE a.appl_yr = @year and a.appl_qtr = @Quarter and a.appl_branch = 1 and convert(char(1),a.appl_type) in ('2','4','5','R') --and (a.trans_gpa is null or a.trans_gpa = 0) and a.appl_status in (12,15,16) and v.class <> 6 and mc.major_pathway = 0",EDWAdminMart,No
Report,Aid Authorized and Disbursed for Aid Year and Quarter,10/6/2015,10/8/2004,"Director, Student Financial Aid & Director, Student Fiscal Services",Colin Sachs,"Displays the dollar amount of aid authorized and disbursed, and the difference between the two, by student number and name for a given fund/budget for a specified quarter and aid year. Report is useful for determining if all aid has been disbursed to students, or listing all students receiving aid, within a given fund/budget. For an complete year, see ""Aid Authorized and Disbursed by Year"" report. (Similar to: SA70140-D-04)",Financial Resources,Student Accounts Office,"SELECT rau.FACILITY_CODE FacilityCode, rau.ROOM_NUMBER RoomNumber, rau.ORGANIZATION assignee_organization, rau.EMPLOYEE_ID assignee_eid, rau.functional_use_code, fuc.DESCRIPTION Functional_Use, rau.functional_use_percent FROM dbo.room_assignment_use rau LEFT JOIN dbo.functional_use_code fuc ON rau.functional_use_code = fuc.functional_use_code WHERE rau.FACILITY_CODE = @facilitycode AND rau.ROOM_NUMBER = @roomno AND rau.ORGANIZATION = @assignorg AND rau.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Journal Voucher Detail,10/6/2024,10/8/2013, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays the debits and credits associated with a given Journal Voucher number.,Services & Resources,Enterprise Reporting and Analytics,"SELECT BienniumYear, SUM(OpenBalAmt) AS BeginningBalance, SUM(DebitSumAmt) AS DebitAmount, SUM(CreditSumAmt) AS CreditAmount FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') GROUP BY BienniumYear ORDER BY BienniumYear",EDWAdminMart,No
Report,Variable Reporting Period Transaction Summary,11/5/2012,11/7/2001, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays transaction detail for a selected budget or static MyFD budget list for a selected date range.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END ,v.system_key ,class = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class = 11 THEN '1st Year Professional' WHEN v.class = 12 THEN '2nd Year Professional' WHEN v.class = 13 THEN '3rd Year Professional' WHEN v.class = 14 THEN '4th Year Professional' ELSE 'Unknown Class Status' END ,v.admitted_for_yr ,admitted_for_qtr = CASE WHEN v.admitted_for_qtr = 1 THEN 'Winter' WHEN v.admitted_for_qtr = 2 THEN 'Spring' WHEN v.admitted_for_qtr = 3 THEN 'Summer' WHEN v.admitted_for_qtr = 4 THEN 'Autumn' ELSE 'Unknown Quarter' END ,v.tot_graded_attmp ,uwb = (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) ,uwb_gpa = ( SELECT (SUM((CONVERT(DEC(2),grade)/10)*course_credits))/SUM(course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0 AND grade NOT IN ('I', 'W','HW','W3','W4','W5','W6','W7','')) ,v.tot_nongrd_earn ,gpa = CASE WHEN v.tot_graded_attmp > 0 THEN (v.tot_grade_points/v.tot_graded_attmp) ELSE 0 END ,current_credits = (SELECT current_credits from sec.registration where system_key = v.system_key AND regis_yr = @Year and regis_qtr = 4) ,mc.major_name ,addr.e_mail_ucs ,addr.local_line_1 ,addr.local_line_2 ,addr.local_city ,addr.local_state ,addr.local_zip_5 FROM sec.student_1 v INNER JOIN sec.student_1_college_major cm ON v.system_key = cm.system_key INNER JOIN sec.sr_major_code mc ON cm.major_abbr = mc.major_abbr AND cm.pathway = mc.major_pathway INNER JOIN sec.registration r ON v.system_key = r.system_key LEFT JOIN sec.transcript t ON v.system_key = t.system_key LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE r.regis_yr = @Year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 AND cm.major_abbr = 'B BUS' AND (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) >= 30 order by gpa desc",EDWAdminMart,No
Report,Major Codes,11/5/2025,11/7/2014,University Registrar and Chief Officer of Enrollment Information Services,Randy Byers,Displays information about major codes for selected departments. Useful for seeing which majors are controlled by a department or finding the CIP code associated with a major. Required parameters are College and Department.,Financial Resources,Enrollment Information Services,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '2540578000' SET @budgetgroup = '5GC' SET @calmonth = '6' SET @calyear = 2010 SET @budgetperiod = 'f'*/ DECLARE @fiscalyear char(4) SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4) SET @bienniumyear = (@fiscalyear - (@fiscalyear % 2) - 1) DECLARE @fiscalYearToUse char(4) SELECT @fiscalYearToUse = CONVERT(char(4), (CASE WHEN (CONVERT(int,@fiscalyear)%2)=0 AND CONVERT(int,@fiscalyear) < (SELECT max(CONVERT(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN CONVERT(varchar(4),CONVERT(int,@fiscalyear)+1) ELSE @fiscalyear end)) DECLARE @evenoddfy int SET @evenoddfy = convert(int,@fiscalyear)%2 IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6), Budgetname varchar(50), BudgetStatusCode char(1), RevenueSource char(2), RevenueSourceDesc varchar(30), RevenueClass char(4), RevenueClassDesc varchar(30), PrincipalInvestigatorID char(9), PrincipalInvestigator varchar(50), ParentSubFlag char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN INSERT INTO #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptname, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, RevenueSource, RevenueSourceDesc, RevenueClass, RevenueClassDesc, PrincipalInvestigatorID, PrincipalInvestigator, ParentSubFlag, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.FiscalYear, BI.OrgCode , Left(BI.OrgCode,7) 'OrgDeptCode' , OD.OrgDeptName, BTC.budgetsuperclasscode, BTC.budgettypecode, BTC.budgetclasscode, BI.budgetnbr, BI.budgetname, BI.BudgetStatusCode, BI1.RevenueSource, BI1.RevenueSourceDesc,BI1.RevenueClass, BI1.RevenueClassDesc, BI1.PrincipalInvestigatorID, BI1.PrincipalInvestigator, CASE WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) = BI.Budgetnbr THEN 'P' WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) != BI.Budgetnbr AND rtrim(ISNULL(ISNULL(BI1.ParentGrant, LEFT(BI1.ParentBudgetNbr, 2) + RIGHT(BI1.ParentBudgetNbr, 4)), BI1.ParentCapitalProject)) != '' THEN 'S' ELSE '' END AS 'ParentSubFlag', 'Grants and Contracts' AS 'BudgetGroup', '5GC' AS 'BudgetGroupCode' FROM sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT BudgetNbr FROM ODS.sec.BudgetIndexBudgetOfficeFlag WHERE BienniumYear = @bienniumyear AND index1 = '2' AND BudgetOfficeFlag IN ('2', '3', '4', '5', '6')) BOF ON BI.Budgetnbr = BOF.Budgetnbr LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD ON LEFT(BI.OrgCode,7) = OD.OrgDeptLevel INNER JOIN ODS.sec.BudgetIndex BI1 ON BI1.BudgetNbr = BI.BudgetNbr AND BI1.BienniumYear = @bienniumyear WHERE (BI.budgetTypecode + BI.budgetClassCode != '0552') AND BI.RFAcctngCode = 'R' AND BTC.BudgetSuperClassCode = 'ROF31' AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgCode, BTC.OrgDeptCode, BTC.OrgDeptName, BTC.BudgetGroup, BTC.BudgetGroupCode, BTC.BudgetNbr, BTC.BudgetName, (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) AS 'TYPE_CLASS', BTC.BudgetStatusCode, BTC.ParentSubFlag, BTC.RevenueSource, BTC.RevenueSourceDesc,BTC.RevenueClass, BTC.RevenueClassDesc, BTC.PrincipalInvestigator, BTC.PrincipalInvestigatorID, /*Beginning Balance */ SUM(CASE WHEN FS.TranCode IN ('24') AND fs.BudgetPermTempCryFwdCode != 'C' AND cast(FS.Acctngmonth as int) < 3 THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'BegBalance', /*New Awards and Adjustments*/ SUM(CASE WHEN FS.TranCode IN ('25') AND fs.BudgetPermTempCryFwdCode != 'C' AND CONVERT(INT, fs.fiscalyear) <= CONVERT(INT, @fiscalyear) THEN (FS.SummaryAmt * -",EDWAdminMart,No
Report,Gift Balance Summary by Spending Restriction,10/8/2003,10/9/2022, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report summarizes gift balances for a user selected time period for chosen Gift spending restrictions (indentified by budget prefix).,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, SUM(DebitSumAmt) AS DebitAmount, SUM(CreditSumAmt) AS CreditAmount FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801' and BienniumYear IN (@bienYear) ) GROUP BY AcctngMonth ORDER BY AcctngMonth",EDWAdminMart,No
Report,Gift Balance Detail by Spending Restriction and OrgCode,10/8/2010,10/9/2029, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays Gift budget level activity for selected spending restriction / budget prefixes by Org Department for the user selected time period and Organization structure.,Services & Resources,Enterprise Reporting and Analytics,"SELECT s2di.deg_branch,s2di.deg_earned_yr ,s2di.deg_earned_qtr ,s2di.deg_status ,s2di.deg_title ,v.student_name_lowc ,s1cm.major_abbr ,addr.e_mail_ucs ,v.s1_ins_sevis_id ,v.s1_visa_type ,v.student_no ,v.system_key ,DegQuarter = CASE WHEN s2di.deg_earned_qtr =1 THEN 'Winter' WHEN s2di.deg_earned_qtr =2 THEN 'Spring' WHEN s2di.deg_earned_qtr =3 THEN 'Summer' WHEN s2di.deg_earned_qtr =4 THEN 'Fall' ELSE '--' END ,DegApplication_Status = CASE WHEN s2di.deg_status =3 THEN 'Applied' WHEN s2di.deg_status =4 THEN 'Applied' WHEN s2di.deg_status =5 THEN 'Applied' WHEN s2di.deg_status =9 THEN 'Granted' ELSE '--' END FROM sec.student_1 v INNER JOIN sec.student_1_college_major s1cm ON v.system_key = s1cm.system_key INNER JOIN sec.student_2_uw_degree_info s2di ON v.system_key = s2di.system_key INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE (s2di.deg_branch = 1) AND (s2di.deg_status IN(3,4,5,9)) AND (s2di.deg_earned_yr = @year) AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> '' ORDER BY v.student_name_lowc",EDWAdminMart,No
Report,Cashier Activity Report - Payments Received,10/11/2019,11/1/2008,"Director, Student Fiscal Serivces",Colin Sachs,"Displays cashier payment transactions by student number, payment amount, bank deposit reference number, time of transaction and amount tendered by cashier ID. Useful for verifying cashier daily balance and otherwise auditing cashier drawers (similar to SDB report: SA32010-D-01 K)",Financial Resources,Student Accounts Office,"SELECT s2di.deg_branch,s2di.deg_earned_yr ,s2di.deg_earned_qtr ,s2di.deg_status ,s2di.deg_title ,v.student_name_lowc ,s1cm.major_abbr ,addr.e_mail_ucs ,v.s1_ins_sevis_id ,v.s1_visa_type ,v.student_no ,v.system_key ,DegQuarter = CASE WHEN s2di.deg_earned_qtr =1 THEN 'Winter' WHEN s2di.deg_earned_qtr =2 THEN 'Spring' WHEN s2di.deg_earned_qtr =3 THEN 'Summer' WHEN s2di.deg_earned_qtr =4 THEN 'Fall' ELSE '--' END ,DegApplication_Status = CASE WHEN s2di.deg_status =3 THEN 'Applied' WHEN s2di.deg_status =4 THEN 'Applied' WHEN s2di.deg_status =5 THEN 'Applied' WHEN s2di.deg_status =9 THEN 'Granted' ELSE '--' END FROM sec.student_1 v INNER JOIN sec.student_1_college_major s1cm ON v.system_key = s1cm.system_key INNER JOIN sec.student_2_uw_degree_info s2di ON v.system_key = s2di.system_key INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE (s2di.deg_branch = 1) AND (s2di.deg_status IN(3,4,5,9)) AND (s2di.deg_earned_yr = @year) AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> '' ORDER BY v.student_name_lowc",EDWAdminMart,No
Report,Daily Aid and Refund Check Activity File,10/12/2013,11/2/2001,"Director, Student Financial Aid",Colin Sachs,Displays check register activity file for aid and refund checks issued on a given date. Useful to monitor or audit check register activity. (Similar to: SA70200-D-01),Financial Resources,Student Accounts Office,"SELECT r.ReportKey, r.ReportHidden, r.ReportFolder, r.ReportName, --r.ReportTypeCd, lr.ReportFolder AS LinkedReportFolder, lr.ReportName AS LinkedReportName, Max(el.TimeStart) AS LastRunDate, Count(el.ExecutionLogKey) AS Executions, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN 1 ELSE 0 END) AS Succeeded, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' OR sc.StatusDesc Is Null THEN 0 ELSE 1 END) AS Failed, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN DateDiff(ms,el.TimeStart,el.TimeEnd) ELSE 0 END) AS TotalRunMSs, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN el.ByteCount ELSE 0 END) AS TotalBytes, Sum(CASE WHEN sc.StatusDesc = 'rsSuccess' THEN el.[RowCount] ELSE 0 END) AS TotalRows FROM sec.RSReport AS r LEFT JOIN sec.RSReport AS lr ON r.LinkedReportUID = lr.ReportUID LEFT JOIN sec.RSExecutionLog AS el ON r.ReportKey = el.ReportKey AND DATEDIFF(day, el.TimeStart, GetDate()) <= @days LEFT JOIN sec.RSExecStatus AS sc ON el.StatusKey = sc.StatusKey WHERE r.ReportKey > 0 --AND r.ReportDeleted = 0 AND r.ReportName Not Like '%_sub' GROUP BY r.ReportKey, r.ReportHidden, r.ReportFolder, r.ReportName, lr.ReportFolder, lr.ReportName ORDER BY r.ReportFolder, r.ReportHidden, r.ReportName",EDWAdminMart,No
Report,(not currently deployed),11/2/2002,11/3/2024,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",Dinah Mite Millikin & Eric Rucker,This report displays employees associatied with the selected home department OrgCode.,Healthcare,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key, s1.student_no, s1.student_name, a.appl_status, aps.appl_stat_descrip, Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END, a.appl_yr, a.appl_type, Appl_level = CASE when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' ELSE 'No Appl Type' END, a.appl_rcvd_dt, ar.req_major_abbr, cm.major_abbr, r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm on a.system_key = cm.system_key and a.appl_no = cm.appl_no and a.appl_qtr = cm.appl_qtr and a.appl_yr = cm.appl_yr and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r ON a.system_key = r.system_key AND a.appl_yr = r.regis_yr AND a.appl_qtr = r.regis_qtr AND r.enroll_status = 12 WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN ('2','4','5','6','N','R') AND a.appl_status IN (15,16) and (ar.req_major_abbr = 'B PRE' or cm.major_abbr = 'B PRE')",EDWAdminMart,No
Report,Consolidated Budget Status Report R3,11/2/2023,11/4/2014, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,This report displays employees associatied with the selected home department OrgCode.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key, s1.student_no, s1.student_name, a.appl_status, aps.appl_stat_descrip, Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END, a.appl_yr, a.appl_type, Appl_level = CASE when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' ELSE 'No Appl Type' END, a.appl_rcvd_dt, ar.req_major_abbr, cm.major_abbr, r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm on a.system_key = cm.system_key and a.appl_no = cm.appl_no and a.appl_qtr = cm.appl_qtr and a.appl_yr = cm.appl_yr and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r ON a.system_key = r.system_key AND a.appl_yr = r.regis_yr AND a.appl_qtr = r.regis_qtr AND r.enroll_status = 12 WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN ('2','4','5','6','N','R') AND a.appl_status IN (15,16) and (ar.req_major_abbr = 'B PRE' or cm.major_abbr = 'B PRE')",EDWAdminMart,No
Report,Paid FTE by Funding Source,11/4/2014,11/6/2003,Dan Schaaf,"Dinah Mite Millikin, Eric Rucker, & Phillip Burger","This report displays employees paid from budgets within the selected OrgCode by object subobject, employee type, or by Enterprise Employee Group. Results include only the portion of pay and FTE associated with the selected OrgCode. Results include salary expense transfers. To export data directly into Excel in raw form without the extraneous formatting associated with the standard Excel export option, choose XML file with Report Data from the export menu.",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT Person.PersonKey, Person.Name, Person.PreferredName, Person.FirstMiddleLastName, Person.UWNetId, Contact.PrimaryTitle, Contact.PrimaryDeptName, Contact.PrimaryWorkPhone, Contact.PrimaryWorkPhoneExt, Contact.HomeDeptCampusMailbox, Contact.HomeDeptName, Contact.HomeDeptOrgCode, Contact.CollegeOrgCode, Contact.CollegeOrgName, Contact.AltTitle, Contact.AltDeptName, Contact.PersonalCampusMailbox, Contact.HomePhone, Contact.PrimaryUWEmailAddr, Contact.AltUWEmailAddr, Contact.OnOffCampusCode, Contact.OnOffCampusDesc, Person.IdNbr, Contact.DirectoryInfoReleaseCode, Contact.DirectoryInfoReleaseDesc, ODS_HEPPS.sec.Appointment .EndDate, ODS_HEPPS.sec.Appointment .DeptOrgCode, ODS_HEPPS.sec.Appointment .DeptOrgName, ODS_HEPPS.sec.Appointment .JobClassCode, ODS_HEPPS.sec.Appointment .JobClass, ODS_HEPPS.sec.Appointment .Status, ODS_HEPPS.sec.Appointment .StatusCode, ODS_HEPPS.sec.Appointment .ApptTerm, ODS_HEPPS.sec.Appointment .PercentOfFulltime, ODS_HEPPS.sec.Appointment .PayCycleSchedule, ODS_HEPPS.sec.Appointment .FTE, Contact.AcademicHomeDeptOrgCode, Contact.AcadmicHomeDeptName, ODS_HEPPS.sec.Appointment .PaidApptCode, ODS_HEPPS.sec.Appointment .PaidApptCodeDesc, ODS_HEPPS.sec.JobClassification .PayRateCode, ODS_HEPPS.sec.JobClassification .PayRateDesc, ODS_HEPPS.sec.JobClassification .ECSCode, ODS_HEPPS.sec.JobClassification .ECSDesc, ODS_HEPPS.sec.JobClassification .AcademicGroupCode, ODS_HEPPS.sec.JobClassification .AcademicGroupDesc FROM ODS_HEPPS.sec.Person AS Person INNER JOIN ODS_HEPPS.sec.Contact AS Contact ON Person.PersonKey = Contact.PersonKey INNER JOIN ODS_HEPPS.sec.Appointment ON Person.PersonKey = ODS_HEPPS.sec.Appointment .PersonKey INNER JOIN ODS_HEPPS.sec.JobClassification ON ODS_HEPPS.sec.Appointment .JobClassCode = ODS_HEPPS.sec.JobClassification .JobClassCode WHERE (ODS_HEPPS.sec.Appointment .StatusCode = 'A') AND (Contact.PersonalCampusMailbox <> 351272) AND (ODS_HEPPS.sec.Appointment .ECSCode != 'R') ORDER BY Person.Name",EDWAdminMart,No
Report,Salary and Wage Expense Detail,11/9/2009,11/10/2029, Dan Schaaf,Dinah Mite Millikin & Eric Rucker,"This report shows detail of an employee's pay for the selected reporting period, regardless of orgcode or funding source. Results include salary expense transfers.",Services & Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr AS FASRunNbr, TransTypeCode AS TransCode, SUM(RecordCount) RecordCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @bienyr) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,Research Awards,11/8/2001,11/9/2020,Jeff Cheek,John Peca-Medlin,"This report lists awards related to research, fellowships, and other externally sponsored programs allocated to the University of Washington. These awards, represented by a Funding Action number (eFA#) and the related proposal number (eGC1#), have been accepted by OSP and sent to GCA for budget processing. If a budget has been assigned to a given award, this will be included in the Budget Number field. When a budget has not yet been assigned, values for PI information, Org information and th",Services & Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr AS FASRunNbr, TransTypeCode AS TransCode, SUM(RecordCount) RecordCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @bienyr) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,Minor Codes,11/6/2002,11/7/2022,University Registrar and Chief Officer of Enrollment Information Services,Randy Byers,Displays information about major codes for selected departments. Useful for looking up minor codes for declaring a student's minor. Required parameters are college and department.,Financial Resources,Enrollment Information Services,"SELECT 'UW' as UW, mm.mm_year as AcadYr, CASE WHEN mm.mm_class='06' THEN 4 WHEN mm.mm_class<'06' THEN 1 WHEN mm.mm_class='08' THEN 2 ELSE 3 END as ClassSort, CASE WHEN mm.mm_class=6 THEN 'Non-matric' WHEN mm.mm_class<6 THEN 'Undergraduate' WHEN mm.mm_class='08' THEN 'Graduate' ELSE 'Professional' END as ClassGrouping, COUNT(mm.mm_system_key) as HeadCount FROM sec.sr_mini_master mm Where mm.mm_year > Year(getdate())-10 and mm.mm_qtr = @Quarter and mm.mm_proc_ind = 2 and (mm.mm_sea_st_funded + mm.mm_sea_self_sus + mm.mm_bot_st_funded + mm.mm_bot_self_sus + mm.mm_tac_st_funded + mm.mm_tac_self_sus) > 0 GROUP BY mm.mm_year , mm.mm_qtr , CASE WHEN mm.mm_class='06' THEN 4 WHEN mm.mm_class<'06' THEN 1 WHEN mm.mm_class='08' THEN 2 ELSE 3 END , CASE WHEN mm.mm_class=6 THEN 'Non-matric' WHEN mm.mm_class<6 THEN 'Undergraduate' WHEN mm.mm_class='08' THEN 'Graduate' ELSE 'Professional' END ORDER BY AcadYr, ClassSort",EDWAdminMart,No
Report,Curriculum Codes,11/6/2007,11/7/2027,University Registrar and Chief Officer of Enrollment Information Services,Randy Byers,Displays information about curriculum codes for selected departments. Useful for seeing which curricula are controlled by a department or for seeing what CIP code is associated with a curriculum. Required parameters are College and Department.,Financial Resources,Enrollment Information Services,SELECT * FROM Report WHERE ReportCodeNbr = @rptcd,EDWAdminMart,No
Report,Research Proposals,11/8/2002,11/9/2021,Jeff Cheek,John Peca-Medlin,"This report lists awards related to research, fellowships, and other externally sponsored programs allocated to the University of Washington. These awards, represented by a Funding Action number (eFA#) and the related proposal number (eGC1#), have been accepted by OSP and sent to GCA for budget processing. If a budget has been assigned to a given award, this will be included in the Budget Number field. When a budget has not yet been assigned, values for PI information, Org information and th",Services & Resources,Enrollment Information Services,"SELECT GLProcessingDate, TransBatchNbr AS FASRunNbr, TransTypeCode AS TransCode, SUM(RecordCount) RecordCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @bienyr) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,eFECS Effort Reporting Retroactive Salary Adjustment Report,11/9/2007,11/10/2027,Dan Schaaf,"Phillip Burger, Eric Rucker,  Dinah Mite Millikin, & Kirk Udovich","This report displays salary transfers processed in MyFinancial.desktop that posted to the Financial Accounting System (FAS) during the selected period, i.e., transaction posting date range, for employees in the selected OrgCode. To determine if salary transfers may have occurred after certification of an FEC, select a specific faculty effort certification (FEC) cycle (or all cycles).",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.local_line_1 , addr.local_line_2 , addr.local_city , addr.local_state , addr.local_zip_5 , addr.local_phone_num , addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 , addr.perm_phone_num ,st30hs.high_school_name ,Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE appl_yr IN(@Year) AND appl_qtr IN (@Quarter) AND appl_branch = @branch AND addr.perm_state IN (@State)",EDWAdminMart,No
Report,Performance Evaluation Metrics -  Administrative University Units,11/9/1930,11/11/2019,Todd Mildon,Dinah Mite Millikin & Eric Rucker,"This report displays Administrative Unit metric data for the latest completed fiscal year by budget category for the selected OrgCode(s). Additionally, a 5 year history for each orgcode is provided when available. Export this report to Excel by choosing the Excel Export button at the right, then fill in the yellow cells in the spreadsheet. See the instructions for the Annual Budgeting Process by choosing the Annual Budget Discussion Guide information button at the right. Definitions of specific",Services & Resources,Planning and Budgeting,"SELECT YEAR(P.PaycycleEndDate) AS PayYear, MONTH(P.PaycycleEndDate) AS PayMonth, P.PaycycleEndDate, SUM(P.NetPayAmt) AS HeppsPayrollSum, CASE WHEN S.StateFiscalMonth < 10 THEN '0' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth, -- used in subreport param SUBSTRING(S.StateFiscalBiennium, 1, 4) AS FisBien -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S INNER JOIN ODS_HEPPS.sec.PaymentHistory AS P ON S.CalendarDate = P.PaycycleEndDate GROUP BY YEAR(P.PaycycleEndDate), MONTH(P.PaycycleEndDate), P.PaycycleEndDate, S.StateFiscalMonth, SUBSTRING(S.StateFiscalBiennium, 1, 4) ORDER BY P.PaycycleEndDate",EDWAdminMart,No
Report,Faculty Effort Certification (FEC) Dashboard,11/10/2003,11/11/2022,"Executive Director, Management Accounting and Analysis","Dinah Mite Millikin, Eric Rucker & Kirk Udovich","This report displays Administrative Unit metric data for the latest completed fiscal year by budget category for the selected OrgCode(s). Additionally, a 5 year history for each orgcode is provided when available. Export this report to Excel by choosing the Excel Export button at the right, then fill in the yellow cells in the spreadsheet. See the instructions for the Annual Budgeting Process by choosing the Annual Budget Discussion Guide information button at the right. Definitions of specific",Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name , v.student_no , a.appl_yr , Appl_Qtr = CASE WHEN a.appl_qtr = 1 THEN 'Winter' WHEN a.appl_qtr = 2 THEN 'Spring' WHEN a.appl_qtr = 3 THEN 'Summer' WHEN a.appl_qtr = 4 THEN 'Autumn' END , ar.req_major_abbr , mc.major_full_nm , v.num_holds , a.trans_gpa , v.tot_2yr_transfer , v.tot_4yr_transfer , v.tot_lowd_transfer , v.tot_upd_transfer , v.class , class_desc = CASE WHEN v.class = 1 THEN 'Freshman' WHEN v.class = 2 THEN 'Sophomore' WHEN v.class = 3 THEN 'Junior' WHEN v.class = 4 THEN 'Senior' WHEN v.class = 5 THEN 'Fifth Year' WHEN v.class = 6 THEN 'Non-Matric' WHEN v.class = 8 THEN 'Graduate' WHEN v.class in (11,12,13,14) THEN 'Professional' ELSE CONVERT(char(1),v.class) END , Appl_level = CASE WHEN a.appl_type = '1' THEN 'FR' WHEN a.appl_type = '2' THEN 'UG 2yr' WHEN a.appl_type = '4' THEN 'UG 4yr' WHEN a.appl_type = '6' OR a.appl_type = 'R' THEN 'UG (Returning)' WHEN a.appl_type = '5' THEN '5YR' WHEN a.appl_type = 'N' OR a.appl_type = 'P' THEN 'NM' WHEN a.appl_type = '7' THEN 'GR (Returning)' WHEN a.appl_type = 'G' THEN 'GR (Gradute)' WHEN a.appl_type = 'E' THEN 'GNM' WHEN a.appl_type = 'P' THEN 'PRO' ELSE 'No Appl Type' END , Paid_Date = ( SELECT MAX(ab.trans_dt) FROM sec.sr_adm_stat_chg ab WHERE appl_status_new in (15, 16) AND ab.system_key = a.system_key AND ab.appl_no = a.appl_no AND ab.appl_yr = a.appl_yr AND ab.appl_qtr = a.appl_qtr ) , MailCode = mlc.mail_code FROM sec.student_1 v INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr AND a.appl_qtr = ar.appl_qtr AND a.system_key = ar.system_key AND a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key WHERE a.appl_yr = @year AND a.appl_qtr = @Quarter AND a.appl_branch = 1 AND CONVERT(char(1),a.appl_type) in ('2','4','5','R') --AND (a.trans_gpa is null or a.trans_gpa = 0) AND a.appl_status in (12,15,16) AND v.class <> 6 AND mc.major_pathway = 0",EDWAdminMart,No
Report,FEC Dashboard Report by OrgCode,11/10/2003,11/11/2022,"Executive Director, Management Accounting and Analysis","Phillip Burger, Dinah Mite Millikin & Kirk Udovich",This report displays an FEC status dashboard across all FEC cycles for the OrgCode you select.,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, TransBatchNbr, TransTypeCode, TransDate, TransDebitAmt, TransCreditAmt, TransRef2Text, GLProcessingDate FROM GLDataMart.sec.TransGLPayrollCash WHERE ( BienniumYear = @BienYear) AND (TransBatchNbr = @FasNo) ORDER BY GLProcessingDate",EDWAdminMart,No
Report,Performance Evaluation Metrics - Academic Units,11/10/1931,11/12/2020,Todd Mildon,Dinah Mite Millikin & Eric Rucker,This report displays Program Evaluation Metric Data for Academic Units for the latest completed 5 fiscal years (when available) for the selected Org Dean. Export this report to Excel by choosing the Excel Export button at the right. See the instructions for the Annual Budgeting Process by choosing the Annual Budget Discussion Guide information button at the right. Definitions of specific terms can be viewed by clicking on the individual term.,Services & Resources,Planning and Budgeting,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Degrees and Organization Associations,11/12/2019,12/2/2007,Office of Planning & Budgeting,Alexis Chin,"List of University degrees for the time period selected and their associated financial organizations. Degrees may be assocciated with more than one financial organization. The primary organization is indicated as a ""Y"" in the ""Primary Ind"" column. All other associations will be indicated by ""N"". Degrees without associations will NOT be displayed.",Healthcare,Planning and Budgeting,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,100 Percent Sponsor-Funded Faculty,11/12/2022,12/2/2010,"Executive Director, Management Accounting and Analysis","Phillip Burger, Dinah Mite Millikin, & Kirk Udovich","This report displays faculty in a department within the selected OrgCode who submitted one or more applications to the UW Office of Sponsored Programs (OSP) during an FEC cycle where they were paid 100% from sponsored funds. An application is considered to have been submitted in a FEC cycle if the ""Date Application Received in OSP"" is between the start and end dates of the cycle.",Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Advance Budget Number Report,11/12/2023,12/2/2011,Dan Schaaf,Phillip Burger & Dinah Mite Millikin,This report displays a list of grant and contract budgets in advance funding status for a selected Org Code structure. No historical information is reported.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END , 'SAT' = CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 ,st30hs.high_school_name FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE a.appl_yr IN(@Year) AND a.appl_qtr IN (@Quarter) AND a.appl_branch = @branch AND a.appl_type IN ('2', '4') AND (a.resident NOT IN ('5', '6') AND addr.perm_state <> 'WA' ) AND a.trans_GPA >= 3.4",EDWAdminMart,No
Report,Performance Evaluation Metrics - Academic Unit Comparison,11/12/2013,12/2/2001,Todd Mildon,Dinah Mite Millikin,This report displays Program Evaluation Calculated Metrics for the applicable Academic Units side by side at the Org Dean Level. Export this report to Excel by choosing the Excel Export button at the right. See the instructions for the Annual Budgeting Process by choosing the Annual Budget Discussion Guide information button at the right. Definitions of specific terms can be viewed on the first tab of the Excel Export.,Services & Resources,Planning and Budgeting,"SELECT DISTINCT v.system_key ,v.student_name ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END ,v.admitted_for_yr ,admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end ,rcm.regis_major_abbr ,current_major = ( SELECT rcm.regis_major_abbr FROM sec.registration_regis_col_major rcm WHERE rcm.regis_yr = @Current_Year AND rcm.regis_qtr = @Current_Qtr AND rcm.index1=1 AND rcm.system_key = v.system_key ) ,class = CASE when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' END ,addr.local_phone_num ,addr.e_mail_ucs ,addr.e_mail_other FROM sec.student_1 v INNER JOIN sec.registration r ON v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key AND r.regis_yr = rcm.regis_yr AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.registration_courses rc ON r.system_key = rc.system_key AND r.regis_yr = rc.regis_yr AND r.regis_qtr = rc.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key WHERE rcm.regis_major_abbr in ('B PRE', 'B XPRE') AND r.enroll_status = 12 AND r.regis_yr = @Previous_Year AND r.regis_qtr = @Previous_Qtr AND NOT EXISTS ( SELECT r.system_key from sec.registration_courses rcc WHERE rcc.regis_yr = @Current_Year AND rcc.regis_qtr = @Current_Qtr AND rcc.system_key = v.system_key AND rcc.request_status in ('A','C','R') AND rcc.course_branch IN(@campus) ) order by v.student_name",EDWAdminMart,No
Report,FEC Dashboard Report by FEC Cycle,12/1/2026,12/3/2016,Dan Schaaf,"Dinah Mite Millikin, Eric Rucker, Kirk Udovich",This report displays an FEC Status Dashboard for a specific FEC cycle - for the OrgCode(s) that you select.,Services & Resources,Enterprise Reporting and Analytics,"WITH CTE_PolicyData (Folder, PolicyRootFolder, UserName, RoleName, RowNbr, PolicyRoot) AS ( SELECT CASE WHEN cat.parentid is null THEN ' (Home)' ELSE cat.path end as Folder, CASE WHEN cat.PolicyRoot=1 THEN (CASE WHEN cat.parentid is null THEN ' (Home)' ELSE cat.path end) ELSE (CASE WHEN c2.parentid is null THEN ' (Home)' ELSE c2.path end) end as PolicyRootFolder, wk.UserName, wk.RoleName, wk.RowNbr, cat.PolicyRoot FROM catalog cat LEFT JOIN catalog c2 on c2.PolicyId=cat.PolicyId and c2.PolicyRoot=1 LEFT JOIN (SELECT pur.PolicyId, u.UserName, r.RoleName, Row_Number() OVER (PARTITION BY pur.PolicyId, u.UserName ORDER BY r.RoleName) as RowNbr FROM PolicyUserRole pur INNER JOIN Roles r on r.RoleId = pur.RoleId INNER JOIN Users u on u.UserId = pur.UserId WHERE u.UserName not in ('Everyone','NT AUTHORITY\SYSTEM','BUILTIN\Administrators')) as wk on wk.PolicyId = cat.PolicyId and cat.PolicyRoot = 1 WHERE cat.Type = 1 ) SELECT a.PolicyRootFolder, a.Folder, a.UserName, a.RoleName + CASE WHEN b.RoleName Is Not Null THEN ', '+ b.RoleName ELSE '' END + CASE WHEN c.RoleName Is Not Null THEN ', '+ c.RoleName ELSE '' END + CASE WHEN d.RoleName Is Not Null THEN ', '+ d.RoleName ELSE '' END + CASE WHEN e.RoleName Is Not Null THEN ' ...' ELSE '' END as Roles FROM CTE_PolicyData a LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=2) b on a.Folder = b.Folder AND a.UserName = b.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=3) c on a.Folder = c.Folder AND a.UserName = c.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr=4) d on a.Folder = d.Folder AND a.UserName = d.UserName LEFT JOIN (SELECT * FROM CTE_PolicyData WHERE RowNbr>=5) e on a.Folder = e.Folder AND a.UserName = e.UserName WHERE a.RowNbr = 1 OR a.RowNbr Is Null ORDER BY a.PolicyRootFolder, a.PolicyRoot desc, a.UserName, a.Folder",EDWAdminMart,No
Report,FEC Dashboard Action List,12/1/2026,12/3/2016,Dan Schaaf,"Dinah Mite Millikin, Eric Rucker & Kirk Udovich",This report displays a tabular list of FECs requiring further action for the FEC cycle and OrgCode selected.,Services & Resources,Enterprise Reporting and Analytics,"SELECT Distinct a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, v.student_name, fname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), 1, CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,mname = SUBSTRING(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)), CHARINDEX(' ',SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))+1,LEN(SUBSTRING(v.student_name_lowc, CHARINDEX(',',v.student_name_lowc) + 1, LEN(v.student_name_lowc)))) ,lname = SUBSTRING(v.student_name_lowc, 1, CHARINDEX(',',v.student_name_lowc)-1) , student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, addr.perm_line_1, addr.perm_line_2, addr.perm_city, addr.perm_state, addr.perm_zip_5, addr.local_line_1, addr.local_line_2, addr.local_city, addr.local_state, addr.local_zip_5, addr.perm_phone_num, addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr and ab.appl_status_new in (15,16) ), r.advising_date, r.advising_type, AdviseType = CASE WHEN r.advising_type= 'O' THEN 'Orientation' Else 'Other' END, v.running_start, v.college_in_hs FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key left join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr and ar.req_pathway = mc.major_pathway inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key LEFT JOIN sec.registration r ON v.system_key = r.system_key AND r.regis_yr=@year AND r.regis_qtr=@Quarter WHERE a.appl_branch = 1 and a.appl_type = '1' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15,16) order by v.student_name",EDWAdminMart,No
Report,Fiscal Year Income and Expense Summary by OrgCode and Function,12/1/2025,12/3/2015,Dan Schaaf,Dinah Mite Millikin,This report displays budgeted and actual amounts through the selected reporting period for the selected fiscal year summarized by report fucntion for the selected orgcodes.,Services & Resources,Enterprise Reporting and Analytics,"SELECT AcctngMonth, FundCode, SUM(DebitSumAmt) AS DebitAmt, SUM(CreditSumAmt) AS CreditAmt FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') AND (AcctngMonth =@Acctmonth) AND (BienniumYear = @BienYear) GROUP BY AcctngMonth, FundCode ORDER BY AcctngMonth, FundCode",EDWAdminMart,No
Report,Fiscal Year Income and Expense Summary Report Menu,12/1/2025,12/3/2015,Dan Schaaf,Dinah Mite Millikin,These reports display budgeted and actual amounts through the selected reporting period for the selected fiscal year.,Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Salary Cap Cost Share Report,12/3/2006,12/4/2025,"Executive Director, Management Accounting and Analysis","Phillip Burger, Dinah Mite Millikin & Kirk Udovich","This report displays the certified salary cap cost sharing (required and actual) for faculty in a department within the selected OrgCode and FEC cycle with institutional base salary (IBS) in excess of the salary cap level that applies. Cost share information displayed reflects information through the last ""certified"" FEC cycle. Faculty with an FEC that is either in Recertified Outside of eFECS or Pending Recertification status are also included, but will not include any changes made to the cap.",Services & Resources,Enterprise Reporting and Analytics,"DECLARE @fundingtable table ( f_systemkey decimal(9,0) , Funding_Source varchar(30) ) INSERT INTO @fundingtable SELECT DISTINCT s1.system_key , CASE WHEN mc.major_ss_inelig = 1 THEN 'Fee Based' WHEN s1.system_key IN ( SELECT DISTINCT r1.system_key FROM UWSDBDataStore.sec.registration r1 INNER JOIN UWSDBDataStore.sec.registration_courses rc1 ON r1.system_key = rc1.system_key AND r1.regis_yr = rc1.regis_yr AND r1.regis_qtr = rc1.regis_qtr AND rc1.course_branch = 1 INNER JOIN UWSDBDataStore.sec.sys_tbl_39_calendar st39 ON '0' + CAST(rc1.regis_yr AS char(4)) + CAST(rc1.regis_qtr AS char(1)) = st39.table_key WHERE r1.enroll_status = 12 AND ((rc1.request_status IN('A','C','R')) OR (rc1.request_status IN('W','Y','D') AND rc1.request_dt > st39.tenth_day)) AND r1.regis_qtr = @Quarter AND r1.regis_yr = @year AND CAST(r1.regis_yr AS char(4)) + CAST(r1.regis_qtr AS char(1)) + rc1.crs_curric_abbr + CAST(rc1.crs_number AS char(3)) + rc1.crs_section_id IN ( '20104B NURS350C', '20104B NURS430D', --Fall 2010 '20111B NURS407C', '20111B NURS410C', --Winter 2011 '20112B NURS403C', '20112B HLTH497D', --Spring 2011 '20113B HLTH497D','20113B NURS409F','20113B NURS409G','20113B NURS409H','20113B NURS495G','20113B NURS495H','20113B NURS495I', --Summer 2011 '20114B NURS430D', '20114B HLTH497D', '20114B NURS350C', --Fall 2011 '20121B NURS407C', '20121B NURS410C', --Winter 2012 '20122B NURS403C', '20122B HLTH497C', --Spring 2012 '20123B HLTH450A', '20123B NURS409F', '20123B NURS409G', '20123B NURS409H', --Summer 2012 '20124B HLTH497D', '20124B NURS350C', '20124B NURS430D', --Fall 2012 '20131B NURS407C', '20131B NURS410C', --Winter 2013 '20132B NURS403C', '20132B HLTH497C', --Spring 2013 '20133B HLTH497A', '20133B NURS409F', '20133B NURS409G', '20133B NURS409H' --Summer 2013 ) ) THEN 'University Center Everett' --NOTE there will need to be a separate WHEN...THEN statement for each year and quarter that the Everett Nursing program runs at least until Seattle comes up with some way to code them appropriately WHEN s1.system_key IN ( SELECT DISTINCT sg.system_key FROM UWSDBDataStore.sec.sr_student_grp sg WHERE sg.sg_group_cd = 'NEVT' AND @year *10 + @Quarter BETWEEN sg.sg_init_yr *10 + sg.sg_init_qtr AND sg.sg_exp_yr *10 + sg.sg_exp_qtr ) THEN 'University Center Everett' ELSE ' State Funded' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key AND s1cm.branch = 1 AND s1cm.index1 = 1 INNER JOIN UWSDBDataStore.sec.registration r ON s1.system_key = r.system_key INNER JOIN UWSDBDataStore.sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr AND s1cm.pathway = mc.major_pathway AND mc.major_last_yr IN ( SELECT MAX(mc1.major_last_yr) AS lastyr FROM UWSDBDataStore.sec.Sr_major_code mc1 WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway ) WHERE r.regis_yr = @year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 ----------------------------------------------------------------------------------------------------- --Headcount SELECT Dept = CASE WHEN scm.major_abbr = 'B NM' THEN 'Non-Matric' WHEN scm.major_abbr = 'B BUSX' THEN 'BUSINESS ADMINISTRATION (BELLEVUE)' WHEN scm.major_abbr = 'B NURS' AND ft.funding_source ='University Center Everett' THEN 'NURSING (EVERETT)' WHEN m.major_dept IN(865, 1073, 1091, 1092, 1093) THEN 'School of Science, Technology, Engr & Math' ELSE d.dept_full_nm END , Funding = ft.Funding_Source , r.regis_qtr , r.regis_yr , class_status = CASE WHEN s1.class = 1 AND m.major_dept = 864 THEN 'Undergrad-Freshman' --NOTE that dept code 864 is CUSP WHEN s1.class = 2 AND m.major_dept = 864 THEN 'Undergrad-Sophomore' WHEN s1.class = 3 AND m.major_dept = 864 THEN 'Undergrad-Junior' WHEN s1.class = 4 AND m.major_dept = 864 THEN 'Undergrad-Senior' WHEN s1.class = 5 AND m.major_dept = 864 THEN 'Undergrad-Fifth Year' WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 0 THEN 'Undergrad-Non-Matric' WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 2 THEN 'Graduate-Non-Matric' WHEN s1.class < 6 AND m.major_dept <> 864 THEN 'Undergrad' WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 0 THEN 'Undergrad' WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 2 THEN 'Graduate' WHEN s1.class = 8 THEN 'Graduate' ELSE 'UNKNOWN' END , class_status_order = CASE WHEN s1.class = 1 AND m.major_dept = 864 THEN 20 WHEN s1.class = 2 AND m.major_dept = 864 THEN 30 WHEN s1.class = 3 AND m.major_dept = 864 THEN 40 WHEN s1.class = 4 AND m.major_dept = 864 THEN 50 WHEN s1.class = 5 AND m.major_dept = 864 THEN 60 WHEN s1.class = 6 AND m.major_dept = 864 THEN 70 WHEN s1.class < 6 AND m.major_dept <> 864 THEN 10 WHEN s1.class = 6 AND scm.deg_level = 0 AND m.major_dept <> 864 THEN 10 WHEN s1.class = 6 AND scm.deg_level = 2 AND m.major_dept",EDWAdminMart,No
Report,Grant and Contract Budget Status Report,12/4/1930,12/6/2019,Dan Schaaf,Dinah Mite Millikin & Phillip Burger,"This report is provided to assist departments in managing Grant and Contract budgets by allowing them to group the results by Principal Investigator (PI), organization, or days until grant close. Results show remaining balances, percent expended, and percent of budget period expended.",Services & Resources,Enterprise Reporting and Analytics,"SELECT BienniumYear, SUM(OpenBalAmt) AS BeginingBalance, SUM(DebitSumAmt) AS debit, SUM(CreditSumAmt) AS credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') GROUP BY BienniumYear ORDER BY BienniumYear",EDWAdminMart,No
Report,Majors and Organization Associations,11/3/2022,11/5/2011,Office of Planning & Budgeting,Alexis Chin,"List of University majors for the time period selected and their associated financial organizations. Majors may be associated with more than one financial organization. The primary organization is indicated as a ""Y"" in the ""Primary Ind"" column. All other associations will be indicated by ""N"". Majors without associations will NOT be displayed.",Healthcare,Planning and Budgeting,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_city ,addr.perm_state ,addr.local_state ,st30hs.high_school_name FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join UWSDBDataStore.sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join UWSDBDataStore.sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE appl_yr IN (@Year) AND appl_qtr IN (@Quarter) AND appl_branch = @branch AND appl_type = '1' AND high_sch_gpa >= @GPA AND ( CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END >= @ACT OR CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END >= @SATV OR CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END >= @SATM )",EDWAdminMart,No
Report,Building Summary by OrgCode,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays a summary of assigned space for the selected facility by OrgCode.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef1Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @BienniumYear and TransBatchNbr = @fasno and TransTypeCode = '44' and TransRef1Text = @ref1 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Building Summary by Primary Use,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays a summary of assigned space for the selected facility by primary use.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT sr_adm_appl.appl_qtr , sr_adm_appl.appl_yr , sr_adm_appl.appl_branch , sr_adm_appl.appl_status_rsn , v.student_no , v.student_name_lowc , v.system_key , sr_adm_appl.appl_status , addr.e_mail_ucs , addr.e_mail_other , AppStatus = CASE WHEN sr_adm_appl.appl_status = 1 THEN 'Application Received -- Not Processed' WHEN sr_adm_appl.appl_status = 2 THEN 'Incomplete' WHEN sr_adm_appl.appl_status = 4 THEN 'File Complete and Sent to Department' WHEN sr_adm_appl.appl_status = 5 THEN 'HOLD- Requested Additional Documenation' WHEN sr_adm_appl.appl_status = 7 THEN 'Applicant Withdrew Application' WHEN sr_adm_appl.appl_status = 8 THEN 'Applicant is Denied Admission' WHEN sr_adm_appl.appl_status = 9 THEN 'Temp Hold- File is Complete and Sent to Evaluators' WHEN sr_adm_appl.appl_status = 10 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 12 THEN 'Applicant has Registered for Classes' WHEN sr_adm_appl.appl_status = 14 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 15 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 16 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 17 THEN 'Files Complete - Too Late for an Admissions Decision' WHEN sr_adm_appl.appl_status = 24 THEN 'Applicant Declined Our Offer of Admission' ELSE 'NON UWB App Status' END, (SELECT COUNT(*) AS Expr1 FROM sec.sr_adm_appl AS app_sea WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0)) AS seattle_appl_count, CASE WHEN (SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0) = 0 THEN 'No' ELSE 'Yes' END AS Seattle_app, CASE WHEN (SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2) = 0 THEN 'No' ELSE 'Yes' END AS Tacoma_app, CASE WHEN (select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16) = 0 THEN 'Seattle' WHEN (select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16) = 1 THEN 'Bothell' WHEN (select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16) = 2 THEN 'Tacoma' ELSE 'None' END AS Confirmed FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.addresses addr ON addr.system_key= v.system_key WHERE (sr_adm_appl.appl_branch = 1) AND (sr_adm_appl.appl_yr = @year) AND (sr_adm_appl.appl_qtr = @Quarter) AND (sr_adm_appl.appl_status_rsn = 91) AND sr_adm_appl.appl_type = '1'",EDWAdminMart,No
Report,College Space Data by OrgCode,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays a summary of assigned space for each OrgCode and facility that an Org Dean-level unit has assigned space in.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT v.system_key, a.appl_yr, a.appl_qtr, v.student_name, -- addr.local_line_1, -- addr.local_line_2, -- addr.local_city, -- addr.local_state, -- addr.local_zip_5, -- addr.local_zip_4, addr.local_phone_num, addr.perm_phone_num, addr.e_mail_ucs, addr.e_mail_other, v.s1_gender, ar.req_major_abbr, mc.major_full_nm, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' OR a.appl_type = '4' then 'UG (2yr/4yr)' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, s.appl_stat_descrip, v.s1_visa_type, v.resident, addr.perm_country, addr.parent_country, ReasonCode= CASE WHEN a.appl_status_rsn= 0 THEN 'Direct' WHEN a.appl_status_rsn= 90 THEN 'Conditional - ELP' WHEN a.appl_status_rsn= 91 THEN 'Conditional - ATP' WHEN a.appl_status_rsn= 92 THEN 'Conditional - English Proficiency in Progress' WHEN a.appl_status_rsn= 93 THEN 'B BUS - Bellevue' WHEN a.appl_status_rsn= 99 THEN 'Director Approval' ELSE '-' END, a.appl_status_rsn, v.student_no FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key WHERE a.appl_branch = 1 and mc.major_pathway = 0 and v.resident in (5,6) and v.s1_visa_type is not null and v.s1_visa_type <> '' AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter)",EDWAdminMart,No
Report,College Space Data by Facility,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays a summary of assigned space for each OrgCode and facility that an Org Dean-level unit has assigned space in.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Facility Information,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays facility-level data.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Facility Room Detail,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,This report displays a list of rooms for the selected facility by primary use.,Research Administration,UW Facilities - Business Intelligence & Information Technology,"select budgetnbr, budgetname, accountcode, accountname, trancodedesc, tranamount, trandesc, tranadditionaldesc, tranreference2 from ODS.sec.BudgetActivityDetail where bienniumyear = @BienniumYear and fasrunnbr =@fasno and trancode = '35' and tranreference2 = @ref2 order by budgetnbr, budgetname,accountcode",EDWAdminMart,No
Report,Space Data by Department,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,"This report displays a list of rooms assigned to a specified organization, grouped by building.",Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Grant and Gift Budgets Unassigned to Space,12/4/2007,12/5/2027,Todd Mildon,Jeffrey Linn,"This report displays a list of budget numbers that are not associated with a room in the GeoSIMS application. Budget type classes 0552 and 0557 are excluded by default because departments are not required to assign space for budgets in these type classes. The list is by home department OrgCode. For a home department with budget activity, the aim is to identify the space that the activity occurs in and then update the room profile in GeoSIMS with the budget number. The list of budgets on this r",Research Administration,UW Facilities - Business Intelligence & Information Technology,"SELECT DISTINCT v.student_name, v.student_no, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, v.class, v.tot_lowd_transfer, v.tot_upd_transfer, r.regis_yr, regis_qtr = case when r.regis_qtr = 1 then 'Winter' when r.regis_qtr = 2 then 'Spring' when r.regis_qtr = 3 then 'Summer' when r.regis_qtr = 4 then 'Autumn' end, r.current_credits, total_credits = ((v.tot_graded_attmp + tot_nongrd_earn) - tot_deductible), addr.local_phone_num, addr.e_mail_ucs, addr.e_mail_other, addr.local_line_1, addr.local_city, addr.local_zip_5, addr.perm_line_1, addr.perm_city, addr.perm_zip_5, rcm.regis_major_abbr FROM sec.student_1 v INNER JOIN sec.registration r on v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key AND r.regis_yr = rcm.regis_yr AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_mail_codes mc ON a.system_key = mc.system_key AND a.appl_no = mc.appl_no AND a.appl_qtr = mc.appl_qtr AND a.appl_yr = mc.appl_yr AND ( a.appl_status_rsn=91 OR mc.mail_code = 'BCT') WHERE r.enroll_status = 12 AND rcm.regis_branch = 1 AND rcm.regis_major_abbr in ( 'B PRE','B XPRE','B NM') AND r.regis_yr = @Year AND r.regis_qtr = @Quarter ORDER BY admitted_for_yr,student_name, r.regis_yr, regis_qtr",EDWAdminMart,No
Report,Indirect Cost Recovery Estimator,12/6/2020,12/8/2009, Dan Schaaf,Dinah Mite Millikn & Phillip Burger,"This report is useful for estimating total Indirect Cost (IDC) and projected Indirect Cost Recovery (ICR) amounts for the 12-month period starting in April of one year and ending with March of the following year. This time span aligns with the activity-based budgeting (ABB) timespan used for reporting ICR. The projected, indirect cost is a straight-line calculation. It multiplies the average, monthly amount of indirect cost from sponsored research for the selected OrgCode through the latest, com",Services & Resources,Enterprise Reporting and Analytics,"SELECT p.IdNbr, dc.PaycycleEndDate, dc.GTNNbr, dc.Amount, dc.SourceDesc FROM HumanResources_HEPPS.sec.DeductAndContributions dc INNER JOIN HumanResources_HEPPS.sec.Person p ON p.PersonKey = dc.PersonKey AND p.RecordEffBeginDate <= dc.PaycycleEndDate AND p.recordEffEndDate >= dc.PaycycleEndDate WHERE dc.GTNNbr = @GTN AND p.IdNbr = @EID ORDER BY dc.GTNNbr, dc.PaycycleEndDate",EDWAdminMart,No
Report,How Many Students By Campus,12/10/2015,12/12/2004,University Registrar and Chief Officer of Enrollment Information Services,"Gordon Moll, Ann Wunderlin","Displays a graph of the unduplicated headcount by campus as of Census Day for a specified quarter for the past ten years. Useful for trend analysis. Excluded from these counts are foreign study students, on leave students, and students who register for the first time after Census Day. Useful for trend analysis. Required parameters are quarter and campus.",Financial Resources,Enrollment Information Services,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', BienniumYear, FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '35' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Se",EDWAdminMart,No
Report,Gift Balance Detail by Budget List,3/1/13,4/20/13,Dan Schaaf,Phillip Burger & Dinah Mite Millikin,"This report displays gift budget activity for selected spending restrictions and budget prefixes for a single budget or for a list of budgets via a MyFinancialDesktop Static Budget List. Please note that the endowment fund purpose shown for endowment funded operating budgets is a summary; the endowment’s governing documents should be consulted to determine appropriate expenditures. Gift budgets listed as not in Advance may be sub-budgets, internal accounts, or start-up funds that do not receive",Services & Resources,Enterprise Reporting and Analytics,"SELECT FundCode, TransDate, TransDebitAmt, TransCreditAmt, TransRef1Text , TransRef2Text FROM GLDataMart.sec.TransGLUseTax WHERE GLAccountCode = '4801' and BienniumYear = @BienYear and TransBatchNbr = @FASNo and TransTypeCode=@TransCode ORDER BY FundCode, TransDate",EDWAdminMart,No
Report,Internal and External Sales Summary Report,1/1/13,2/20/13,"Executive Director, Management Accounting and Analysis",Phillip Burger & Dinah Mite Millikin,"The intent of this report is to provide campus the ability to determine internal sales (CTI/ISD/JV) that affect account codes 9620, 9650, 21* (exclusive of 21-7* shared leave) and external revenue that affect account codes 9420, 9423, 9430, 9433, 9450, and 9499. Through this determination, departments can use this information to review budgets for proper classification (e.g. recharge center, cost center, departmental revenue and auxiliary enterprises) and the proper use of CTI, ISD, and JV trans",Services & Resources,Enterprise Reporting and Analytics,"SELECT a.appl_qtr ,a.appl_yr ,a.appl_branch ,a.appl_status ,v.student_name_lowc ,st72.appl_stat_descrip ,a.system_key ,v.student_no FROM sec.student_1 v INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key WHERE (a.appl_yr = DATEPART(yyyy, GETDATE()) - 1) AND a.appl_qtr = @Curr_Quarter AND (a.appl_type NOT IN ('E','G','N' )) AND (a.appl_branch = 1) --AND a.appl_status IN(2,8,17,4,5,7,9) -- Question: What statuses are considered No decision?? AND a.appl_status IN(2,4,5,7,8,9,17,10,13,14,15,16,24)",EDWAdminMart,No
Report,Check Register,10/8/2016,10/10/2005,"Director, Student Fiscal Services",Paige Hamlin,"Displays detailed information by student and check number for ACH direct deposit, paper check printing and cancellations within selected date range. Used for tracking/identification of daily check/ACH transactions. (Similar to: SDB Report SA70105-R-01)",Financial Resources,Student Accounts Office,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,Fund Group 70 Agency Funds,12/12/13,1/31/14,Dan Schaaf,Tim J McAllister,"This report provides balances for budget numbers in Agency Funds with summarization by Program Type and Fund. To export the data to Excel, use the ""XML file with report data"" export option. Locate the file and choose ""Open with"" Excel. While the report does not show organization code, the exported data includes it for each Budget Number so that funds held or owed can be quantified by org code as needed in Excel.",Services & Resources,Enterprise Reporting and Analytics,"SELECT Coalesce(f4.Name,f3.Name,f2.Name,f1.Name) as FolderRoot, CASE WHEN f4.Name Is Not Null THEN f3.Name WHEN f3.Name Is Not Null THEN f2.Name WHEN f2.Name Is Not Null THEN f1.Name WHEN f1.Name Is Not Null THEN Null END as Folder2, CASE WHEN f4.Name Is Not Null THEN f2.Name WHEN f3.Name Is Not Null THEN f1.Name WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder3, CASE WHEN f4.Name Is Not Null THEN f1.Name WHEN f3.Name Is Not Null THEN Null WHEN f2.Name Is Not Null THEN Null WHEN f1.Name Is Not Null THEN Null END as Folder4, IsNull(r.Name,'(unknown)') as ReportName, r.Type as ReportType, r.Description as ReportDesc, r.Hidden as IsHidden, CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked, uc.UserName as CreatedBy, r.CreationDate, um.UserName as ModifiedBy, r.ModifiedDate, (SELECT Max(l.TimeStart) FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate FROM Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId And f1.name>'' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID WHERE r.Type In (2,4) -- rpt, linked rpt ORDER BY FolderRoot, Folder2, Folder3, Folder4, r.Type, r.Hidden, ReportName",EDWAdminMart,No
Report,Course Section Fill Rate,12/20/13,2/8/14,Carol Diem,Lucy Zybura,"This report allows the user to see how full each course section is. For a selected Year, Quarter, Campus, Department, Curriculum, and Section Type, the user can see what the total capacity is (Total Seats), how many seats are taken, and percentage full. When more than one section of a course offered, clicking on the course section will show all associated course sections including joint course offerings. Each section will have its own capacity and % full. Note that the number of stude",Financial Resources,Planning and Budgeting,"/*DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '11-01-2010' SET @enddate = '11-03-2010' SET @oac='DE' SET @tctype='30'*/ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', BienniumYear, FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '60' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' AND ISNULL(LEFT(CTIAccountCode,2),0) = CASE WHEN TranCode='65' THEN '96' WHEN TranCode='60' THEN '21' ELSE 0 END ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'Requisition",EDWAdminMart,No
Report,Room Assignment Details by Department,8/1/13,9/20/13,Gary Quarfoth,Eric Darst,"This report displays a list of rooms and room assignment details (including a list of occupants, functional uses and budgets) assigned to the selected organization(s), grouped by building. Unlike the other Space reports, there is not a working XML export option (this is due to the multiple and separate hierarchical relationships between the Room Assignment data and the Occupants, Functional Uses, and Budgets). Therefore the standard Excel export is recommended for saving a copy of this report.",Research Administration,UW Facilities - Business Intelligence & Information Technology,"declare @UserKey smallint /* -- Parameters used for testing -- declare @ReportUser varchar(50) declare @StartDate datetime declare @EndDate datetime set @ReportUser = 'netid\alchin'; set @StartDate = '05/15/2012' set @EndDate = '01/15/2013' */ set @StartDate = Dateadd(day,-1,@StartDate); set @EndDate = Dateadd(day, 1, @EndDate); select @UserKey = UserKey from EDWAdminMart.sec.RSUser where UserName = @ReportUser ;with cte_TopRpts as ( SELECT r.ReportName , r.ReportFolder , r.ReportKey , count(l.ExecutionLogKey) as RptRunCount , max(l.TimeStart) as RptLastRun FROM EDWAdminMart.sec.RSExecutionLog l JOIN EDWAdminMart.sec.RSReport r ON l.ReportKey = r.ReportKey WHERE l.UserKey = @UserKey and l.TimeStart between @StartDate and @EndDate and l.StatusKey = 1 and r.ReportDeleted = 0 group by r.ReportName , r.ReportFolder , r.ReportKey ) -- this version will return the last exec detail for the top N reports SELECT r.RptOrd , r.ReportName , r.ReportFolder , r.ReportKey , r.RptRunCount, r.RptLastRun , l.TimeStart , l.TimeEnd , l.Parameters from ( select top 10000 *, -- row_number() over(order by RptRunCount desc) RptOrd -- ordering # by report execution row_number() over(order by RptLastRun desc) RptOrd -- ordering # by last report run from cte_TopRpts order by RptLastRun desc -- order by last report run -- order by RptRunCount desc -- order by most executed report ) r join EDWAdminMart.sec.RSExecutionLog l ON l.ReportKey = r.ReportKey and l.TimeStart = (select max(TimeStart) from EDWAdminMart.sec.RSExecutionLog b where b.ReportKey = l.ReportKey and b.StatusKey = 1 and b.UserKey = @UserKey) where l.TimeStart between @StartDate and @EndDate order by r.RptOrd, l.TimeStart",EDWAdminMart,No
Report,Student Grade Report by Major,12/14/14,2/2/15,Crystal Eney,Alexis Wall,"Displays a student's individual grades from courses taken, as well as the quarterly GPA. It also includes cumulative GPA and departmental GPA calculated at the time the report is run. Departmental GPA is calculated by weight averaging the grades from courses taken by the student and owned by the same department as the student’s major.",Financial Resources,Academic Data Management Office,"select budgetnbr, budgetname, accountcode, accountname, trancodedesc, tranamount, tranreference2, trandesc, tranadditionaldesc from ODS.sec.BudgetActivityDetail where bienniumyear = @bienyear and fasrunnbr =@fasno and tranreference1 = @ref1 and trancode = '44' order by budgetnbr, budgetname",EDWAdminMart,No
Report,Research Proposal Details,6/8/15,7/28/15,Jim Kresl,Greg Grabowski,"This report displays details of a specific awarded grant proposal(s), personnel involved in the grant, sponsor information, and the grant abstract. Data is derived from the UW System to Administer Grants Electronically (SAGE) via the Research Administration Data (RAD) database in the EDW.",Human Resources,ORIS,"SELECT DISTINCT v.student_name, student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, mmd.mm_major_abbr, class = case when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' end, addr.e_mail_ucs, addr.e_mail_other, Registered_Current = CASE WHEN EXISTS (SELECT r.system_key FROM sec.registration_courses r WHERE r.regis_yr=@Current_Year and r.regis_qtr=@Current_Quarter and r.course_branch = 1 and r.system_key = v.system_key) THEN 'Yes' ELSE 'No' END FROM sec.student_1 v LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @Current_Year AND mm_qtr = @Current_Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr NOT in ('B PRE', 'B XPRE') AND v.system_key IN ( SELECT v.system_key FROM sec.student_1 v INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key INNER JOIN ( SELECT DISTINCT rc.system_key FROM sec.registration_courses rc WHERE rc.course_branch=1 AND rc.regis_yr=@year AND rc.regis_qtr=@Quarter AND rc.request_status in ('A','C','R')) X ON X.system_key = v.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @year AND mm_qtr = @Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr in ('B PRE', 'B XPRE') )",EDWAdminMart,No
Report,Research Proposal Details Lookup,6/8/15,7/28/15,Jim Kresl,Greg Graboswki,"This report displays details of a specific awarded grant proposal, personnel involved in the grant, sponsor information, and the grant abstract. Data is derived from the UW System to Administer Grants Electronically (SAGE) via the Research Administration Data (RAD) database in the EDW.",Human Resources,ORIS,"SELECT DISTINCT v.student_name, student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, mmd.mm_major_abbr, class = case when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' end, addr.e_mail_ucs, addr.e_mail_other, Registered_Current = CASE WHEN EXISTS (SELECT r.system_key FROM sec.registration_courses r WHERE r.regis_yr=@Current_Year and r.regis_qtr=@Current_Quarter and r.course_branch = 1 and r.system_key = v.system_key) THEN 'Yes' ELSE 'No' END FROM sec.student_1 v LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @Current_Year AND mm_qtr = @Current_Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr NOT in ('B PRE', 'B XPRE') AND v.system_key IN ( SELECT v.system_key FROM sec.student_1 v INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key INNER JOIN ( SELECT DISTINCT rc.system_key FROM sec.registration_courses rc WHERE rc.course_branch=1 AND rc.regis_yr=@year AND rc.regis_qtr=@Quarter AND rc.request_status in ('A','C','R')) X ON X.system_key = v.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @year AND mm_qtr = @Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr in ('B PRE', 'B XPRE') )",EDWAdminMart,No
Report,Undergraduates Eligible to Register,7/21/15,9/9/15,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"This report provides a list of Undergraduate Students that are enrolled in a course or admitted 1 or 2 quarters prior to the selected eligible quarter with current class code (1, 2, 3, 4, 5 or 6 NM). Students with an application to graduate in the current quarter including summer are excluded from the list by default unless selected in the parameter. Summer quarter is ignored for all registrations.",Financial Resources,Enrollment Information Services,"/* --Variables for testing --DECLARE @startdate DATETIME, @enddate DATETIME , @jvbud_user VARCHAR(8) -- SET @startdate = '1/1/2013' -- SET @enddate = '3/25/2014' -- SET @jvbud_user = 'JVBO276 ' ------------Derive all Date Variables in the Following Section */ DECLARE @sfy char(4), @sby char(4), @sam char(2), @ecalyear char(4), @ecalmonth char(2), @efy char(4), @eby char(4), @eam VARCHAR(2), @jvbud VARCHAR(8), @searchtype CHAR(6) SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END SET @sby = (@sfy-(@sfy %2)-1) SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18 WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6 END SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end SET @sam = CASE WHEN LEN(@sam) = 1 THEN '0' + @sam ELSE @sam END SET @ecalyear = YEAR(@enddate) SET @ecalmonth = MONTH(@enddate) SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END SET @eby = (@efy-(@efy %2)-1) SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18 WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6 ELSE 27 END SET @eam = CASE WHEN LEN(@eam) = 1 THEN '0' + @eam ELSE @eam END --Remove the dash character from the @jv variable if entered with a budget# SET @jvbud = UPPER(@jvbud_user) SET @jvbud = CASE WHEN SUBSTRING(@jvbud,3,1)='-' AND LEFT(@jvbud,2)!='jv' THEN LEFT(@jvbud,2) + RIGHT(@jvbud,4) WHEN LEN(@jvbud)='5' THEN 'JV' + (@jvbud) ELSE RTRIM(LTRIM(@jvbud)) END SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN 'x' WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud,2)!='JV' THEN 'b' WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud,2)= 'JV' THEN 'j' ELSE 'x' END --SELECT @searchtype --SELECT @jvbud --select @sby, @sam, @eby, @eam IF OBJECT_ID('tempdb..#T1') IS NOT NULL DROP TABLE #T1 CREATE TABLE #T1 (Bienniumyear CHAR(4), TranReference2 CHAR (8)) INSERT INTO #T1(BienniumYear, TranReference2) ( SELECT DISTINCT BienniumYear, BAD.TranReference2 FROM sec.BudgetActivityDetail BAD WHERE (BAD.BudgetNbr = @jvbud AND LEFT(BAD.TranReference2,2)='JV' AND BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND BAD.TranPostingDate BETWEEN @startdate AND @enddate AND @searchtype = 'b' ) ) SELECT BAD.BienniumYear, BAD.BudgetNbr, BudgetName, AccountCode, OrgCode, OrgName, TranAmount, TranCode, TranDate1, TranPostingDate, BAD.TranReference2, TranReference3, TranDesc, TranFTE, PositionNbr, BAD.TDPrimaryKey, AppTranOriginating FROM sec.BudgetActivityDetail BAD LEFT JOIN #T1 ON BAD.TranReference2 = #T1.TranReference2 WHERE ( (@searchtype = 'b' AND #T1.TranReference2 IS NOT NULL) OR (@searchtype = 'j' AND @jvbud = BAD.TranReference2) ) and BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND TranPostingDate BETWEEN @startdate AND @enddate AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam) ORDER BY BAD.TranReference2, BAD.BudgetNbr",EDWAdminMart,No
Report,Satisfactory Progress Policy Report,9/9/15,10/29/15,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"Matriculated students are expected to make satisfactory progress toward the attainment of a baccalaureate degree, which means they are expected to enter a major and graduate after completion of a reasonable number of credits. A student should declare a major by the time s/he has earned 105 credits, and graduate by the time s/he has earned 30 credits beyond the minimum number of credits required for the degree; since most UW baccalaureate degrees require 180 credits, most students are expecte",Financial Resources,Enrollment Information Services,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '65' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' AND ISNULL(LEFT(CTIAccountCode,2),0) = CASE WHEN TranCode='65' THEN '96' WHEN TranCode='60' THEN '21' ELSE 0 END ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', Prior",EDWAdminMart,No
Report,Research Subawards,9/22/15,11/11/15,Jim Kresl,Greg Grabowski,This report represents all subawards related to sponsored research entered into SAGE since 1/1/2015. Copies of Fully Executed subawards are saved to the parent eGC1 in SAGE under 'attachments'. [Assignment Date] is the date the action was assigned to an OSP team member. [Issue Date] reflects the date that the subaward was sent to the sub recipient. [Fully Executed Date] is when UW OSP has countersigned the agreement and it is in full effect.,Human Resources,ORIS,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,SEVIS Immigration Reporting,9/25/15,11/14/15,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"This report provides data that is used in the quarterly government reporting submitted through SEVIS. Basic criteria for a student to appear on this report is that they must have some kind of Visa Type. Used by Seattle, Bothell, and Tacoma international offices; contact Seattle ISS Office for more information.",Financial Resources,Enrollment Information Services,"SELECT sr_adm_appl.appl_qtr , sr_adm_appl.appl_yr , sr_adm_appl.appl_branch , sr_adm_appl.appl_status_rsn , v.student_no , v.student_name_lowc , v.system_key , sr_adm_appl.appl_status , sr_adm_appl.adv_reg_prt_dt , registration.regis_yr , registration.regis_qtr , registration.special_program AS Expr1 , registration.advising_date , registration.advising_type , registration.regis_class , addr.e_mail_ucs , addr.e_mail_other , AppStatus = CASE WHEN sr_adm_appl.appl_status = 1 THEN 'Application Received -- Not Processed' WHEN sr_adm_appl.appl_status = 2 THEN 'Incomplete' WHEN sr_adm_appl.appl_status = 4 THEN 'File Complete and Sent to Department' WHEN sr_adm_appl.appl_status = 5 THEN 'HOLD- Requested Additional Documenation' WHEN sr_adm_appl.appl_status = 7 THEN 'Applicant Withdrew Application' WHEN sr_adm_appl.appl_status = 8 THEN 'Applicant is Denied Admission' WHEN sr_adm_appl.appl_status = 9 THEN 'Temp Hold- File is Complete and Sent to Evaluators' WHEN sr_adm_appl.appl_status = 10 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 12 THEN 'Applicant has Registered for Classes' WHEN sr_adm_appl.appl_status = 14 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 15 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 16 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 17 THEN 'Files Complete - Too Late for an Admissions Decision' WHEN sr_adm_appl.appl_status = 24 THEN 'Applicant Declined Our Offer of Admission' ELSE 'NON UWB App Status' END , ( SELECT COUNT(*) AS Expr1 FROM sec.sr_adm_appl AS app_sea WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0 ) = 0 THEN 'No' ELSE 'Yes' END AS Seattle_app , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2 ) = 0 THEN 'No' ELSE 'Yes' END AS Tacoma_app , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14) ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10,14) ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) ) = 2 THEN 'Tacoma' /* WHEN ((select appl_branch from sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14)) AND (select appl_branch from sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) )) THEN 'Seattle and Tacoma'*/ --Build Case for Seattle- And Tacoma Acceptance --Build acceptance for all three campus ELSE 'None' END AS Accepted , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16 ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16 ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16 ) = 2 THEN 'Tacoma' ELSE 'None' END AS Confirmed ,HST_Received = appl_doc_rcvd_dt ,Current_Credits = registration.current_credits ,mpt.test_dt ,mpt.test_type ,mpt.test_score FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key AND registration.regis_yr = rcm.regis_yr AND registration.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN ( SELECT * FROM sec.sr_adm_applicant_docs WHERE appl",EDWAdminMart,No
Report,Campus Application Counts Comparison,10/5/15,11/24/15,University Registrar and Chief Officer of Enrollment Information Services,Doug Pardo,Displays application counts and relative percentages for each campus based on the Quarter and Application Types selected. That aggregate values are grouped by Application Status.,Financial Resources,Enrollment Information Services,SELECT * FROM Report WHERE ReportCodeNbr = @rptcd,EDWAdminMart,No
Report,Freshman Applications Scores and Ethnicity,10/5/15,11/24/15,University Registrar and Chief Officer of Enrollment Information Services,Doug Pardo,"Displays tables of Freshman Application data based on the selected Quarter and Campus. The two tables are: Standardized Test Scores and Ethnicity by custom application status groupings (Total, Enr Conf, Offered).",Financial Resources,Enrollment Information Services,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,"Student Grade Report by Curriculum, Course and Section",12/7/15,1/26/16,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"Displays a student's individual grades from courses taken, as well as the quarterly GPA selected by Curriculum, Course and Section. It also includes cumulative GPA and departmental GPA calculated at the time the report is run. Departmental GPA is calculated by weight averaging the grades from courses taken by the student and owned by the same department as the student’s major.",Financial Resources,Enrollment Information Services,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Current Application Count by Department and Major,12/29/15,2/17/16,University Registrar and Chief Officer of Enrollment Information Services,Doug Pardo,"Displays a list of current application counts grouped by Department and Major. Only the current and next academic quarter are available for selection. The layout has three distinct sections: current/selected year and quarter, previous year and quarter and Year over Year count differences. The previous year/quarter counts applications on the exact date and time one year ago. This is done by leveraging the sec.sr_adm_stat_chg view in the EDW. The applications status groupings are: Applied (All app",Financial Resources,Enrollment Information Services,"SELECT v.system_key, v.student_name, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, status_dt = convert(char(10), a.appl_status_dt,110), s.appl_stat_descrip, Case when r.enroll_status = 12 then 'Yes' end as Registered, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, rcvd_dt = convert(char(10),a.appl_rcvd_dt,110), ar.req_major_abbr, mc.major_full_nm, addr.local_line_1, addr.local_city, addr.local_state, addr.local_zip_5 FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key left join sec.registration r on a.system_key = r.system_key and a.appl_yr = r.regis_yr and a.appl_qtr = r.regis_qtr WHERE a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date",EDWAdminMart,No
Report,All Applications,1/14/16,3/4/16,University Registrar and Chief Officer of Enrollment Information Services,Doug Pardo,Displays a list of student application data based on the filter criteria selected. This report contains data covered by FERPA,Financial Resources,Enrollment Information Services,"SELECT v.system_key, v.student_name, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, status_dt = convert(char(10), a.appl_status_dt,110), s.appl_stat_descrip, Case when r.enroll_status = 12 then 'Yes' end as Registered, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, rcvd_dt = convert(char(10),a.appl_rcvd_dt,110), ar.req_major_abbr, mc.major_full_nm, addr.local_line_1, addr.local_city, addr.local_state, addr.local_zip_5 FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key left join sec.registration r on a.system_key = r.system_key and a.appl_yr = r.regis_yr and a.appl_qtr = r.regis_qtr WHERE a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date",EDWAdminMart,No
Report,Biennium To Date Budget Balances,4/11/17,5/31/17,Amy Floit,Nina Velikin,"The Biennium to Date Budget Balances report shows the following funds: Regular State and provisos (GOF), Local (DOF-LFA), Indirect Cost Recovery (DOF-ICR) and Special State Appropriations for each unit. Fixed cost budgets are not included in this report. The report provides the units’ permanent and temporary budget amounts, actual expenses and budget balance remaining.",Services & Resources,Planning and Budgeting,"SELECT AcctngMonth, TransTypeCode AS TransCode, CASE WHEN TransTypeCode = 35 THEN 'Adjustment' WHEN TransTypeCode = 50 THEN 'Stipend' WHEN TransTypeCode= 70 THEN 'Salary' WHEN TransTypeCode= 71 THEN 'Benefits' END AS 'transdesc', SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, TransTypeCode ORDER BY TransTypeCode",EDWAdminMart,No
Report,Legacy FEC Dashboard Action List,12/1/2026,12/3/2016,Dan Schaaf,"Dinah Mite Millikin, Eric Rucker & Kirk Udovich",This report displays a tabular list of FEC's requiring further action for the FEC Period and OrgCode(s) that you select.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END , 'SAT' = CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 ,st30hs.high_school_name FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE a.appl_yr IN(@Year) AND a.appl_qtr IN (@Quarter) AND a.appl_branch = @branch AND a.appl_type = '1' AND (a.resident NOT IN ('5', '6') AND addr.perm_state <> 'WA' ) AND high_sch_gpa >= 3.4 AND ( CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END >= 1090 OR CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END >= 23 )",EDWAdminMart,No
Report,Legacy Grant and Contract Certification Report,9/1/2014,9/3/2005,"Executive Director, Management Accounting and Analysis","Dinah Mite Millikin, Eric Rucker, & Phillip Burger","This report is to certify that the work performed and that the salary distribution detailed herein is a reasonable reflection of effort for the specified reporting period and project(s). ***** ATTENTION ***** - Effective April 1, 2013 access to the Grant & Contract Certification reports (GCCRs) will only be available through the ASTRA Grant Generator role. UWIT will perform a bulk upload of UWNET IDs to establish this role for those presently accessing this report through alternative mean",Services & Resources,Management Accounting and Analysis,"SELECT DISTINCT s1.system_key ,s1.student_no ,Student_Name = s1.student_name_lowc ,r.regis_yr ,r.regis_qtr ,yr_qtr = CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1)) ,Academic_Year = CASE WHEN r.regis_qtr = 1 THEN CAST((r.regis_yr - 1) AS char(4)) + '-' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 2 THEN CAST((r.regis_yr - 1) AS char(4)) + '-' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 3 THEN CAST(r.regis_yr AS char(4)) + '-' + CAST((r.regis_yr + 1) AS char(4)) WHEN r.regis_qtr = 4 THEN CAST(r.regis_yr AS char(4)) + '-' + CAST((r.regis_yr + 1) AS char(4)) END ,Academic_Quarter = CASE WHEN r.regis_qtr = 1 THEN 'Winter ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 2 THEN 'Spring ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 3 THEN 'Summer ' + CAST(r.regis_yr AS char(4)) WHEN r.regis_qtr = 4 THEN 'Autumn ' + CAST(r.regis_yr AS char(4)) ELSE 'ERROR' END ,Application_Type = CASE WHEN a.appl_type = '1' THEN 'First-Years' WHEN a.appl_type IN('2','4') THEN 'Transfers' WHEN a.appl_type = '5' THEN '5th Years' WHEN a.appl_type = 'G' THEN 'Graduates' WHEN a.appl_type IN('E','7') THEN 'Graduate Non-Matric' WHEN a.appl_type IN('N','6') THEN 'Non-Matric' WHEN a.appl_type = 'R' THEN 'Returning Undergrad' WHEN s1cm.deg_level <2 THEN 'Continuing Undergrad' WHEN s1cm.deg_level >=2 THEN 'Continuing Graduate' ELSE 'Error' END ,Age = CASE WHEN s1.birth_dt >= st39.tenth_day OR s1.birth_dt IS NULL THEN NULL WHEN MONTH(s1.birth_dt) > MONTH(st39.tenth_day) OR (MONTH(s1.birth_dt) = MONTH(st39.tenth_day) AND DAY(s1.birth_dt) > DAY(st39.tenth_day)) THEN DATEDIFF(YY, (s1.birth_dt), (st39.tenth_day)) -1 ELSE DATEDIFF(YY, (s1.birth_dt), (st39.tenth_day)) END ,Gender = CASE WHEN s1.s1_gender ='M' THEN 'Male' WHEN s1.s1_gender = 'F' THEN 'Female' ELSE 'Unknown' END ,Education_Level = CASE WHEN s1cm.deg_level <2 THEN 'Undergraduate' WHEN s1cm.deg_level >=2 THEN 'Graduate' ELSE 'Error' END ,Class = CASE WHEN s1.class = 1 THEN '1 (First-Year)' WHEN s1.class = 2 THEN '2 (Sophomore)' WHEN s1.class = 3 THEN '3 (Junior)' WHEN s1.class = 4 THEN '4 (Senior)' WHEN s1.class = 5 THEN '5 (Fifth-Year)' WHEN s1.class = 6 THEN '6 (Non-Degree)' WHEN s1.class = 8 THEN '8 (Graduate)' ELSE 'Unknown' END ------------------------------------ ------------Program Data------------ ------------------------------------ ,s1cm.major_abbr ,mc.major_full_nm ,Dept = CASE WHEN dc.dept_abbr ='B VIS' THEN 'NONE' ELSE dc.dept_abbr END ,Dept_Name = CASE WHEN dc.dept_full_nm ='BOTHELL CAMPUS VISITING' THEN 'NONE' ELSE dc.dept_full_nm END ------------------------------- ---------Other Data-------- ------------------------------- ,HS_GPA = s2.high_sch_gpa ,Transfer_College_GPA = CASE WHEN s2.sr_col_gpa > 0 THEN s2.sr_col_gpa WHEN s2.sr_col_gpa = 0 AND s2.jr_col_gpa > 0 THEN s2.jr_col_gpa ELSE NULL END ,Last_School_Attended = CASE WHEN s1.last_sch_type = 1 THEN st30.high_school_name ELSE st02.institution_name END ,s1.s1_high_satv ,s1.s1_high_satm ,s1.s1_high_act ,s1.s1_last_toefl ,s1.s1_last_toefl_typ ,s1.s1_visa_type ,s1.s1_ins_sevis_id ,st33.home_addr_descrip ,addr.perm_country ,Registered_Credit_Hours = r.current_credits ,addr.e_mail_ucs ,addr.e_mail_other ,Qtr_GPA = CASE WHEN t.qtr_graded_attmp >0 THEN t.qtr_grade_points/t.qtr_graded_attmp ELSE NULL END ,Cumul_GPA = CASE WHEN s1.tot_graded_attmp >0 THEN s1.tot_grade_points/s1.tot_graded_attmp ELSE NULL END ,Qtr_attmp_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned ,Qtr_earned_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned - t.qtr_deductible ,t.scholarship_type ,st45.scholar_descrip FROM sec.student_1 s1 INNER JOIN sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key AND s1cm.index1 =1 AND s1cm.branch =1 INNER JOIN sec.registration r ON s1.system_key = r.system_key INNER JOIN sec.student_2 s2 ON s1.system_key = s2.system_key INNER JOIN sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr AND s1cm.pathway = mc.major_pathway AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr) FROM sec.Sr_major_code mc1 WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway) INNER JOIN sec.sys_tbl_39_calendar st39 ON ('0' + CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1))) = st39.table_key INNER JOIN sec.Sr_dept_code dc ON mc.major_dept = dc.dept_code AND mc.major_branch = dc.dept_branch INNER JOIN sec.addresses addr ON s1.system_key = addr.system_key LEFT JOIN sec.sr_adm_appl a ON r.system_key = a.system_key AND r.regis_yr = a.appl_yr AND r.regis_qtr = a.appl_qtr LEFT JOIN sec.Sys_tbl_33_home_addr_by_code st33 ON st33.table_key = CASE WHEN LEN(s1.home_addr_code)= 4 THEN '00' + CAST(s1.home_addr_code AS char(4)) WHEN LEN(s1.home_addr_code)= 3 THEN '000' + CAST(s1.home_addr_code AS char(3)) ELSE '000000' END LEFT JOIN sec.sys_tbl_02_ed_inst_info st02 ON s1.last_sch_code = CAST(st02.table_key AS int) LEFT JOIN sec.Sys_tbl_30_highschool st30 ON s1.la",EDWAdminMart,No
Report,Student Athletes Earning,6/27/17,8/16/17,"Asst VP, HR Admin and IS, and Asst V Provost, Office of Acad Personnel(for faculty salaries)",EIIA,"This report displays employment information for a list of current student athletes who have ever been employed by UW. Because many student athletes are only temporarily employed by UW, the report includes current student athletes who are not currently employed. The intended audience for the report is the UW Inter Collegiate Athletics (ICA) Office. ICA uses the report to find the list of student athlete employees, then follows up with a student’s manager to confirm that their employment complies",University Advancement,Student Accounts Office,"SELECT v.system_key, v.student_name, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, status_dt = convert(char(10), a.appl_status_dt,110), s.appl_stat_descrip, Case when r.enroll_status = 12 then 'Yes' end as Registered, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, rcvd_dt = convert(char(10),a.appl_rcvd_dt,110), ar.req_major_abbr, mc.major_full_nm, addr.local_line_1, addr.local_city, addr.local_state, addr.local_zip_5 FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key left join sec.registration r on a.system_key = r.system_key and a.appl_yr = r.regis_yr and a.appl_qtr = r.regis_qtr WHERE a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date",EDWAdminMart,No
Report,Predominantly Sponsor-Funded Faculty,12/13/17,2/1/18,"Executive Director, Management Accounting and Analysis","Kirk Udovich, Mitch DeRidder","This report displays faculty in a department within the selected OrgCode that were paid from sponsored funds at the user-selected %. If faculty submitted one or more applications to the UW Office of Sponsored Programs (OSP) during an FEC cycle, it will be reflected in the Application columns, 1 line per application. An application is considered to have been submitted in a FEC cycle if the ""Date Application Received in OSP"" is between the start and end dates of the cycle.",Services & Resources,Management Accounting and Analysis,"SELECT FundCode, GLAccountCode, OriginalTransCode, TransDebitAmt, TransCreditAmt, TransRef2Text FROM GLDataMart.sec.TransGLUseTax WHERE BienniumYear = @bienyear and TransBatchNbr = @fasno and TransTypeCode IN ('35','50') and TransRef2Text= @ref2 ORDER BY FundCode, GLAccountCode",EDWAdminMart,No
Report,Time Schedule Information Security TAB TEST,2/6/18,3/28/18,Alexis TEST,EDA TEST,"SECURITY TAB TEST:: Displays time schedule, meeting and instructor data for selected quarters, curricula, instructors, courses and sections. Useful for planning next year''''s courses. Required parameters are Quarter, College, Department, Curriculum, Instructor, Course Number, and Section. Note: Instructor data is not sortable by type, such as faculty, graduate student, instructor, but includes all personnel attached to a particular curriculum Note: Data includes all meetings for one cours",Financial Resources,Enterprise Reporting and Analytics,"SELECT coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) AS Appl_level, coalesce (T1.ethnicity, T2.ethnicity, T3.ethnicity, T4.ethnicity, T5.ethnicity, T6.ethnicity) AS Ethnicity, T1.Current_Year_Applied_Count , CASE WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Freshman' THEN '1' WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Transfer' THEN '2' WHEN coalesce (T1.Appl_level, T2.Appl_level, T3.Appl_level, T4.Appl_level, T5.Appl_level, T6.Appl_level) = 'Graduate' THEN '3' ELSE '0' END AS Order_1 , isnull (T2.Previous_Year_Applied_Count, 0) as Previous_Year_Applied_Count ,CAST ( (isnull (T1.Current_Year_Applied_Count, 0) - isnull (T2.Previous_Year_Applied_Count, 0)) AS FLOAT ) / isnull (T1.Current_Year_Applied_Count,1) as Change_Applied , isnull (T3.Current_Year_Admitted_Count, 0) as Current_Year_Admitted_Count , isnull (T4.Previous_Year_Admitted_Count, 0) as Previous_Year_Admitted_Count , CAST (( isnull (T3.Current_Year_Admitted_Count, 0) - isnull (T4.Previous_Year_Admitted_Count, 0)) AS FLOAT) / isnull (T3.Current_Year_Admitted_Count, 1) as Change_Admitted , isnull (T5.Current_Year_Confirmed_Count, 0) as Current_Year_Confirmed_Count , isnull (T6.Previous_Year_Confirmed_Count, 0) as Previous_Year_Confirmed_Count , CAST ( (isnull (T5.Current_Year_Confirmed_Count, 0) - isnull (T6.Previous_Year_Confirmed_Count, 0)) AS FLOAT) / isnull (T5.Current_Year_Confirmed_Count, 1) AS Change_Confirmed FROM ( SELECT --Column1 = cast(a.appl_yr as varchar(4)) + ' Applications as of: ' + convert(nvarchar(10),@AppDate,101), count(a.system_key) AS Current_Year_Applied_Count , Appl_level = case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, ethnicity = addr.perm_country from sec.sr_adm_appl a inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr inner join sec.student_1 v on v.system_key = a.system_key left join sec.addresses addr on v.system_key = addr.system_key where a.appl_qtr = @Quarter and a.appl_yr = @year and a.appl_branch = @branch AND v.s1_visa_type = 'F1' and b.trans_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab where ab.trans_dt <= @AppDate and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) GROUP BY case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, addr.perm_country )T1 full JOIN ( SELECT --Column1 = cast(a.appl_yr as varchar(4)) + ' Applications as of: ' + convert(nvarchar(10),@AppDate,101), ISNULL (count(a.system_key), 0) AS Previous_Year_Applied_Count , Appl_level = case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, ethnicity = addr.perm_country from sec.sr_adm_appl a inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr inner join sec.student_1 v on v.system_key = a.system_key left join sec.addresses addr on v.system_key = addr.system_key where a.appl_qtr = @Quarter and a.appl_yr = (@year-1) and a.appl_branch = @branch AND v.s1_visa_type = 'F1' and b.trans_dt = (Select max(trans_dt) from sec.sr_adm_stat_chg b where b.trans_dt <= (@PrevAppDate) and b.system_key = a.system_key and b.appl_no = a.appl_no and b.appl_yr = a.appl_yr and b.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key and ab.appl_no = a.appl_no and ab.appl_yr = a.appl_yr and ab.appl_qtr = a.appl_qtr) GROUP BY case when a.appl_type = '1' then 'Freshman' when a.appl_type in ('2','4','5','6','R','N') then 'Transfer' when a.appl_type in ('7','E','G','P') then 'Graduate' else 'No Appl Type' end, addr.perm_country",EDWAdminMart,No
Report,Advance Budget Number Report_Security,2/6/18,3/28/18,EDA TEST,EDA TEST,SECURITY TAB TEST: This report displays a list of grant and contract budgets in advance funding status for a selected Org Code structure. No historical information is reported.,Services & Resources,Enterprise Reporting and Analytics,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '3060001020' SET @budgetgroup = '7LNur' SET @calmonth = '1' SET @calyear = 2012 SET @budgetperiod = 'f' */ DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = @fiscalyear %2 /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */ DECLARE @acctngmonth INT SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4), @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@evenoddfy) - 1 select @fiscalYearToUse = convert(char(4),(CASE WHEN @evenoddfy =0 and @fiscalyear < (SELECT max(convert(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN @fiscalyear+1 ELSE @fiscalyear end)) IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6),Budgetname varchar(50), BudgetStatusCode char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN Insert into #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptName, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.fiscalyear, BI.OrgCode, LEFT(BI.OrgCode,7), OD.OrgDeptName, BTC.budgetsuperclasscode, BTC.budgettypecode, BTC.budgetclasscode, BI.budgetnbr, BI.budgetname, BI.BudgetStatusCode, 'Loans To Students - Revolving' as 'BudgetGroup', '7LNur' as 'BudgetGroupCode' from sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD on LEFT(BI.OrgCode,7) = OD.OrgDeptLevel WHERE BTC.BudgetSuperClassCode in ('ROF31', 'ROF35') AND BI.RFAcctngCode != 'R' AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgDeptCode, BTC.OrgDeptName, BTC.OrgCode, BTC.BudgetGroup, BTC.BudgetGroupCode, BTC.BudgetNbr, BTC.BudgetName, BTC.BudgetStatusCode, (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) as 'TYPE_CLASS', SUM(CASE WHEN ( FS.TranCode ='32' AND FS.ObjSubObjCode = '9788' ) THEN (FS.SummaryAmt * -1) ELSE 0 END) AS 'FundBeginningBalance', SUM(CASE WHEN (--Revenue ((FS.TranCode IN ('30','35','36','44','50','52','60','61','62','65','70','73')) OR (FS.Trancode = '32' and FS.ObjSubObjCode != '9788')) AND LEFT(FS.ObjSubObjCode,1) = '9' ) THEN (FS.SummaryAmt * -1) ELSE 0 END) AS 'Revenue', --Expenditures without encumberances SUM(CASE WHEN ( FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) != '9' ) THEN (FS.SummaryAmt*-1)ELSE 0 END) as 'Expense', Sum(Case WHEN (--Revenue FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) = '9') OR (--Expenses FS.TranCode IN ('30','32','35','36','44','50','52','60','61','62','65','70','73') AND LEFT(FS.ObjSubObjCode,1) != '9') THEN (FS.SummaryAmt*-1) ELSE 0 END) as 'TotalActuals', --Encumberances, which are not included in the final balance SUM(CASE WHEN FS.TranCode IN ('40', '41','42','43','51','53') THEN (FS.SummaryAmt*-1)ELSE 0 END) AS 'Encumbrances' FROM #BudgetGroups BTC INNER JOIN sec.AcctngMonthTransSum FS ON FS.BienniumYear = @bienniumyear AND BTC.BudgetNbr = FS.BudgetNbr WHERE BTC.budgetGroupCode = @budgetgroup --DATE LOGIC --regular transactions for acctngmonths up to now AND FS.BienniumYear = @bienniumyear AND ((CONVERT(INT, FS .Acctngmonth) <= @acctngmonth) /*Adds in trans for Calendar June of even fiscal year that are posted with AcctgMonth 13 & 14 of the subsequent fiscal year */ OR (@evenoddfy = 0 AND @calmonth = '6' AND FS.Acctngmonth IN ('13','14') AND fs.fiscalyear = CONVERT(CHAR(4), @fiscalyear) ) /*--Adds in trans for biennium close months 24-26 when user selects last month (June) of biennium.*/ OR (@evenoddfy = 1 AND @calmonth = '6' AND FS.Acctngmonth IN ('24','25','26')) /*Adds in Budget Trans for Calendar July of odd fisca",EDWAdminMart,No
Report,Research Budget Expenditures,4/2/18,5/22/18,Jim Kresl,Greg Grabowski,"The Research Budget Expenditures report provides enough budget detail to assist grant administrators, GCA Office, and principal investigators with their research expenditures data needs at a daily operational level. It can be used to: Track a reporting (parent) budget(s) and its expenditures across multiple fiscal years. This report enables users to pull research financial transactions against the award funds. Generally, the total grant and contract expenditures for a given fiscal year will be r",Human Resources,ORIS,"SELECT Person.Name, Person.IdNbr, EmploymentStatus.EmploymentStatusCode, EmploymentStatus.EmploymentStatusDesc, Contact.HomePDC, Contact.HomeDeptName, EmploymentStatus.TravelCardInd, Contact.PersonalCampusMailbox, Contact.PrimaryUWEmailAddr, EmploymentStatus.PrimaryEmploymentTypeDesc FROM ODS_HEPPS.sec.Person AS Person INNER JOIN ODS_HEPPS.sec.EmploymentStatus AS EmploymentStatus ON Person.PersonKey = EmploymentStatus.PersonKey INNER JOIN ODS_HEPPS.sec.Contact AS Contact ON Person.PersonKey = Contact.PersonKey WHERE (EmploymentStatus.TravelCardInd = 'Y') ORDER BY EmploymentStatus.EmploymentStatusCode DESC",EDWAdminMart,No
Report,Supplier Search,5/30/18,7/19/18,Mark Conley,Nina Velikin,The Supplier Search report provides a list of registered UW suppliers that have completed the initial Supplier Registration Form (SRF). The report provides the supplier's status as of the previous day and will indicate whether the supplier is active and able to receive orders and payments or whether the supplier is on hold / deleted which will prevent orders and payments from being transmitted to the supplier.,Services & Resources,Enterprise Reporting and Analytics,"SELECT DISTINCT v.student_name, student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),v. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), v.student_no) WHEN LEN(CONVERT(CHAR(7), v.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), v.student_no) ELSE CONVERT(CHAR(7), v.student_no) END, v.admitted_for_yr, admit_qtr = case when v.admitted_for_qtr = 1 then 'Winter' when v.admitted_for_qtr = 2 then 'Spring' when v.admitted_for_qtr = 3 then 'Summer' when v.admitted_for_qtr = 4 then 'Autumn' end, mmd.mm_major_abbr, class = case when v.class = 1 then 'Freshman' when v.class = 2 then 'Sophomore' when v.class = 3 then 'Junior' when v.class = 4 then 'Senior' when v.class = 5 then 'Fifth Year' when v.class = 6 then 'Non-Matric' when v.class = 8 then 'Graduate' when v.class = 11 then '1st Year Professional' when v.class = 12 then '2nd Year Professional' when v.class = 13 then '3rd Year Professional' when v.class = 14 then '4th Year Professional' else 'Unassigned' end, addr.e_mail_ucs, addr.e_mail_other, Registered_Current = CASE WHEN EXISTS (SELECT r.system_key FROM sec.registration_courses r WHERE r.regis_yr=@Current_Year and r.regis_qtr=@Current_Quarter and r.course_branch = 1 and r.system_key = v.system_key) THEN 'Yes' ELSE 'No' END FROM sec.student_1 v LEFT JOIN sec.addresses addr ON v.system_key = addr.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @Current_Year AND mm_qtr = @Current_Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr NOT in ('B PRE', 'B XPRE') AND v.system_key IN ( SELECT v.system_key FROM sec.student_1 v INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key INNER JOIN ( SELECT DISTINCT rc.system_key FROM sec.registration_courses rc WHERE rc.course_branch=1 AND rc.regis_yr=@year AND rc.regis_qtr=@Quarter AND rc.request_status in ('A','C','R')) X ON X.system_key = v.system_key INNER JOIN sec.sr_mini_master mm ON v.system_key = mm_system_key AND mm_year = @year AND mm_qtr = @Quarter AND mm_proc_ind = 2 INNER JOIN sec.sr_mini_master_deg_program mmd ON mm.mm_year = mmd.mm_year AND mm.mm_qtr = mmd.mm_qtr AND mm.mm_proc_ind = mmd.mm_proc_ind AND mm.mm_student_no = mmd.mm_student_no WHERE mmd.mm_major_abbr in ('B PRE', 'B XPRE') )",EDWAdminMart,No
Report,Mockup Report,6/5/18,7/25/18,EIIA,Alexis Wall,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam malesuada nisi ut felis aliquam placerat. Sed mollis magna condimentum ipsum consequat, vitae egestas nisi interdum. Phasellus ac odio nec magna vulputate accumsan eu at massa. Etiam nec tortor hendrerit, convallis dui et, tristique orci. Nulla sit amet consectetur orci. Aliquam nec nulla mauris. Fusce tincidunt, nulla et vehicula finibus, massa lacus vehicula velit, nec auctor libero massa eget felis. Nam quis nunc ac neque sollicit",Financial Resources,Academic Data Management Office,"/* --Variables for testing --DECLARE @startdate DATETIME, @enddate DATETIME , @jvbud_user VARCHAR(8) -- SET @startdate = '1/1/2013' -- SET @enddate = '3/25/2014' -- SET @jvbud_user = 'JVBO276 ' ------------Derive all Date Variables in the Following Section */ DECLARE @sfy char(4), @sby char(4), @sam char(2), @ecalyear char(4), @ecalmonth char(2), @efy char(4), @eby char(4), @eam VARCHAR(2), @jvbud VARCHAR(8), @searchtype CHAR(6) SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END SET @sby = (@sfy-(@sfy %2)-1) SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6 WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18 WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6 END SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end SET @sam = CASE WHEN LEN(@sam) = 1 THEN '0' + @sam ELSE @sam END SET @ecalyear = YEAR(@enddate) SET @ecalmonth = MONTH(@enddate) SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END SET @eby = (@efy-(@efy %2)-1) SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6 WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18 WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6 ELSE 27 END SET @eam = CASE WHEN LEN(@eam) = 1 THEN '0' + @eam ELSE @eam END --Remove the dash character from the @jv variable if entered with a budget# SET @jvbud = UPPER(@jvbud_user) SET @jvbud = CASE WHEN SUBSTRING(@jvbud,3,1)='-' AND LEFT(@jvbud,2)!='jv' THEN LEFT(@jvbud,2) + RIGHT(@jvbud,4) WHEN LEN(@jvbud)='5' THEN 'JV' + (@jvbud) ELSE RTRIM(LTRIM(@jvbud)) END SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN 'x' WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud,2)!='JV' THEN 'b' WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud,2)= 'JV' THEN 'j' ELSE 'x' END --SELECT @searchtype --SELECT @jvbud --select @sby, @sam, @eby, @eam IF OBJECT_ID('tempdb..#T1') IS NOT NULL DROP TABLE #T1 CREATE TABLE #T1 (Bienniumyear CHAR(4), TranReference2 CHAR (8)) INSERT INTO #T1(BienniumYear, TranReference2) ( SELECT DISTINCT BienniumYear, BAD.TranReference2 FROM sec.BudgetActivityDetail BAD WHERE (BAD.BudgetNbr = @jvbud AND LEFT(BAD.TranReference2,2)='JV' AND BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND BAD.TranPostingDate BETWEEN @startdate AND @enddate AND @searchtype = 'b' ) ) SELECT BAD.BienniumYear, BAD.BudgetNbr, BudgetName, AccountCode, OrgCode, OrgName, TranAmount, TranCode, TranDate1, TranPostingDate, BAD.TranReference2, TranReference3, TranDesc, TranFTE, PositionNbr, BAD.TDPrimaryKey, AppTranOriginating FROM sec.BudgetActivityDetail BAD LEFT JOIN #T1 ON BAD.TranReference2 = #T1.TranReference2 WHERE ( (@searchtype = 'b' AND #T1.TranReference2 IS NOT NULL) OR (@searchtype = 'j' AND @jvbud = BAD.TranReference2) ) and BAD.BienniumYear BETWEEN @sby AND @eby AND BAD.TranCode = '35' AND TranPostingDate BETWEEN @startdate AND @enddate AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam) ORDER BY BAD.TranReference2, BAD.BudgetNbr",EDWAdminMart,No
Report,NSF Compensation by Fiscal Year,11/18/18,1/7/19,Kirsten Defries,Kirk Udovich,"The National Science Foundation (NSF) limits compensation (defined as IBS) for ""Senior Personnel"" to no more than two months on all NSF Awards in any one year (defined as UW fiscal, 7/1/xx-6/30/xx). This report provides compensation on NSF Awards to date by fiscal year, for individuals paid on those Object Codes that include ""Senior Personnel"".",Human Resources,GCA Compliance Office,"/* DECLARE @startdate datetime, @enddate datetime, @oac varchar(4), @tctype varchar (2) SET @startdate = '06-01-2008' SET @enddate = '06-24-2008' SET@oac='DE' SET @tctype='30' */ DECLARE @fiscalyear char(4), @sfy char(4), @efy char(4), @cfy char(4), @sby char(4), @eby char(4), @cby char(4), @sam varchar(2), @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@startdate) +1 ELSE DATEPART(YEAR,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR,@enddate) +1 ELSE DATEPART(YEAR,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR,GETDATE()) +1 ELSE DATEPART(YEAR,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day, @startdate)>'7' THEN (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 6 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 18 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 6 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '25' ELSE '26' END) ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH,@startdate) - 7 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@startdate) + 5 WHEN @sfy % 2 = 1 and DATEPART(MONTH,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@startdate) + 17 WHEN @sfy % 2 = 0 and DATEPART(MONTH,@startdate) = '7' THEN '24' ELSE '25' END) END IF @sam = '24' AND DATEPART(DAY,@startdate) <8 OR @sam IN ('25','26') BEGIN SET @sby = @sby-2 END SET @eam = CASE WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) + 6 WHEN @efy % 2 = 1 and DATEPART(MONTH,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH,@enddate)+ 18 WHEN @efy % 2 = 0 and DATEPART(MONTH,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH,@enddate) - 6 ELSE DATEPART(MONTH,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = '0' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = '0' + @eam END IF @sby = @cby AND NOT (DATEPART(MONTH,@startdate) IN ('7','8') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr, EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', PriorPeriodInd AS 'PriorYearInd', OriginatingSystemCode+OriginatingAreaCode AS 'ORGSYS', CTIBudgetNbr AS 'Serv_Budget', '' AS 'Serv_SL', CTIAccountCode, CTIAccountCode AS 'Serv_EXP_CDE', '' AS 'CRTask', '' AS 'CROption', '' AS 'CRProject', FASRunNbr FROM sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam AND TranCode = '65' AND @oac = CASE WHEN TranCode = '60' OR TranCode = '65' THEN LEFT(DocumentNbr,2) ELSE OriginatingAreaCode END AND TranPostingDate BETWEEN @startdate AND @enddate AND DataSource != 'XE1' AND ISNULL(LEFT(CTIAccountCode,2),0) = CASE WHEN TranCode='65' THEN '96' WHEN TranCode='60' THEN '21' ELSE 0 END ORDER BY TranPostingDate, BudgetNbr END ELSE SELECT TDPrimaryKey, TranCode, TranPostingDate, AcctgMonth, '' AS 'ProcessTimeStamp', OriginatingAreaCode, BudgetNbr AS 'Req_BudgetNumber', FundCode AS 'Req_FND', AppropriationCode AS 'Req_App','' AS 'Req_SL',AccountCode AS 'Req_EXP_CDE', PCATaskCodeOrig AS 'Task', PCAOptionCodeOrig AS 'Option', PCAProjectCodeOrig AS 'Project', DocumentNbr,EncumbranceLiqCode AS 'LiquidationCd', CommodityCode AS 'CommodityCd', TranQuantity AS 'Quantity', PositionNbr AS 'PositionNumber', JobClassCode AS 'OccupationCode', ServicePeriod AS 'Service', TranFTE AS 'FTE',TranAmount,TranDate1 AS 'DocumentDate', TranDesc AS 'Name', CashFlag, CheckFlag,MoneyOrderFlag, BankCode, TranReference1 AS 'ReferenceNumber', TranReference3 AS 'InvoiceNumber', EncNbr AS 'RequisitionNumber', Prior",EDWAdminMart,No
Report,Learning Spaces Policy,5/22/19,7/11/19,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"This report is used by Time Schedule coordinators to comply with the Learning Spaces Policy. Details regarding the policy are available at https://registrar.washington.edu/classrooms/learning-spaces-faq/ . The Learning Spaces Policy only applies to Seattle Campus, but Tacoma and Bothell course distribution data is included in the report.",Financial Resources,Enrollment Information Services,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Report,Cost Share Commitments and Contributions,5/21/19,7/10/19,Kirsten DeFries,Nina Velikin,"This report shows summary information on all active Sponsored Awards (status 1, 2 or 3) with a Cost Share Commitment entered into the Cost Share Summary system. Summary information is provided on the Cost Share type (Mandatory or Voluntary), unit of measure (dollar or percent), and total dollar amounts for the Commitment and Contribution. As applicable, summary information is available on percent-of-effort Commitments and Contributions. Detailed information on an Award’s Cost Share can be fou",Services & Resources,Post Award Fiscal Compliance,"SELECT sr_adm_appl.appl_qtr , sr_adm_appl.appl_yr , sr_adm_appl.appl_branch , sr_adm_appl.appl_status_rsn , v.student_no , v.student_name_lowc , v.system_key , sr_adm_appl.appl_status , sr_adm_appl.adv_reg_prt_dt , registration.regis_yr , registration.regis_qtr , registration.special_program AS Expr1 , registration.advising_date , registration.advising_type , registration.regis_class , addr.e_mail_ucs , addr.e_mail_other , AppStatus = CASE WHEN sr_adm_appl.appl_status = 1 THEN 'Application Received -- Not Processed' WHEN sr_adm_appl.appl_status = 2 THEN 'Incomplete' WHEN sr_adm_appl.appl_status = 4 THEN 'File Complete and Sent to Department' WHEN sr_adm_appl.appl_status = 5 THEN 'HOLD- Requested Additional Documenation' WHEN sr_adm_appl.appl_status = 7 THEN 'Applicant Withdrew Application' WHEN sr_adm_appl.appl_status = 8 THEN 'Applicant is Denied Admission' WHEN sr_adm_appl.appl_status = 9 THEN 'Temp Hold- File is Complete and Sent to Evaluators' WHEN sr_adm_appl.appl_status = 10 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 12 THEN 'Applicant has Registered for Classes' WHEN sr_adm_appl.appl_status = 14 THEN 'Applicant is Admited to the University' WHEN sr_adm_appl.appl_status = 15 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 16 THEN 'Applicant is Paid Confirmation Fee' WHEN sr_adm_appl.appl_status = 17 THEN 'Files Complete - Too Late for an Admissions Decision' WHEN sr_adm_appl.appl_status = 24 THEN 'Applicant Declined Our Offer of Admission' ELSE 'NON UWB App Status' END , ( SELECT COUNT(*) AS Expr1 FROM sec.sr_adm_appl AS app_sea WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0 ) = 0 THEN 'No' ELSE 'Yes' END AS Seattle_app , CASE WHEN ( SELECT COUNT(*) FROM sec.sr_adm_appl app_sea WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2 ) = 0 THEN 'No' ELSE 'Yes' END AS Tacoma_app , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14) ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10,14) ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) ) = 2 THEN 'Tacoma' /* WHEN ((select appl_branch from sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10,14)) AND (select appl_branch from sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10,14) )) THEN 'Seattle and Tacoma'*/ --Build Case for Seattle- And Tacoma Acceptance --Build acceptance for all three campus ELSE 'None' END AS Accepted , CASE WHEN ( select appl_branch from sec.sr_adm_appl b where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16 ) = 0 THEN 'Seattle' WHEN ( select appl_branch from sec.sr_adm_appl c where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16 ) = 1 THEN 'Bothell' WHEN ( select appl_branch from sec.sr_adm_appl d where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16 ) = 2 THEN 'Tacoma' ELSE 'None' END AS Confirmed ,HST_Received = appl_doc_rcvd_dt ,Current_Credits = registration.current_credits ,mpt.test_dt ,mpt.test_type ,mpt.test_score FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key AND registration.regis_yr = rcm.regis_yr AND registration.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN ( SELECT * FROM sec.sr_adm_applicant_docs WHERE appl",EDWAdminMart,No
Report,Study Abroad Students by Unit,7/12/19,8/31/19,University Registrar and Chief Officer of Enrollment Information Services,Tom Escobar,This report displays a list of students that have studied abroad for a given academic unit and time period. The report is intended to be used by the Office of Global affairs and departmental administrators so that they can access data on specific students in their departments that have studied abroad. Data goes back to Academic Year 2012-2013. NOTE: rows are duplicated INTENTIONALLY by Location with multiple Cities/Countries for a given Student enrolled in a given Quarter.,Financial Resources,Office of Global Affairs,SELECT * FROM Report WHERE ReportCodeNbr = @rptcd,EDWAdminMart,No
Report,Immunization Report,9/3/19,10/23/19,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,This report displays a list of students and their immunization status. The report is intended to be used by Hall Health and Health Sciences Immunization Program (HSIP) so that they can identify students who have or have not fulfilled their immunization requirements.,Financial Resources,Enrollment Information Services,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,GL Transactions by Month,4/19/11,6/8/11,Dan Schaaf,Dinah Mite Millikin,The GL Transactions by Month report shows transactions records by accounting month for a specific GL Account / Fund Code combination.,Services & Resources,Enterprise Reporting and Analytics,"SELECT rvg.FACILITY_CODE FacilityCode, rvg.ROOM_NUMBER RoomNumber, rvg.ORGANIZATION assignee_organization, rvg.EMPLOYEE_ID assignee_eid, rvg.budget_number, RTRIM(bi.budgetname) AS budget_name FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND rvg.ROOM_NUMBER = @roomno AND rvg.ORGANIZATION = @assignorg AND rvg.EMPLOYEE_ID = @empid",EDWAdminMart,No
Report,Legacy HR/P Check History,10/18/19,12/7/19,Please see Interpretation tab in BI Portal for information.,Alin Hunter,"This report displays gross amount earned and net amount paid to a specific employee. It can be used to verify prior employment and payment history. For Usage Guide, please go back to BI Portal Interpretation tab.",University Advancement,Legacy HR/P Implementation,"SELECT v.system_key, v.student_name, a.appl_type, Appl_level = case when a.appl_type = '1' then 'FR' when a.appl_type = '2' then 'UG 2yr' when a.appl_type = '4' then 'UG 4yr' when a.appl_type = '6' OR a.appl_type = 'R' then 'UG (Returning)' when a.appl_type = '5' then '5YR' when a.appl_type = 'N'OR a.appl_type = 'P' then 'NM' when a.appl_type = '7' then 'GR (Returning)' when a.appl_type = 'G' then 'GR (Gradute)' when a.appl_type = 'E' then 'GNM' when a.appl_type = 'P' then 'PRO' else 'No Appl Type' end, a.appl_status, status_dt = convert(char(10), a.appl_status_dt,110), s.appl_stat_descrip, Case when r.enroll_status = 12 then 'Yes' end as Registered, a.appl_yr, Appl_Qtr = case when a.appl_qtr = 1 then 'Winter' when a.appl_qtr = 2 then 'Spring' when a.appl_qtr = 3 then 'Summer' when a.appl_qtr = 4 then 'Autumn' end, rcvd_dt = convert(char(10),a.appl_rcvd_dt,110), ar.req_major_abbr, mc.major_full_nm, addr.local_line_1, addr.local_city, addr.local_state, addr.local_zip_5 FROM sec.student_1 v inner join sec.sr_adm_appl a on v.system_key = a.system_key inner join sec.sr_adm_appl_req_col_major ar on a.appl_yr = ar.appl_yr and a.appl_qtr = ar.appl_qtr and a.appl_no = ar.appl_no and a.system_key = ar.system_key inner join sec.sr_major_code mc on ar.req_major_abbr = mc.major_abbr inner join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on v.system_key = addr.system_key left join sec.registration r on a.system_key = r.system_key and a.appl_yr = r.regis_yr and a.appl_qtr = r.regis_qtr WHERE a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date",EDWAdminMart,No
Report,Legacy HR/P Funding History,11/7/19,12/27/19,Please see Interpretation tab in BI Portal for information.,Van Nguyen,"This report displays details of funds used to pay a specific employee. It can be used to verify which departments were funding specific employees. For Usage Guide, please go back to BI Portal Interpretation tab.",University Advancement,Legacy HR/P Implementation,"/*DECLARE @orglevel10 char(10), @budgetgroup char(6), @calmonth char(2), @calyear int , @budgetperiod char(1) SET @orglevel10 = '2600004000' SET @budgetgroup = '6GD' SET @calmonth = '5' SET @calyear = 2011 SET @budgetperiod = 'B' */ DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12 THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = convert(int,@fiscalyear)%2 /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */ DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18 WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6 ELSE @calmonth + 21 END DECLARE @bienniumyear char(4), @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@fiscalyear %2) - 1 select @fiscalYearToUse = convert(char(4),(CASE WHEN @evenoddfy =0 and @fiscalyear < (SELECT max(convert(int,fiscalyear)) FROM sec.dimBudgetIndexFY) THEN @fiscalyear+1 ELSE @fiscalyear end)) IF OBJECT_ID('tempdb..#BudgetGroups') IS NOT NULL DROP TABLE #BudgetGroups CREATE TABLE #BudgetGroups (Fiscalyear char(4), Orgcode char(10), OrgDeptCode char(7), OrgDeptName varchar(50), BudgetSuperClassCode char(5), BudgetTypeCode char(2), BudgetClassCode char(2), Budgetnbr char(6),Budgetname varchar(50), BudgetStatusCode char(1), BudgetGroup varchar(50), BudgetGroupCode varchar(10)) IF @budgetperiod = 'b' BEGIN Insert into #BudgetGroups (FiscalYear, OrgCode, OrgDeptCode, OrgDeptName, BudgetSuperClassCode, BudgetTypeCode, BudgetClassCode, Budgetnbr, Budgetname, BudgetStatusCode, BudgetGroup, BudgetGroupCode) (SELECT DISTINCT BI.fiscalyear , BI.OrgCode , LEFT(BI.OrgCode,7) , OD.OrgDeptName , BTC.budgetsuperclasscode , BTC.budgettypecode , BTC.budgetclasscode , BI.budgetnbr , BI.budgetname , BI.BudgetStatusCode , CASE WHEN BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R' THEN 'Gifts and Discretionary' WHEN BTC.budgetsuperclasscode = 'ROF40' AND BI.RFAcctngCode != 'R' THEN 'Self Sustaining - Auxillary Ed Activities' WHEN (BTC.budgetsuperclasscode = 'ROF70' AND BI.RFAcctngCode != 'R' ) OR (BI.BudgetTypeCode = '56' and BI.BudgetClassCode = '04') THEN 'Self Sustaining - Service Funds' WHEN BI.BudgetTypeCode = '05' and BI.BudgetClassCode = '52' THEN 'Clinical Medicine Fund' ELSE BTC.budgetsuperclasscode END AS 'BudgetGroup', CASE WHEN BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R' THEN '6GD' WHEN BTC.budgetsuperclasscode = 'ROF40' AND BI.RFAcctngCode != 'R' THEN '8SAEA' WHEN (BTC.budgetsuperclasscode = 'ROF70' AND BI.RFAcctngCode != 'R' ) OR (BI.BudgetTypeCode = '56' and BI.BudgetClassCode = '04') THEN '9SSSF' WHEN BI.BudgetTypeCode = '05' and BI.BudgetClassCode = '52' THEN '9CMF' ELSE Budgetsuperclasscode END AS 'BudgetGroupCode' FROM sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI ON BI.budgettypecode = BTC.budgettypecode AND BI.budgetclasscode = BTC.budgetclasscode AND BI.fiscalyear = BTC.fiscalyear LEFT JOIN (SELECT OrgName as 'OrgDeptname', LEFT(OrgCode,7) as 'OrgDeptLevel' FROM sec.dimOrganizationFY WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3,4) GROUP BY OrgName, left(OrgCode,7)) OD on LEFT(BI.OrgCode,7) = OD.OrgDeptLevel WHERE ( (BTC.BudgetSuperClassCode IN ('ROF40', 'ROF70')) OR (BTC.BudgetTypeCode = '56' AND BTC.BudgetClassCode = '04') OR (BTC.BudgetTypeCode = '05' AND BTC.BudgetClassCode = '52') OR (BTC.BudgetSuperClassCode = 'ROF35' AND BI.RFAcctngCode = 'R')) AND BTC.FiscalYear = @fiscalYearToUse AND BI.OrgCode IN (@orglevel10)) SELECT BTC.OrgDeptCode , BTC.OrgDeptName , btc.OrgCode , BTC.BudgetGroup , BTC.BudgetGroupCode , BTC.BudgetNbr , BTC.BudgetName , BTC.BudgetStatusCode , (BTC.BudgetTypecode + '-' + BTC.budgetclasscode) AS 'TYPE_CLASS' , SUM(CASE WHEN FS.TranCode ='32' AND FS.ObjSubObjCode = '9788' THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'FundBeginningBalance', SUM(CASE WHEN (/*Revenue*/ ((FS.TranCode IN ('30', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73')) OR(FS.Trancode = '32' AND FS.ObjSubObjCode != '9788')) AND LEFT(FS.ObjSubObjCode, 1) = '9') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'Revenue' , /*Expenditures without encumbrances*/ SUM(CASE WHEN (FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) != '9') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS 'Expense', SUM(CASE WHEN (/*Revenue*/ FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) = '9') OR (/*Expenses*/ FS.TranCode IN ('30', '32', '35', '36', '44', '50', '52', '60', '61', '62', '65', '70', '73') AND LEFT(FS.ObjSubObjCode, 1) != '9') THEN (FS.SummaryAmt * -",EDWAdminMart,No
Report,Current Student Information,10/23/19,12/12/19,University Registrar and Chief Officer of Enrollment Information Services,Bill Abella,"This report displays attributes about the population of currently enrolled students for the selected Major(s)/Minor(s). The report also displays student demographic information, contact information, majors, and GPAs for students enrolled in the current quarter.",Financial Resources,Enrollment Information Services,"SELECT AcctngMonth, TransTypeCode AS TransCode, CASE WHEN TransTypeCode = 35 THEN 'Adjustment' WHEN TransTypeCode = 50 THEN 'Stipend' WHEN TransTypeCode= 70 THEN 'Salary' WHEN TransTypeCode= 71 THEN 'Benefits' END AS 'transdesc', SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '1160') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY AcctngMonth, TransTypeCode ORDER BY TransTypeCode",EDWAdminMart,No
Report,Legacy HR/P Employee Search,1/29/20,1/29/20,Please see Interpretation tab in BI Portal for information.,Steve Shen,"This report displays Employee Name, Employee Identification Number (EID) and Home Department, along with links to available reports for the employee. If you do not have access to some of the linked reports, but you need them for your work, please email help@uw.edu with""Request Access: Legacy HR/P Report in the subject line. Permission for this data source is managed by the Data Custodians.",University Advancement,Legacy HR/P Implementation,"SELECT DISTINCT s1.system_key ,s1.student_name ,'First Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), 1, CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))) ,'Middle Name' = SUBSTRING(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)), CHARINDEX(' ',SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, LEN(s1.student_name)))+1,LEN(SUBSTRING(s1.student_name, CHARINDEX(',',s1.student_name) + 1, 1))) ,'Last Name' = SUBSTRING(s1.student_name, 1, CHARINDEX(',',s1.student_name)-1) ,student_no_char = CASE WHEN LEN(CONVERT(CHAR(7),s1. student_no)) = 6 THEN '0' + CONVERT(CHAR(7), s1.student_no) WHEN LEN(CONVERT(CHAR(7), s1.student_no)) = 5 THEN '00' + CONVERT(CHAR(7), s1.student_no) ELSE CONVERT(CHAR(7), s1.student_no) END ,'SAT_CR' = CASE WHEN s1.s1_high_satv > 0 THEN s1.s1_high_satv ELSE NULL END ,'SAT_Math' = CASE WHEN s1.s1_high_satm > 0 THEN s1.s1_high_satm ELSE NULL END , 'SAT' = CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END ,'ACT Composite' = CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END ,high_sch_gpa ,a.trans_gpa ,'Cumulative GPA' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END ,appl_type , a.appl_status , s.appl_stat_descrip ,addr.perm_line_1 , addr.perm_line_2 , addr.perm_city , addr.perm_state , addr.perm_zip_5 ,st30hs.high_school_name FROM sec.student_1 s1 INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key LEFT join sec.sys_tbl_72_appl_status s on a.appl_status = s.table_key left join sec.addresses addr on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key WHERE a.appl_yr IN(@Year) AND a.appl_qtr IN (@Quarter) AND a.appl_branch = @branch AND a.appl_type = '1' AND (a.resident NOT IN ('5', '6') AND addr.perm_state <> 'WA' ) AND high_sch_gpa >= 3.4 AND ( CASE WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0 THEN s1.s1_high_satv + s1.s1_high_satm ELSE NULL END >= 1090 OR CASE WHEN s1.s1_high_act > 0 THEN s1.s1_high_act ELSE NULL END >= 23 )",EDWAdminMart,No
Cube,EDWAdminMart,7/7/2021,1/20/20,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,EDW report usage statistics since 2008,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",EDWAdminMart,No
Cube,Fin Activity Biennium 2007,7/7/2021,7/1/07,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,Full 2007 Biennium,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2007 ,No
Cube,Fin Activity Biennium 2009,7/7/2021,7/1/09,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,Full 2009 Biennium,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2009,No
Cube,Fin Activity Biennium 2011,7/7/2021,6/27/11,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,Full 2011 Biennium,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2011,No
Cube,Fin Activity Biennium 2013,7/7/2021,6/28/13,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,Full 2013 Biennium,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2013,No
Cube,Fin Activity Biennium 2015,7/7/2021,6/29/15,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,2015 Biennium to date,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2015,No
Cube,Fin Activity Biennium 2017,7/7/2021,6/30/17,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,2017 Biennium to date,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2017,No
Cube,Financial Activity Biennium 2019,7/7/2021,7/1/19,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,2019 Biennium to date,Financial Resources,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",FinancialActivity2019,No
Cube,ResearchAdminData,7/7/2021,9/20/18,University Registrar and Chief Officer of Enrollment Information Services,Enterprise Reporting & Analytics,"The ResearchAdminData Cube contains Proposal, Award, and Expenditure data for sponsored research at the University of Washington.",Research Administration,Enterprise Reporting & Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Trends in Major Registrations,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Trends in Student Majors dashboard helps track the expansion and contraction of student major registrations over time, at all levels (Bachelor&rsquo;s, Master&rsquo;s, etc.) in all academic units. What is the measure we&rsquo;re tracking? The number of student registrations in a major program. When aggregated to a given academic unit, this number can be higher than the number of students in that unit, since each student may be registered for more than one major program. What is the",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Size of Academic Units and Type of Students Served,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Size of Academic Units and Type of Student Served dashboard offers a view of the relative size of academic units and the composition of their student body in terms of degree level (Bachelor&rsquo;s, Master&rsquo;s, etc.). What is the measure we&rsquo;re tracking? The number of students in a given academic unit &ndash; that is to say, the number of students registered for at least one major program associated with the unit. Students in major programs that are associated with more than on",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Trends in Undergraduate Student Academic Origin,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lilac,"The Trends in Undergraduate Student Academic Origin dashboard gives users an overview of students’ points of entry into their undergraduate program at the UW, addressing questions such as: · Are the students in my academic unit mostly first-time college students, or have they transferred from another institution? Has the answer to this question been consistent over the last few years, or has the pattern changed recently? · What institution do most UW students",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Trends in Student Geographic Origin,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,The Trends in Student Geographic Origin dashboard offers academic units and major programs an overview of the composition of their student body in terms of residency (Washington State residents / domestic non-residents / international students). What is the measure we&rsquo,Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Diversity Profile and Trends,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Diversity Profile and Trends dashboard offers academic units and majors an overview of the diversity of their student body, both in a reference quarter and over time. It allows the user to break enrollment down by several measures of diversity (e.g. sex, race/ethnicity, veteran status, Pell Eligibility, etc.). What is the measure we&rsquo;re tracking? The number of students in a given academic unit or major &ndash; that is to say, the number of students registered for at least one major",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Undergraduate Student Academic Performance,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Undergraduate Student Academic Performance dashboard provides insight into the average academic performance and credit load of matriculated undergraduate students in each academic unit for current academic year. What are the measures we’re tracking? This dashboard provides information about students’ cumulative GPA and total credits taken in a given quarter. What is the population of interest? The students in a given academic unit – that is to say, the stude",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Graduate/Professional Student Academic Performance,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Graduate/Professional Student Academic Performance dashboard provides insight into the average academic performance and credit load of matriculated graduate and professional students in each academic unit. What are the measures we’re tracking? This dashboard provides information about students’ cumulative GPA and total credits taken in a given quarter. What is the population of interest? The students in a given academic unit – that is to say, the students regi",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Trends in Degree Majors,7/7/2021,4/11/14,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Trends in Degree Majors dashboard helps track the expansion and contraction of degree major production over time, at all levels (Bachelor’s, Master’s, etc.) in all academic units. What is the measure we’re tracking? The number of degree majors. A degree with two majors counts as two degree majors, and will appear in the total for each academic unit with which the major is associated. What is the period we’re looking at? The graphs show a yearly trend since",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Summary and Trends - Degree Attributes,7/7/2021,4/11/14,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Summary and Trends – Degree Attributes dashboard provides information about several trends in degree attainment: 1) how many degrees students earn simultaneously; 2) how many degree majors students pursue as part of a degree; 3) what GPA students earn at the end of their studies, and 4) how many credits students graduate with. What is the period we’re looking at? The majority of the graphs provide a summary view of degree attributes in the most recent academic year. One",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Graduating Student Profile,7/7/2021,4/11/14,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Graduating Students Profile dashboard displays the number of students graduating with a degree major from a given academic unit, and allows the user to break the enrollment down by various student characteristics of interest (e.g. sex, race/ethnicity, time to degree, etc.). What is the measure we’re tracking? The number of students graduating with a degree major from a given academic unit and displaying a given characteristic. Students graduating with degree majors that",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Degree Summary,7/7/2021,4/11/14,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Degree Summary dashboard displays the number of degrees awarded for a given academic unit, and allows the user to break the number of degrees down by various characteristics of interest (e.g. degree level, degree type, credits earned, etc.). What is the measure we’re tracking? The number of degrees awarded by a given academic unit and displaying a given characteristic during a given academic year. Note that a single student may earn more than one degree in an academic y",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Degree Summary - Unit Comparisons,7/7/2021,4/11/14,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Degree Summary – Unit Comparisons dashboard provides a comparative display of the number of degrees associated with two academic units, and allows the user to break the number of degrees down by various characteristics of interest (e.g. degree level, degree type, credits earned, etc.). What is the measure we’re tracking? The number of degrees that are associated with two academic units and that display a given characteristic during a given academic year. Note that a sin",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Undergraduate One-Quarter and One-Year Retention Trends,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Undergraduate One-Quarter and One-Year Retention Trends dashboard reports trends in one-quarter and one-year undergraduate retention rates for each campus, and allows these rates to be broken down by student characteristics of interest (race/ethnicity, full-time status, academic origin, etc.) Whose retention are we tracking? We are tracking the retention of students pursuing their first undergraduate degree (i.e. excluding post-baccalaureate students). What do",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Undergraduate Graduation Rates and Time to Degree,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Undergraduate Graduation Rates and Time to Degree dashboard reports graduation rate and time to degree trends for undergraduate students, and allows this information to be broken down by student characteristics of interest (race/ethnicity, full-time status, academic origin, etc.) Whose graduation rates and time to degree are we tracking? We are tracking the graduation rates and time to degree of students pursuing their first undergraduate degree (i.e. excluding post-bac",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Undergraduate Student Persistence and Graduation by Year of Study,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Undergraduate Student Persistence and Graduation by Year of Study dashboard tracks the retention, persistence and graduation patterns of recent undergraduate student cohorts, and allows this information to be broken down by student characteristics of interest (race/ethnicity, full-time status, academic origin, etc.) Whose retention, persistence and graduation patterns are we tracking? We are tracking the retention, persistence and graduation patterns of students pursuin",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Trends in Student Credit Hours,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Trends in Student Credit Hours dashboard helps track the expansion and contraction of student credit hours over time, at all levels (undergraduate, graduate, professional), and in all academic units. What is the measure we&rsquo;re tracking? The number of student credit hours. Student credit hours represent the sum of academic credits associated with students' active course registrations on census day of a given quarter. What is the period we&rsquo;re looking at",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Student Characteristics by Course Taken,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Student Characteristics by Curriculum dashboard displays the number of students who are registered for at least one class at a given level in a given curriculum, and allows the user to view various characteristics of interest for these students (e.g. sex, race/ethnicity, academic origin, etc.). What is the measure we&rsquo;re tracking? The number of students registered for at least one class at a given level in a given curriculum (or set of curricula). Aca",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Summary of Teaching Activity (SCH),7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Summary of Teaching Activity (SCH) dashboard displays the number student credit hours (SCH) associated with a given academic unit or curriculum, and allows the user to break the SCH down by various characteristics of interest (e.g. course level, section type, etc.). What is the measure we&rsquo;re tracking? The number of student credit hours. Student credit hours represent the sum of academic credits associated with students' active course registrations on census day",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Summary of Teaching Activity (SCH) - Unit Comparisons,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Summary of Teaching Activity (SCH) &ndash; Unit Comparisons dashboard provides a comparative display of the number of student credit hours (SCH) associated with two academic units or curricula, and allows the user to break the SCH down by various characteristics of interest (e.g. course level, section type, etc.). What is the measure we&rsquo;re tracking? The number of student credit hours. Student credit hours represent the sum of academic credits associated with students' active cours",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Enrollment Summary,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Enrollment Summary dashboard displays the number of students enrolled in a given academic unit or major, and allows the user to break the enrollment down by various characteristics of interest (e.g. student level, residency, race/ethnicity, etc.). What is the measure we&rsquo;re tracking? The number of students registered in a given academic unit or major during the chosen time period and having a given characteristic. Every student count in this dashboard is a count of unique stud",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Enrollment Summary - Unit Comparisons,7/7/2021,4/6/18,University Registrar and Chief Officer of Enrollment Information Services,Nevena Lalic,"The Enrollment Summary &ndash; Unit Comparisons dashboard provides a comparative display of the number of students enrolled in two academic units or majors, and allows the user to break the enrollment down by various characteristics of interest (e.g. student level, residency, race/ethnicity, etc.). What is the measure we&rsquo;re tracking? The number of students in a given academic unit or major and displaying a given characteristic during the chosen time period. Every student count in",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Current Course Demand,7/7/2021,5/20/19,University Registrar and Chief Officer of Enrollment Information Services,Dev Nambi,The Current Course Demand dashboard uses Notify.UW data as a proxy for demonstrating the demand for a selected course. The count of notify subscriptions for a course in the selected time period is compared to a zero baseline. The zero baseline represents the point at which the course enrollment limit has been met and the course is at full capacity according to the Student Database (SDB). Notify.UW is a free tool that sends notifications about course availability. UW NetID holders who subsc,Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Current Notify Course Demand,7/7/2021,5/20/19,University Registrar and Chief Officer of Enrollment Information Services,Dev Nambi,"The Current Notify Course Demand dashboard displays the count of Notify subscribers who successfully register for a course compared with those who did not register, in all academic units. This dashboard uses Notify.UW data as a proxy for understanding demand for a given course.",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Trends in Course Demand,7/7/2021,5/20/19,University Registrar and Chief Officer of Enrollment Information Services,Dev Nambi,The Trends in Course Demand dashboard uses Notify.UW data as a proxy for understanding demand for a given course over time. The count of notify subscriptions for a course in the selected time period is compared to a zero baseline which is the course enrollment limit for the course according to SDB. This metric is then displayed over time for the selected courses.,Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Summary of Research Proposal Counts and Amounts,7/7/2021,8/1/19,Jim Kresl,Grzegorz Grabowski,"The Summary of Research Proposal Counts and Amounts dashboard facilitates understanding of trends for research proposal counts and nominal research proposal amounts over time, broken down by funding entity categories. The data that populate the dashboard are sourced from the Research Administration Data (RAD) tables in the EDWPresentation database. What is the period we&rsquo;re looking at? The dashboard time period covers a 10-fiscal year rolling window. By default, all",Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Summary of Research Award Counts and Amounts,7/7/2021,8/1/19,Jim Kresl,Grzegorz Grabowski,"The Summary of Research Award Counts and Amounts dashboard facilitates understanding of trends for research award counts and nominal research award amounts over time, broken down by funding entity categories. The data that populate the dashboard are sourced from the Research Administration Data (RAD) tables in the EDWPresentation database. What is the period we&rsquo;re looking at? The dashboard time period covers a 10-fiscal year rolling window. By default, all the values ar",Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Course Progress in Major,7/7/2021,10/22/19,University Registrar and Chief Officer of Enrollment Information Services,Dev Nambi and Crystal Eney,"The Course Progress in Major dashboard displays the course status (grades and registration) for courses commonly taken by students in each major. These ‘frequent’ courses are typically prerequisites to earn a degree in that major. The purpose of the visualization is to show students’ progress in their major, so advisors can quickly identify students who should be contacted. What is the measure we’re tracking? The graphs show course status, which is a",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Exit Survey for Doctoral,7/7/2021,10/30/17,University Registrar and Chief Officer of Enrollment Information Services,Jennifer Lehner/Ross Lordon,"The Exit Survey for Doctoral Graduate Students storyboard displays responses to survey questions from the Graduate Student Exit Survey taken by doctoral students at the time they submit a graduation request with the Graduate School, and allows the user to break down the responses by various characteristics of interest (e.g. gender, residency, race/ethnicity, degree, college degree program, etc.). The Graduate School conducts an exit survey of all graduate students requesting",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,"Exit Survey for Masters, Practice Doc, and Ed Specialist",7/7/2021,10/30/17,University Registrar and Chief Officer of Enrollment Information Services,Jennifer Lehner/Ross Lordon,"The Exit Survey for Masters, Practice Doc, and Ed Specialist Graduate Students storyboard displays responses to survey questions from the Graduate Student Exit Survey presented to graduate students at the time they receive a graduation confirmation email from the Graduate School. (Prior to Summer Quarter 2016, the survey was presented to students at the time they filed a graduation request with the Graduate School but prior to actual graduation). This storyboard allows the user t",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Faculty Demographic Trends,7/7/2021,11/13/19,Peg Stuart,Courtney Drake,"The Faculty Demographic Trends dashboard displays a point-in-time snapshot of faculty demographic data captured each autumn quarter, beginning in autumn 2010. Due to changes in data infrastructure, this report has been split into two dashboards: <ul> <li>Faculty Demographic Trends (2010 to 2016)</li> <li>Faculty Demographic Trends (2017 and later)</li> </ul> <h3>How to Get Support:</h3> <ul> <li>Data questions: Office of Academic Personnel (<a href=""mailto:acaddata@uw.edu"">acadda",University Advancement,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Graduate Student Accept Offer Survey,7/7/2021,10/18/17,Dean of Graduate School,Graduate School - Jennifer Lehner / Ross Lordon,"The Graduate Student Accept Offer Survey Dashboard displays responses to survey questions from the Graduate Student Accept Offer Survey. Students take this survey at the time they accept their offer of enrollment for graduate studies at UW in MyGradProgram. Dashboard users are able to filter and break down the data based on academic characteristics of interest (e.g. college, department, major) and demographic characteristics of interest (e.g. degree level, residency, ethnicity, g",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Graduate Student Decline Offer Survey,7/7/2021,10/18/17,Dean of Graduate School,Graduate School - Jennifer Lehner / Ross Lordon,"The Graduate Student Decline Offer Survey Dashboard displays responses to survey questions from the Graduate Student Decline Offer Survey. Students take this survey at the time they decline their offer of enrollment for graduate studies at UW in MyGradProgram. Dashboard users are able to filter and break down the data based on academic characteristics of interest (e.g. college, department, major) and demographic characteristics of interest (e.g. degree level, residency, ethnicity",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Washington State Award Production,7/7/2021,10/31/17,Dean of Graduate School,Central Puget Sound Higher Education - Jeremy Caci,"The Washington State Award Program displays trends from Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc, litot Europa usa li sam vocabular. Li lingues differe solmen in li grammatica, li pronunciation e li plu commun vocabules. Omnicos directe al desirabilite de un nov lingua franca: On refusa continuar payar custosi traductores. At solmen va esser necessi far uniform grammatica, pronunciation e plu sommun paroles. Ma quande",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Employment Projections,7/7/2021,10/31/17,Dean of Graduate School,Central Puget Sound Higher Education - Jeremy Caci,"The Employment Projections visualization displays alternative state specific trends of Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie, musica, sport etc, litot Europa usa li sam vocabular. Li lingues differe solmen in li grammatica, li pronunciation e li plu commun vocabules. Omnicos directe al desirabilite de un nov lingua franca: On refusa continuar payar custosi traductores. At solmen va esser necessi far uniform grammatica, pronunci",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Overview of Research Total Expenditures,7/7/2021,8/1/19,Jim Kresl,Grzegorz Grabowski,"The Overview of Research Total Expenditures dashboard helps users to understand trends in total research expenditures amounts (nominal or inflation-adjusted) over time, broken down by federal/non-federal sources, direct/indirect, and expenditure type categories. The data that populate the dashboard are sourced from the Research Administration Data (RAD) tables in the EDWPresentation database. What is the time period for the data? The dashboard time period covers a 10-fiscal year rolling win",Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Comparison of Research Direct and Indirect Expenditures,7/7/2021,8/1/19,Jim Kresl,Grzegorz Grabowski,"The Comparison of Research Direct and Indirect Expenditures dashboard allows users to explore direct and indirect expenditure amount trends over time. Users can filter the data by expenditure type, department, and fiscal year and month. The data that populate the dashboard are sourced from the Research Administration Data (RAD) tables in the EDWPresentation database. What is the time period for the data? The dashboard time period covers a 10-fiscal year rolling window. By default, all",Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Summary of Research Total Expenditures by Funding Entities,7/7/2021,8/1/19,Jim Kresl,Grzegorz Grabowski,The Summary of Research Total Expenditures by Funding Entities dashboard helps users to visualize the amount of total expenditures by funding source. Users can view the expense data by either nominal or inflation-adjusted amounts. The dashboard allows users to filter by department or by fiscal year and month. The data that populate the dashboard are sourced from the Research Administration Data (RAD) tables in the EDWPresentation database. What is the time period for the data? The dashboard,Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,Yes
Visualization,Sponsored Research Highlights,7/7/2021,9/5/18,Jim Kresl,Grzegorz Grabowski,"The Sponsored Research Highlights Dashboard provides an at-a-glance overview of research funding at the University of Washington. It answers 2 basic questions at a high level: Where does research funding come from, and how is it spent? The dashboard also serves as a launch pad, by linking to detailed data visualizations to enable a deeper exploration into Research Awards, and Expenditures data. Users can click on a trend line in the highlights dashboard to drill through to a more detail",Human Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Total Classroom Utilization by Hour,7/7/2021,1/16/19,University Registrar and Chief Officer of Enrollment Information Services," Bill Abella, Alexis Wall and Matt Portwood","This visualization was created to help advisers and Time Schedule coordinators to comply with the Learning Spaces Policy. Details regarding the policy are available at <a href=""https://registrar.washington.edu/learning-spaces-faq/""><span style=""font-weight: 400;"">https://registrar.washington.edu/learning-spaces-faq/</a><span style=""font-weight: 400;""> . The Learning Spaces Policy only applies to Seattle Campus, so Tacoma and Bothell campuses data is not included in the visualizatio",Financial Resources,Enterprise Reporting and Analytics,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,UW Calendars,7/7/2021,1/6/20,University Registrar and Chief Officer of Enrollment Information Services,Courtney Drake,"This visualization displays the various calendars frequently used by the University of Washington’s faculty, staff, and students. The visualization is intended to identify, for any given day, the point-in-time on any given calendar. The data is sourced from the EDWPresentation, table dimDate, and is refreshed quarterly.",Healthcare,Office of Planning and Budgeting,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
Visualization,Time Schedule Enrollment by Day and Time,7/7/2021,2/12/20,University Registrar and Chief Officer of Enrollment Information Services,Greg Grabowski,displays a heat map of current enrollment counts broken down by day and time in order to demonstrate times of high and low campus activity. The dashboard divides the academic day into 30 minute increments. Student enrollments are counted during a 30 minute period if a course is scheduled during any part of a period. Note: This dashboard should not be used for Learning Spaces Policy compliance. See the Interpretation tab for more detail.,Healthcare,Office of Planning and Budgeting,"SELECT GLProcessingDate, TransBatchNbr, TransTypeCode, Sum(RecordCount) as RecondCount, SUM(DebitSumAmt) AS Debit, SUM(CreditSumAmt) AS Credit FROM GLDataMart.sec.TransGLSummary WHERE (GLAccountCode = '4801') and BienniumYear =@bienyear and AcctngMonth= @Acctgmonth GROUP BY GLProcessingDate, TransBatchNbr, TransTypeCode ORDER BY GLProcessingDate, TransBatchNbr, TransTypeCode",ResearchAdminData,No
