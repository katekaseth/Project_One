create table if not exists users (
    id int not null auto_increment primary key,
	pass_hash varchar(128) not null,
	username varchar(255) not null,
	CONSTRAINT UC_user UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS documents (
    document_id INT not null AUTO_INCREMENT primary key,
    tool_type VARCHAR(50) not null,
    title VARCHAR(100) not null,
    created date not null,
    updated date not null,
    custodian VARCHAR(100) not null,
    author VARCHAR(100) not null,
    description VARCHAR(300) not null,
    subject_area VARCHAR(50) not null,
    sql_query VARCHAR(5000) not null,
    database_name VARCHAR(50) not null
);

create table if not exists bookmarks (
    bookmark_id int not null auto_increment primary key,
    user_id int,
    document_id int,
    CONSTRAINT FK_user FOREIGN KEY (user_id) REFERENCES users(id),
	CONSTRAINT FK_document FOREIGN KEY (document_id) REFERENCES documents(document_id)
);

INSERT INTO documents (tool_type, title, created, updated, custodian, author, description, subject_area, sql_query, database_name)
values
('Report','How Many Students By College','2012-10-15','2012-12-04','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Displays a graph of the unduplicated headcount by College or School as of Census Day for a specified quarter for the past ten years. Excluded from these counts are foreign study students\, on leave stu','Financial Resources','SELECT       AcctngMonth\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM        GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''1160'') AND (BienniumYear =@BienniumYear) GROUP BY   AcctngMonth ORDER BY                AcctngMonth','EDWAdminMart'),
('Report','How Many Students at the University','2007-09-19','2007-11-08','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Displays a graph of the unduplicated headcount of students at the University of Washington (all campuses) as of Census Day for a specified quarter for the past ten years. Excluded from these counts ar','Financial Resources','SELECT rao.FACILITY_CODE FacilityCode\,        rao.ROOM_NUMBER RoomNumber\,        rao.ORGANIZATION assignee_organization\,        rao.EMPLOYEE_ID assignee_eid\,        rao.Occupant_EID\,        ISNULL(s_occup.Name\, ''n/a'') Occupant_Name         FROM dbo.room_assignment_occupant rao LEFT JOIN dbo.Person s_occup      ON s_occup.IdNbr = rao.occupant_eid    WHERE rao.FACILITY_CODE = @facilitycode AND       rao.ROOM_NUMBER = @roomno AND       rao.ORGANIZATION = @assignorg AND       rao.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','How Many Credit Hours Are Being Taught','2007-10-23','2007-12-12','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Displays a graph of total credit hours taught by quarter by college for the last ten years. Useful for trend analysis. Required parameters are quarter and college.','Financial Resources','SELECT        YEAR(P.PayPeriodEndDate) AS PayYear\,         MONTH(P.PayPeriodEndDate) AS PayMonth\,         P.PayPeriodEndDate AS PaycycleEndDate\,        SUM(P.NetPayAmt) AS HeppsPayrollSum\,         CASE WHEN S.StateFiscalMonth < 10 THEN ''0'' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth\,             -- used in subreport param        SUBSTRING(S.StateFiscalBiennium\, 1\, 4) AS FisBien                                                                                                                           -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S  INNER JOIN ODS.sec.PayrollResultSummary AS P   ON S.CalendarDate = P.PayPeriodEndDate GROUP BY          YEAR(P.PayPeriodEndDate)\, MONTH(P.PayPeriodEndDate)\, P.PayPeriodEndDate\, S.StateFiscalMonth\, SUBSTRING(S.StateFiscalBiennium\, 1\, 4) ORDER BY          P.PayPeriodEndDate','EDWAdminMart'),
('Report','How Many Students By Department','2008-03-27','2008-05-16','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Displays a graph of the unduplicated headcount by department as of Census Day for a specified quarter for the past ten years. Excluded from these counts are foreign study students\, on leave students\, ','Financial Resources','SELECT   ts.ts_year \,ts.ts_quarter \,yrqtr = CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) \,Qtr_desc =  CASE  WHEN ts.ts_quarter = 1 THEN ''Winter '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 2 THEN ''Spring '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 3 THEN ''Summer '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 4 THEN ''Autumn '' + CAST(ts.ts_year AS char(4)) END \,Program = RTRIM(CASE WHEN dc.dept_abbr LIKE ''B %'' THEN SUBSTRING(dc.dept_abbr\,3\,6) ELSE dc.dept_abbr END) \,Program_full_name = RTRIM(dc.dept_full_nm) \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name \,ts.students_denied \,ts.starting_time \,ts.day_of_week \,ts.ending_time \,ts.pm_flag  FROM UWSDBDataStore.sec.time_schedule ts INNER JOIN UWSDBDataStore.sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM UWSDBDataStore.sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN UWSDBDataStore.sec.sr_dept_code dc  ON scc.curric_dept = dc.dept_code LEFT JOIN UWSDBDataStore.sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) IN (@yrqtr)   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   AND ts.dept_abbrev IN(@curric)   AND ts.course_no IN(@crsno)   ORDER BY  ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','How Many Students List','2008-03-27','2008-05-16','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Creates a count and roster of students registered on Census Day of the specified quarter\, sorted by major within the specified department. Excluded from these counts are foreign study students\, on lea','Financial Resources','WITH  --CTE 1 Cohort(syskey\,cohort_yrqtr) AS ( SELECT   smm0.mm_system_key \,MIN(smm0.mm_year * 10 + smm0.mm_qtr)  FROM UWSDBDataStore.sec.sr_mini_master smm0 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp0  ON smm0.mm_year = smmdp0.mm_year  AND smm0.mm_qtr = smmdp0.mm_qtr  AND smm0.mm_proc_ind = smmdp0.mm_proc_ind  AND smm0.mm_student_no = smmdp0.mm_student_no  AND smmdp0.index1 =1  AND smmdp0.mm_branch =1 WHERE smmdp0.mm_major_abbr = ''B PRE''   AND smm0.mm_proc_ind = 2   AND ((smm0.mm_year <1998 AND smm0.mm_curr_credits >0) OR (smm0.mm_sea_st_funded+smm0.mm_sea_self_sus+smm0.mm_bot_st_funded+smm0.mm_bot_self_sus+smm0.mm_tac_st_funded+smm0.mm_tac_self_sus >0)) GROUP BY smm0.mm_system_key ) --CTE 2 \,First_CUSP_yrqtr(syskey\, CUSP_cohort_yrqtr\, Cohort_Type) AS ( SELECT   c.syskey \,c.cohort_yrqtr \,CASE WHEN smm00.mm_last_schl_type = 1 THEN ''Freshmen'' WHEN smm00.mm_last_schl_type IN(2\,3) THEN ''Transfer'' ELSE ''Error'' END FROM Cohort c INNER JOIN UWSDBDataStore.sec.sr_mini_master smm00  ON c.syskey = smm00.mm_system_key  AND c.cohort_yrqtr = (smm00.mm_year * 10 + smm00.mm_qtr)   AND smm00.mm_proc_ind = 2 --WHERE c.cohort_yrqtr IN(@cohort) --add this line back in if you want to restrict what cohorts you want to look at )  --CTE 3 \,Last_CUSP_yrqtr(syskey\, Last_CUSP_yrqtr) AS ( SELECT   smm1.mm_system_key \,MAX(smm1.mm_year * 10 + smm1.mm_qtr)  FROM UWSDBDataStore.sec.sr_mini_master smm1 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp1  ON smm1.mm_year = smmdp1.mm_year  AND smm1.mm_qtr = smmdp1.mm_qtr  AND smm1.mm_proc_ind = smmdp1.mm_proc_ind  AND smm1.mm_student_no = smmdp1.mm_student_no  AND smmdp1.index1 =1  AND smmdp1.mm_branch =1 WHERE smmdp1.mm_major_abbr = ''B PRE''   AND smm1.mm_proc_ind = 2   AND ((smm1.mm_year <1998 AND smm1.mm_curr_credits >0) OR (smm1.mm_sea_st_funded+smm1.mm_sea_self_sus+smm1.mm_bot_st_funded+smm1.mm_bot_self_sus+smm1.mm_tac_st_funded+smm1.mm_tac_self_sus >0)) GROUP BY smm1.mm_system_key ) --CTE 4 \,First_major_yrqtr(syskey\, First_major_yrqtr --\,Program\,Major ) AS ( SELECT  smm2.mm_system_key \,MIN(smm2.mm_year * 10 + smm2.mm_qtr) AS First_major_yrqtr --\,dc2.dept_abbr --\,smmdp2.mm_major_abbr FROM UWSDBDataStore.sec.sr_mini_master smm2 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp2  ON smm2.mm_year = smmdp2.mm_year  AND smm2.mm_qtr = smmdp2.mm_qtr  AND smm2.mm_proc_ind = smmdp2.mm_proc_ind  AND smm2.mm_student_no = smmdp2.mm_student_no  AND smmdp2.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc2  ON smmdp2.mm_major_abbr = mc2.major_abbr  AND smmdp2.mm_pathway = mc2.major_pathway  AND mc2.major_last_yr IN(SELECT MAX(mc2a.major_last_yr)         FROM UWSDBDataStore.sec.Sr_major_code mc2a         WHERE smmdp2.mm_major_abbr = mc2a.major_abbr AND smmdp2.mm_pathway = mc2a.major_pathway) INNER JOIN UWSDBDataStore.sec.Sr_dept_code dc2  ON mc2.major_dept = dc2.dept_code  AND mc2.major_branch = dc2.dept_branch WHERE smm2.mm_proc_ind = 2   AND smmdp2.mm_deg_level <2   AND ((smm2.mm_year <1998 AND smm2.mm_curr_credits >0) OR (smm2.mm_sea_st_funded+smm2.mm_sea_self_sus+smm2.mm_bot_st_funded+smm2.mm_bot_self_sus+smm2.mm_tac_st_funded+smm2.mm_tac_self_sus >0))   AND mc2.major_dept NOT IN(864\,866\,883\,1032) GROUP BY  smm2.mm_system_key )   ------------------------------------ SELECT DISTINCT  cusp.syskey \,cohort.Cohort_Type \,cohort = cohort.CUSP_cohort_yrqtr \,cohort_acadyr = CASE WHEN RIGHT(cohort.CUSP_cohort_yrqtr\,1) IN (3\,4) THEN CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)) + ''-'' + CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)+1) WHEN RIGHT(cohort.CUSP_cohort_yrqtr\,1) IN (1\,2) THEN CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)-1) + ''-'' + CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)) ELSE ''Error'' END \,qtr =    CASE   WHEN smm.mm_qtr = 1 THEN ''Winter ''    WHEN smm.mm_qtr = 2 THEN ''Spring ''    WHEN smm.mm_qtr = 3 THEN ''Summer ''   WHEN smm.mm_qtr = 4 THEN ''Autumn ''   ELSE ''ERROR''  END + CONVERT(char(4)\, smm.mm_year) \,cusp.Last_CUSP_yrqtr \,major.First_major_yrqtr \,Program = dc.dept_full_nm \,dc.dept_abbr \,Major = major_full_nm \,mc.major_abbr \,mc.major_pathway  FROM First_CUSP_yrqtr cohort INNER JOIN Last_CUSP_yrqtr cusp  ON cohort.syskey = cusp.syskey INNER JOIN First_major_yrqtr major  ON cusp.syskey = major.syskey  AND cusp.Last_CUSP_yrqtr < major.First_major_yrqtr INNER JOIN UWSDBDataStore.sec.sr_mini_master smm  ON major.syskey = smm.mm_system_key  AND major.First_major_yrqtr = smm.mm_year * 10 + smm.mm_qtr INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp  ON smm.mm_year = smmdp.mm_year  AND smm.mm_qtr = smmdp.mm_qtr  AND smm.mm_proc_ind = smmdp.mm_proc_ind  AND smm.mm_student_no = smmdp.mm_student_no  AND smmdp.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc  ON smmdp.mm_major_abbr = mc.major_abbr  AND smmdp.mm_pathway = mc.major_pathway  AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr)         FROM UWSDBDataStore.sec.Sr_major_code mc1        WHERE smmdp.mm_major_abbr = mc1.major_abbr AND smmdp.mm_pathway ','EDWAdminMart'),
('Report','Student Class List','2009-06-01','2009-07-21','University Registrar and Chief Officer of Enrollment Information Services','Randy Byers\, Ann Wunderlin','For the selected year/quarter\, this list displays students who are either registered for or have withdrawn from the course/section. Information on this list is sortable by clicking on the column headi','Financial Resources','SELECT   ts.ts_year \,ts.ts_quarter \,d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name  FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d  ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE ts.ts_year=@year   AND ts.ts_quarter=@Quarter   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   ORDER BY   d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','Undergraduate Degree Applicants','2009-07-17','2009-09-05','University Registrar and Chief Officer of Enrollment Information Services','Andrew Hummel-Schluger\, Ann Wunderlin','Creates a roster of undergraduate students within a selected department who have filed a graduation application for an upcoming quarter. Useful for monitoring graduation applications and for creating ','Financial Resources','SELECT   ts.ts_year \,ts.ts_quarter \,d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name  FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d  ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE ts.ts_year=@year   AND ts.ts_quarter=@Quarter   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   ORDER BY   d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','Student Transcript Detail','2009-07-22','2009-09-10','University Registrar and Chief Officer of Enrollment Information Services','Andrew Hummel-Schluger\, Ann Wunderlin','UW transcript information for an individual student. Lists all transcript information for a student. Useful for reviewing student academic progress\, displays snapshot of complete student record. Exclu','Financial Resources','SELECT   ts.ts_year \,ts.ts_quarter \,d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name  FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d  ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE ts.ts_year=@year   AND ts.ts_quarter=@Quarter   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   ORDER BY   d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','Affixed Payment Detail','2009-09-22','2009-11-11','Todd Mildon','Jeff Petersen & Colin Sachs','Displays detailed charge information (i.e.\, amount charged\, affixed\, exempted and unpaid)  by student for any entered charge code or charge code range within a date range.  It is most useful for revie','Financial Resources','SELECT DISTINCT  v.student_name\,  v.student_no\,                 a.appl_yr\,                 Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,  ar.req_major_abbr\,  mc.major_full_nm\,                 v.num_holds\,                 a.trans_gpa\,  v.tot_2yr_transfer\,  v.tot_4yr_transfer\,  v.tot_lowd_transfer\,  v.tot_upd_transfer\,  v.class\,  class_desc =   CASE    WHEN v.class = 1 THEN ''Freshman''    WHEN v.class = 2 THEN ''Sophomore''    WHEN v.class = 3 THEN ''Junior''    WHEN v.class = 4 THEN ''Senior''    WHEN v.class = 5 THEN ''Fifth Year''    WHEN v.class = 6 THEN ''Non-Matric''    WHEN v.class = 8 THEN ''Graduate''    WHEN v.class in (11\,12\,13\,14) THEN ''Professional''    ELSE convert(char(1)\,v.class)   END \,Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\, Paid_Date = (  Select max(ab.trans_dt)   from sec.sr_adm_stat_chg ab   where appl_status_new in (15\, 16)   and ab.system_key = a.system_key   and ab.appl_no = a.appl_no   and ab.appl_yr = a.appl_yr   and ab.appl_qtr = a.appl_qtr )\, MailCode = CASE WHEN mlc.mail_code IN (''UW''\, ''PB''\, ''BOR'') THEN mlc.mail_code ELSE ''None'' END    FROM sec.student_1 v  inner join sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON  a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr  and a.system_key = ar.system_key  and a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key  WHERE   a.appl_yr = @year  and a.appl_qtr = @Quarter   and a.appl_branch = 1  and convert(char(1)\,a.appl_type) in (''2''\,''4''\,''5''\,''R'')  --and (a.trans_gpa is null or a.trans_gpa = 0)  and a.appl_status in (12\,15\,16)                and v.class <> 6  and mc.major_pathway = 0','EDWAdminMart'),
('Report','How Many Degrees Have I Granted','2009-10-02','2009-11-21','University Registrar and Chief Officer of Enrollment Information Services','Andrew Hummel-Schluger','Displays a graph of the count of degrees granted within a College or School for the past ten years.. Useful for trend analysis in graduation rates. Required parameter is College.','Financial Resources','SELECT rau.FACILITY_CODE FacilityCode\,        rau.ROOM_NUMBER RoomNumber\,        rau.ORGANIZATION assignee_organization\,        rau.EMPLOYEE_ID assignee_eid\,        rau.functional_use_code\,        fuc.DESCRIPTION Functional_Use\,        rau.functional_use_percent         FROM dbo.room_assignment_use rau LEFT JOIN dbo.functional_use_code fuc      ON rau.functional_use_code = fuc.functional_use_code    WHERE rau.FACILITY_CODE = @facilitycode AND       rau.ROOM_NUMBER = @roomno AND       rau.ORGANIZATION = @assignorg AND       rau.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Contact Information - Unmet Requests','2009-10-30','2009-12-19','University Registrar and Chief Officer of Enrollment Information Services','Andrew Hummel-Schluger','This report provides contact information for all students who have attempted to register for a specified course and been denied for lack of space. Useful for contacting students when new sections are ','Financial Resources','SELECT       BienniumYear\,   SUM(OpenBalAmt) AS BeginningBalance\,   SUM(DebitSumAmt) AS DebitAmount\,   SUM(CreditSumAmt) AS CreditAmount FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') GROUP BY   BienniumYear ORDER BY                 BienniumYear','EDWAdminMart'),
('Report','Aid Authorization and Disbursement by Year','2009-11-24','2010-01-13','Director\, Student Financial Aid','Colin Sachs','Displays the dollar amount of aid authorized and disbursed by student number and name for a specified award fund/budget  within each quarter over a given aid year.   Report is useful for determining i','Financial Resources','SELECT DISTINCT v.student_name  \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END  \,v.system_key \,class =   CASE   WHEN v.class = 1 THEN ''Freshman''   WHEN v.class = 2 THEN ''Sophomore''   WHEN v.class = 3 THEN ''Junior''   WHEN v.class = 4 THEN ''Senior''   WHEN v.class = 5 THEN ''Fifth Year''   WHEN v.class = 6 THEN ''Non-Matric''   WHEN v.class = 8 THEN ''Graduate''   WHEN v.class = 11 THEN ''1st Year Professional''   WHEN v.class = 12 THEN ''2nd Year Professional''   WHEN v.class = 13 THEN ''3rd Year Professional''   WHEN v.class = 14 THEN ''4th Year Professional''   ELSE ''Unknown Class Status''  END \,v.admitted_for_yr \,admitted_for_qtr =   CASE   WHEN v.admitted_for_qtr = 1 THEN ''Winter''   WHEN v.admitted_for_qtr = 2 THEN ''Spring''   WHEN v.admitted_for_qtr = 3 THEN ''Summer''   WHEN v.admitted_for_qtr = 4 THEN ''Autumn''   ELSE ''Unknown Quarter''  END  \,v.tot_graded_attmp  \,uwb = (SELECT SUM(tc.course_credits)     FROM sec.transcript_courses_taken tc     WHERE tc.system_key = v.system_key AND tc.course_branch = 1     AND course_number <500 AND grade_system = 0) \,uwb_gpa = ( SELECT (SUM((CONVERT(DEC(2)\,grade)/10)*course_credits))/SUM(course_credits) FROM sec.transcript_courses_taken tc     WHERE tc.system_key = v.system_key AND tc.course_branch = 1    AND course_number <500 AND grade_system = 0 AND grade NOT IN (''I''\, ''W''\,''HW''\,''W3''\,''W4''\,''W5''\,''W6''\,''W7''\,'''')) \,v.tot_nongrd_earn \,gpa =   CASE   WHEN v.tot_graded_attmp > 0 THEN (v.tot_grade_points/v.tot_graded_attmp)   ELSE 0  END \,current_credits = (SELECT current_credits from sec.registration where  system_key = v.system_key AND regis_yr = @Year and regis_qtr = 4) \,mc.major_name \,addr.e_mail_ucs \,addr.local_line_1 \,addr.local_line_2 \,addr.local_city \,addr.local_state \,addr.local_zip_5  FROM sec.student_1 v  INNER JOIN sec.student_1_college_major cm  ON v.system_key = cm.system_key  INNER JOIN sec.sr_major_code mc  ON cm.major_abbr = mc.major_abbr  AND cm.pathway = mc.major_pathway INNER JOIN sec.registration r ON v.system_key = r.system_key  LEFT JOIN sec.transcript t  ON v.system_key = t.system_key LEFT JOIN sec.addresses addr  ON v.system_key = addr.system_key  WHERE r.regis_yr = @Year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 AND cm.major_abbr = ''B BUS'' AND (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) >= 30 order by gpa desc','EDWAdminMart'),
('Report','Degree Codes','2011-04-13','2011-06-02','University Registrar and Chief Officer of Enrollment Information Services','Randy Byers','Displays information about degree codes for selected departments. Useful for finding a code when filling out a change of major form or filing a graduation application\, or for looking up a degree''s tui','Financial Resources','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int    \, @budgetperiod  char(1) SET @orglevel10 = ''2540578000'' SET @budgetgroup = ''5GC'' SET @calmonth = ''6'' SET @calyear = 2010 SET @budgetperiod = ''f''*/  DECLARE @fiscalyear char(4) SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12       THEN @calyear + 1 ELSE @calyear END   DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND                        @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 1 AND                        5 THEN @calmonth + 18 WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 7 AND                        12 THEN @calmonth - 6 ELSE @calmonth + 21 END  DECLARE @bienniumyear char(4) SET              @bienniumyear = (@fiscalyear - (@fiscalyear % 2) - 1)   DECLARE @fiscalYearToUse char(4) SELECT @fiscalYearToUse = CONVERT(char(4)\, (CASE WHEN (CONVERT(int\,@fiscalyear)%2)=0   AND CONVERT(int\,@fiscalyear) <   (SELECT max(CONVERT(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN CONVERT(varchar(4)\,CONVERT(int\,@fiscalyear)+1)            ELSE @fiscalyear end))   DECLARE @evenoddfy int SET @evenoddfy = convert(int\,@fiscalyear)%2   IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups  CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\,  BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\, Budgetname varchar(50)\, BudgetStatusCode char(1)\, RevenueSource char(2)\, RevenueSourceDesc varchar(30)\,  RevenueClass char(4)\, RevenueClassDesc varchar(30)\,  PrincipalInvestigatorID char(9)\, PrincipalInvestigator varchar(50)\, ParentSubFlag char(1)\, BudgetGroup varchar(50)\,  BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN   INSERT INTO   #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptname\, BudgetSuperClassCode\, BudgetTypeCode\,  BudgetClassCode\, Budgetnbr\,  Budgetname\, BudgetStatusCode\, RevenueSource\, RevenueSourceDesc\, RevenueClass\, RevenueClassDesc\, PrincipalInvestigatorID\, PrincipalInvestigator\, ParentSubFlag\, BudgetGroup\, BudgetGroupCode)  (SELECT   DISTINCT BI.FiscalYear\, BI.OrgCode \, Left(BI.OrgCode\,7) ''OrgDeptCode'' \, OD.OrgDeptName\, BTC.budgetsuperclasscode\, BTC.budgettypecode\, BTC.budgetclasscode\, BI.budgetnbr\, BI.budgetname\,    BI.BudgetStatusCode\, BI1.RevenueSource\, BI1.RevenueSourceDesc\,BI1.RevenueClass\, BI1.RevenueClassDesc\,    BI1.PrincipalInvestigatorID\, BI1.PrincipalInvestigator\,     CASE WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\,     BI1.ParentCapitalProject)) = BI.Budgetnbr THEN ''P''     WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\, BI1.ParentCapitalProject)) != BI.Budgetnbr     AND rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\, BI1.ParentCapitalProject)) != '''' THEN ''S'' ELSE '''' END AS ''ParentSubFlag''\,    ''Grants and Contracts'' AS ''BudgetGroup''\,     ''5GC'' AS ''BudgetGroupCode'' FROM sec.dimBudgetTypeClassFY BTC  INNER JOIN sec.dimBudgetIndexFY BI  ON BI.budgettypecode = BTC.budgettypecode   AND BI.budgetclasscode = BTC.budgetclasscode   AND BI.fiscalyear = BTC.fiscalyear   AND BI.fiscalyear = @fiscalYearToUse  LEFT JOIN (SELECT     BudgetNbr FROM ODS.sec.BudgetIndexBudgetOfficeFlag            WHERE BienniumYear = @bienniumyear AND index1 = ''2'' AND BudgetOfficeFlag IN (''2''\, ''3''\, ''4''\, ''5''\, ''6'')) BOF  ON BI.Budgetnbr = BOF.Budgetnbr LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY     WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4)  GROUP BY OrgName\,  left(OrgCode\,7)) OD  ON LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel INNER JOIN ODS.sec.BudgetIndex BI1    ON BI1.BudgetNbr = BI.BudgetNbr     AND BI1.BienniumYear = @bienniumyear  WHERE (BI.budgetTypecode + BI.budgetClassCode != ''0552'')  AND BI.RFAcctngCode = ''R''     AND BTC.BudgetSuperClassCode = ''ROF31''     AND BI.OrgCode IN (@orglevel10))  SELECT     BTC.OrgCode\, BTC.OrgDeptCode\, BTC.OrgDeptName\, BTC.BudgetGroup\, BTC.BudgetGroupCode\, BTC.BudgetNbr\, BTC.BudgetName\,    (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) AS ''TYPE_CLASS''\, BTC.BudgetStatusCode\, BTC.ParentSubFlag\,    BTC.RevenueSource\, BTC.RevenueSourceDesc\,BTC.RevenueClass\, BTC.RevenueClassDesc\,    BTC.PrincipalInvestigator\, BTC.PrincipalInvestigatorID\,   /*Beginning Balance */   SUM(CASE WHEN FS.TranCode IN (''24'') AND fs.BudgetPermTempCryFwdCode != ''C'' AND cast(FS.Acctngmonth as int) < 3    THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''BegBalance''\,                                                     /*New Awards and Adjustments*/   SUM(CASE WHEN FS.TranCode IN (''25'') AND fs.BudgetPermTempCryFwdCode != ''C'' AND CONVERT(INT\, fs.fiscalyear) <=  CONVERT(INT\, @fiscalyear)    THEN (FS.SummaryAmt * -','EDWAdminMart'),
('Report','Miscellaneous Student Accounts - Non-Tuition Charge Summary','2009-12-20','2010-02-08','Director\, Student Fiscal Services','Colin Sachs','This report displays non-tuition based charge code details for charge codes active on SDB for a given year and quarter.  It is useful for reviewing the charge amount associated with a charge code for ','Financial Resources','SELECT    AcctngMonth\,  SUM(DebitSumAmt) AS DebitAmount\,   SUM(CreditSumAmt) AS CreditAmount FROM           GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'' and BienniumYear IN (@bienYear) )  GROUP BY   AcctngMonth ORDER BY                  AcctngMonth','EDWAdminMart'),
('Report','Current Student Information By Major','2009-12-22','2010-02-10','University Registrar and Chief Officer of Enrollment Information Services','Ann Wunderlin','Creates a roster with information about currently registered students in a specified major. Displays student demographic information\, contact information\, majors\, and GPAs for students registered in t','Financial Resources','SELECT    s2di.deg_branch\,s2di.deg_earned_yr \,s2di.deg_earned_qtr \,s2di.deg_status \,s2di.deg_title \,v.student_name_lowc \,s1cm.major_abbr \,addr.e_mail_ucs \,v.s1_ins_sevis_id \,v.s1_visa_type \,v.student_no \,v.system_key \,DegQuarter = CASE   WHEN s2di.deg_earned_qtr =1 THEN ''Winter''  WHEN s2di.deg_earned_qtr =2 THEN ''Spring''  WHEN s2di.deg_earned_qtr =3 THEN ''Summer''  WHEN s2di.deg_earned_qtr =4 THEN ''Fall''  ELSE ''--''   END \,DegApplication_Status = CASE   WHEN s2di.deg_status =3 THEN ''Applied''  WHEN s2di.deg_status =4 THEN ''Applied''  WHEN s2di.deg_status =5 THEN ''Applied''  WHEN s2di.deg_status =9 THEN ''Granted''  ELSE ''--''   END FROM         sec.student_1 v INNER JOIN                       sec.student_1_college_major s1cm         ON v.system_key = s1cm.system_key INNER JOIN                       sec.student_2_uw_degree_info s2di          ON v.system_key = s2di.system_key INNER JOIN                       sec.addresses  addr         ON v.system_key = addr.system_key  WHERE      (s2di.deg_branch = 1)  AND (s2di.deg_status IN(3\,4\,5\,9))  AND (s2di.deg_earned_yr = @year)  AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> ''''  ORDER BY v.student_name_lowc','EDWAdminMart'),
('Report','Current Student Transcript Courses','2009-12-24','2010-02-12','University Registrar and Chief Officer of Enrollment Information Services','Laurel Cheap','This report displays transcript information for all students who are in a selected major for the current quarter. This report can be used to identify satisfactory progress and for tracking student pro','Financial Resources','SELECT    s2di.deg_branch\,s2di.deg_earned_yr \,s2di.deg_earned_qtr \,s2di.deg_status \,s2di.deg_title \,v.student_name_lowc \,s1cm.major_abbr \,addr.e_mail_ucs \,v.s1_ins_sevis_id \,v.s1_visa_type \,v.student_no \,v.system_key \,DegQuarter = CASE   WHEN s2di.deg_earned_qtr =1 THEN ''Winter''  WHEN s2di.deg_earned_qtr =2 THEN ''Spring''  WHEN s2di.deg_earned_qtr =3 THEN ''Summer''  WHEN s2di.deg_earned_qtr =4 THEN ''Fall''  ELSE ''--''   END \,DegApplication_Status = CASE   WHEN s2di.deg_status =3 THEN ''Applied''  WHEN s2di.deg_status =4 THEN ''Applied''  WHEN s2di.deg_status =5 THEN ''Applied''  WHEN s2di.deg_status =9 THEN ''Granted''  ELSE ''--''   END FROM         sec.student_1 v INNER JOIN                       sec.student_1_college_major s1cm         ON v.system_key = s1cm.system_key INNER JOIN                       sec.student_2_uw_degree_info s2di          ON v.system_key = s2di.system_key INNER JOIN                       sec.addresses  addr         ON v.system_key = addr.system_key  WHERE      (s2di.deg_branch = 1)  AND (s2di.deg_status IN(3\,4\,5\,9))  AND (s2di.deg_earned_yr = @year)  AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> ''''  ORDER BY v.student_name_lowc','EDWAdminMart'),
('Report','Student Degree Information','2010-01-15','2010-03-06','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','Creates a roster of students who have applied for and/or been granted a degree for one or more years or quarters. Displays contact information\, demographics\, and academic performance indicators. Requi','Financial Resources','SELECT    r.ReportKey\, r.ReportHidden\,    r.ReportFolder\, r.ReportName\, --r.ReportTypeCd\,     lr.ReportFolder AS LinkedReportFolder\,     lr.ReportName AS LinkedReportName\,      Max(el.TimeStart) AS LastRunDate\,     Count(el.ExecutionLogKey) AS Executions\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN 1 ELSE 0 END) AS Succeeded\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' OR sc.StatusDesc Is Null THEN 0 ELSE 1 END) AS Failed\,      Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN DateDiff(ms\,el.TimeStart\,el.TimeEnd)        ELSE 0 END) AS TotalRunMSs\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN el.ByteCount ELSE 0 END) AS TotalBytes\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN el.[RowCount] ELSE 0 END) AS TotalRows  FROM sec.RSReport AS r  LEFT JOIN sec.RSReport AS lr ON r.LinkedReportUID = lr.ReportUID  LEFT JOIN sec.RSExecutionLog AS el ON r.ReportKey = el.ReportKey     AND DATEDIFF(day\, el.TimeStart\, GetDate()) <= @days LEFT JOIN sec.RSExecStatus AS sc ON el.StatusKey = sc.StatusKey  WHERE r.ReportKey > 0 --AND r.ReportDeleted = 0 AND r.ReportName Not Like ''%_sub''  GROUP BY r.ReportKey\, r.ReportHidden\, r.ReportFolder\, r.ReportName\, lr.ReportFolder\, lr.ReportName ORDER BY r.ReportFolder\, r.ReportHidden\, r.ReportName','EDWAdminMart'),
('Report','Current Student Information By Minor','2010-01-22','2010-03-13','University Registrar and Chief Officer of Enrollment Information Services','Ann Wunderlin','Creates a roster with contact information for currently registered students in a specified minor. Displays student demographic information\, majors\, and academic information.  Required parameters are c','Financial Resources','SELECT DISTINCT s1.system_key\, s1.student_no\, s1.student_name\, a.appl_status\, aps.appl_stat_descrip\, Appl_Qtr =  CASE   WHEN a.appl_qtr = 1 THEN ''Winter''   WHEN a.appl_qtr = 2 THEN ''Spring''   WHEN a.appl_qtr = 3 THEN ''Summer''   WHEN a.appl_qtr = 4 THEN ''Autumn''  END\, a.appl_yr\, a.appl_type\, Appl_level =    CASE       when a.appl_type = ''1'' then ''FR''       when a.appl_type = ''2'' then ''UG 2yr''       when a.appl_type = ''4'' then ''UG 4yr''       when a.appl_type = ''6'' OR a.appl_type = ''R'' then ''UG (Returning)''       when a.appl_type = ''5'' then ''5YR''       when a.appl_type = ''N''OR a.appl_type = ''P'' then ''NM''       when a.appl_type = ''7'' then ''GR (Returning)''       when a.appl_type = ''G'' then ''GR (Gradute)''       when a.appl_type = ''E'' then ''GNM''       when a.appl_type = ''P'' then ''PRO''       ELSE ''No Appl Type''    END\, a.appl_rcvd_dt\, ar.req_major_abbr\, cm.major_abbr\, r.advising_date\, r.advising_type\, AdviseType = CASE WHEN r.advising_type= ''O'' THEN ''Orientation'' Else ''Other'' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a  on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr  and a.appl_qtr = ar.appl_qtr  and a.appl_no = ar.appl_no  and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps  on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm  on a.system_key = cm.system_key  and a.appl_no = cm.appl_no  and a.appl_qtr = cm.appl_qtr  and a.appl_yr = cm.appl_yr  and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r  ON a.system_key = r.system_key  AND a.appl_yr = r.regis_yr  AND a.appl_qtr = r.regis_qtr  AND r.enroll_status = 12  WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN (''2''\,''4''\,''5''\,''6''\,''N''\,''R'') AND a.appl_status IN (15\,16) and (ar.req_major_abbr = ''B PRE'' or cm.major_abbr = ''B PRE'')','EDWAdminMart'),
('Report','Current Student Registration Courses','2010-01-25','2010-03-16','University Registrar and Chief Officer of Enrollment Information Services','Laurel Cheap','Displays current registration information for all students in a selected major. Useful for tracking majors and satisfactory progress . Required parameters are quarter\, college\, and department.','Financial Resources','SELECT DISTINCT s1.system_key\, s1.student_no\, s1.student_name\, a.appl_status\, aps.appl_stat_descrip\, Appl_Qtr =  CASE   WHEN a.appl_qtr = 1 THEN ''Winter''   WHEN a.appl_qtr = 2 THEN ''Spring''   WHEN a.appl_qtr = 3 THEN ''Summer''   WHEN a.appl_qtr = 4 THEN ''Autumn''  END\, a.appl_yr\, a.appl_type\, Appl_level =    CASE       when a.appl_type = ''1'' then ''FR''       when a.appl_type = ''2'' then ''UG 2yr''       when a.appl_type = ''4'' then ''UG 4yr''       when a.appl_type = ''6'' OR a.appl_type = ''R'' then ''UG (Returning)''       when a.appl_type = ''5'' then ''5YR''       when a.appl_type = ''N''OR a.appl_type = ''P'' then ''NM''       when a.appl_type = ''7'' then ''GR (Returning)''       when a.appl_type = ''G'' then ''GR (Gradute)''       when a.appl_type = ''E'' then ''GNM''       when a.appl_type = ''P'' then ''PRO''       ELSE ''No Appl Type''    END\, a.appl_rcvd_dt\, ar.req_major_abbr\, cm.major_abbr\, r.advising_date\, r.advising_type\, AdviseType = CASE WHEN r.advising_type= ''O'' THEN ''Orientation'' Else ''Other'' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a  on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr  and a.appl_qtr = ar.appl_qtr  and a.appl_no = ar.appl_no  and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps  on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm  on a.system_key = cm.system_key  and a.appl_no = cm.appl_no  and a.appl_qtr = cm.appl_qtr  and a.appl_yr = cm.appl_yr  and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r  ON a.system_key = r.system_key  AND a.appl_yr = r.regis_yr  AND a.appl_qtr = r.regis_qtr  AND r.enroll_status = 12  WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN (''2''\,''4''\,''5''\,''6''\,''N''\,''R'') AND a.appl_status IN (15\,16) and (ar.req_major_abbr = ''B PRE'' or cm.major_abbr = ''B PRE'')','EDWAdminMart'),
('Report','Current Student Transcript Quarterly Summary','2010-03-22','2010-05-11','University Registrar and Chief Officer of Enrollment Information Services','Laurel Cheap','Displays quarterly transcript summary information for students in a selected major for a selected quarter. Useful for tracking quarterly progress\, and you can click through to full transcript informat','Financial Resources','SELECT DISTINCT                        Person.PersonKey\, Person.Name\, Person.PreferredName\, Person.FirstMiddleLastName\, Person.UWNetId\, Contact.PrimaryTitle\,                        Contact.PrimaryDeptName\, Contact.PrimaryWorkPhone\, Contact.PrimaryWorkPhoneExt\, Contact.HomeDeptCampusMailbox\, Contact.HomeDeptName\,                        Contact.HomeDeptOrgCode\, Contact.CollegeOrgCode\, Contact.CollegeOrgName\, Contact.AltTitle\, Contact.AltDeptName\,                        Contact.PersonalCampusMailbox\, Contact.HomePhone\, Contact.PrimaryUWEmailAddr\, Contact.AltUWEmailAddr\, Contact.OnOffCampusCode\,                        Contact.OnOffCampusDesc\, Person.IdNbr\, Contact.DirectoryInfoReleaseCode\, Contact.DirectoryInfoReleaseDesc\, ODS_HEPPS.sec.Appointment .EndDate\,                        ODS_HEPPS.sec.Appointment .DeptOrgCode\, ODS_HEPPS.sec.Appointment .DeptOrgName\, ODS_HEPPS.sec.Appointment .JobClassCode\, ODS_HEPPS.sec.Appointment .JobClass\, ODS_HEPPS.sec.Appointment .Status\,                        ODS_HEPPS.sec.Appointment .StatusCode\, ODS_HEPPS.sec.Appointment .ApptTerm\, ODS_HEPPS.sec.Appointment .PercentOfFulltime\, ODS_HEPPS.sec.Appointment .PayCycleSchedule\,                        ODS_HEPPS.sec.Appointment .FTE\, Contact.AcademicHomeDeptOrgCode\, Contact.AcadmicHomeDeptName\, ODS_HEPPS.sec.Appointment .PaidApptCode\,                        ODS_HEPPS.sec.Appointment .PaidApptCodeDesc\, ODS_HEPPS.sec.JobClassification .PayRateCode\, ODS_HEPPS.sec.JobClassification .PayRateDesc\, ODS_HEPPS.sec.JobClassification .ECSCode\,                        ODS_HEPPS.sec.JobClassification .ECSDesc\, ODS_HEPPS.sec.JobClassification .AcademicGroupCode\, ODS_HEPPS.sec.JobClassification .AcademicGroupDesc FROM         ODS_HEPPS.sec.Person  AS Person INNER JOIN                       ODS_HEPPS.sec.Contact  AS Contact ON Person.PersonKey = Contact.PersonKey INNER JOIN                       ODS_HEPPS.sec.Appointment  ON Person.PersonKey = ODS_HEPPS.sec.Appointment .PersonKey INNER JOIN                       ODS_HEPPS.sec.JobClassification  ON ODS_HEPPS.sec.Appointment .JobClassCode = ODS_HEPPS.sec.JobClassification .JobClassCode WHERE     (ODS_HEPPS.sec.Appointment .StatusCode = ''A'') AND (Contact.PersonalCampusMailbox <> 351272) AND (ODS_HEPPS.sec.Appointment .ECSCode != ''R'') ORDER BY Person.Name','EDWAdminMart'),
('Report','Current Student Transfer Summary','2010-03-24','2010-05-13','University Registrar and Chief Officer of Enrollment Information Services','Laurel Cheap','Creates a roster of currently-registered transfer students within a selected major and provides a summary of information about the students'' prior schools. Useful for a quick overview of prior academi','Financial Resources','SELECT             GLProcessingDate\,          TransBatchNbr AS FASRunNbr\,          TransTypeCode AS TransCode\,          SUM(RecordCount) RecordCount\,         SUM(DebitSumAmt) AS Debit\,          SUM(CreditSumAmt) AS Credit FROM                  GLDataMart.sec.TransGLSummary WHERE             (GLAccountCode = ''1160'') AND (BienniumYear = @bienyr) AND (AcctngMonth =  @acctmonth) GROUP BY         AcctngMonth\,         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode ORDER BY         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode','EDWAdminMart'),
('Report','Time Schedule Information','2010-03-18','2010-05-07','University Registrar and Chief Officer of Enrollment Information Services','Ann Wunderlin','Displays time schedule\, meeting and instructor data for selected quarters\, curricula\, instructors\, courses and sections.  Useful for planning next year''s courses. Required parameters are Quarter\, Coll','Financial Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\, AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, BienniumYear\, FasRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD  WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''30''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1'' ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS   ''Req_FND''\, AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Ser','EDWAdminMart'),
('Report','Class List By Curriculum Course Section','2010-02-01','2010-03-23','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','Current roster of registered or no longer registered students for each course by curriculum\, course and section. Useful for reviewing satisfactory progress\, managing curriculum\, determining course ove','Financial Resources','SELECT ''UW'' as UW\,    mm.mm_year as AcadYr\,     CASE        WHEN mm.mm_class=''06'' THEN 4       WHEN mm.mm_class<''06'' THEN 1       WHEN mm.mm_class=''08'' THEN 2       ELSE 3                 END as ClassSort\,     CASE        WHEN mm.mm_class=6 THEN ''Non-matric''       WHEN mm.mm_class<6 THEN ''Undergraduate''       WHEN mm.mm_class=''08'' THEN ''Graduate''       ELSE ''Professional''    END as ClassGrouping\,    COUNT(mm.mm_system_key) as HeadCount  FROM sec.sr_mini_master mm Where mm.mm_year > Year(getdate())-10    and mm.mm_qtr = @Quarter    and mm.mm_proc_ind = 2    and (mm.mm_sea_st_funded + mm.mm_sea_self_sus +    mm.mm_bot_st_funded + mm.mm_bot_self_sus +    mm.mm_tac_st_funded + mm.mm_tac_self_sus) > 0 GROUP BY mm.mm_year \, mm.mm_qtr \,  CASE        WHEN mm.mm_class=''06'' THEN 4       WHEN mm.mm_class<''06'' THEN 1       WHEN mm.mm_class=''08'' THEN 2       ELSE 3                 END \, CASE        WHEN mm.mm_class=6 THEN ''Non-matric''       WHEN mm.mm_class<6 THEN ''Undergraduate''       WHEN mm.mm_class=''08'' THEN ''Graduate''       ELSE ''Professional''    END ORDER BY AcadYr\, ClassSort','EDWAdminMart'),
('Report','Daily Faculty Reappointment Download','2009-07-23','2009-09-11','Assistant Vice Provost\, Office of Academic Personnel','Ann Wunderlin\, Alexis Chin','To be completed by data custodians.','Financial Resources','SELECT  * FROM    Report WHERE ReportCodeNbr = @rptcd','EDWAdminMart'),
('Report','Faculty Distributions Other than 100%','2009-08-20','2009-10-09','Assistant Vice Provost\, Office of Academic Personnel','Ann Wunderlin and Brandon Whitehead','The purpose of this report is to identify those faculty to whom funds have been distributed either above or below the prescribed 100% level.  Users select the desired layout (greater than or less than','Financial Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status \, s.appl_stat_descrip   \,addr.local_line_1  \, addr.local_line_2  \, addr.local_city  \, addr.local_state  \, addr.local_zip_5  \, addr.local_phone_num   \, addr.perm_line_1 \, addr.perm_line_2 \, addr.perm_city \, addr.perm_state \, addr.perm_zip_5 \, addr.perm_phone_num  \,st30hs.high_school_name  \,Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end  FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key  WHERE appl_yr IN(@Year)    AND appl_qtr IN (@Quarter)        AND appl_branch = @branch   AND addr.perm_state IN (@State)','EDWAdminMart'),
('Report','Legacy Faculty On Leave','2009-08-24','2009-10-13','Assistant Vice Provost\, Office of Academic Personnel','Ann Wunderlin and Brandon Whitehead','Produces as list of faculty appointments and distributions that are active on the specified that and that have a “leave” earn type.  Records are as they currently exist in HEPPS/OPUS.  Results may be ','Financial Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status \, s.appl_stat_descrip   \,addr.local_line_1  \, addr.local_line_2  \, addr.local_city  \, addr.local_state  \, addr.local_zip_5  \, addr.local_phone_num   \, addr.perm_line_1 \, addr.perm_line_2 \, addr.perm_city \, addr.perm_state \, addr.perm_zip_5 \, addr.perm_phone_num  \,st30hs.high_school_name  \,Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end  FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key  WHERE appl_yr IN(@Year)    AND appl_qtr IN (@Quarter)        AND appl_branch = @branch   AND addr.perm_state IN (@State)','EDWAdminMart'),
('Report','Organization Names and Codes','2009-07-20','2009-09-08','Assistant Vice Provost\, Office of Academic Personnel','Alexis Chin','List of organization codes and names.','Financial Resources','SELECT        YEAR(P.PaycycleEndDate) AS PayYear\,         MONTH(P.PaycycleEndDate) AS PayMonth\,         P.PaycycleEndDate\,         SUM(P.NetPayAmt) AS HeppsPayrollSum\,         CASE WHEN S.StateFiscalMonth < 10 THEN ''0'' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth\,             -- used in subreport param        SUBSTRING(S.StateFiscalBiennium\, 1\, 4) AS FisBien                                                                                                                           -- used in subreport param FROM                ODS.sec.StandardTimeDimension AS S INNER JOIN        ODS_HEPPS.sec.PaymentHistory  AS P ON S.CalendarDate = P.PaycycleEndDate GROUP BY          YEAR(P.PaycycleEndDate)\, MONTH(P.PaycycleEndDate)\, P.PaycycleEndDate\, S.StateFiscalMonth\, SUBSTRING(S.StateFiscalBiennium\, 1\, 4) ORDER BY          P.PaycycleEndDate','EDWAdminMart'),
('Report','Remaining Balance by OrgCode and Category','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report answers the question: How much money do I have to spend?  It displays balances for budget categories  with a drill through to individual budgets balances for each budget category.To view t','Services & Resources','SELECT DISTINCT v.student_name \, v.student_no \, a.appl_yr \, Appl_Qtr = CASE  WHEN a.appl_qtr = 1 THEN ''Winter''  WHEN a.appl_qtr = 2 THEN ''Spring''  WHEN a.appl_qtr = 3 THEN ''Summer''  WHEN a.appl_qtr = 4 THEN ''Autumn''  END \, ar.req_major_abbr \, mc.major_full_nm \, v.num_holds \, a.trans_gpa \, v.tot_2yr_transfer \, v.tot_4yr_transfer \, v.tot_lowd_transfer \, v.tot_upd_transfer \, v.class \, class_desc = CASE  WHEN v.class = 1 THEN ''Freshman''  WHEN v.class = 2 THEN ''Sophomore''  WHEN v.class = 3 THEN ''Junior''  WHEN v.class = 4 THEN ''Senior''  WHEN v.class = 5 THEN ''Fifth Year''  WHEN v.class = 6 THEN ''Non-Matric''  WHEN v.class = 8 THEN ''Graduate''  WHEN v.class in (11\,12\,13\,14) THEN ''Professional''  ELSE CONVERT(char(1)\,v.class)  END \, Appl_level = CASE  WHEN a.appl_type = ''1'' THEN ''FR''  WHEN a.appl_type = ''2'' THEN ''UG 2yr''  WHEN a.appl_type = ''4'' THEN ''UG 4yr''  WHEN a.appl_type = ''6'' OR a.appl_type = ''R'' THEN ''UG (Returning)''  WHEN a.appl_type = ''5'' THEN ''5YR''  WHEN a.appl_type = ''N'' OR a.appl_type = ''P'' THEN ''NM''  WHEN a.appl_type = ''7'' THEN ''GR (Returning)''  WHEN a.appl_type = ''G'' THEN ''GR (Gradute)''  WHEN a.appl_type = ''E'' THEN ''GNM''  WHEN a.appl_type = ''P'' THEN ''PRO''  ELSE ''No Appl Type''  END \, Paid_Date = (  SELECT MAX(ab.trans_dt)   FROM sec.sr_adm_stat_chg ab   WHERE appl_status_new in (15\, 16)   AND ab.system_key = a.system_key   AND ab.appl_no = a.appl_no   AND ab.appl_yr = a.appl_yr   AND ab.appl_qtr = a.appl_qtr  ) \, MailCode = mlc.mail_code    FROM sec.student_1 v  INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr   AND a.appl_qtr = ar.appl_qtr  AND a.system_key = ar.system_key  AND a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key  WHERE a.appl_yr = @year  AND a.appl_qtr = @Quarter  AND a.appl_branch = 1  AND CONVERT(char(1)\,a.appl_type) in (''2''\,''4''\,''5''\,''R'')   --AND (a.trans_gpa is null or a.trans_gpa = 0)   AND a.appl_status in (12\,15\,16)  AND v.class <> 6  AND mc.major_pathway = 0 ','EDWAdminMart'),
('Report','Financial Summary - Remaining Auth to Spend_Bothell','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Walters','Answers the Top 5 Question: How much money do I have to spend?  Balances for Budget categories for the Bothell Campus with drill down to individual budgets balances for each budget category.','Services & Resources','SELECT    AcctngMonth\,  TransBatchNbr\,   TransTypeCode\,  TransDate\,  TransDebitAmt\,   TransCreditAmt\,                  TransRef2Text\,  GLProcessingDate FROM        GLDataMart.sec.TransGLPayrollCash WHERE       ( BienniumYear = @BienYear) AND (TransBatchNbr = @FasNo) ORDER BY                GLProcessingDate','EDWAdminMart'),
('Report','Financial Summary - Remaining Auth to Spend_Tacoma','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Walters','Answers the Top 5 Question: How much money do I have to spend?  Balances for Budget categories for the Tacoma Campus with drill down to individual budgets balances for each budget category.','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Remaining Balance R1','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report provides balances for selected budget categories for a selected month by budget and Org Code.    Expenses and encumbrances are shown as negative amounts\,  budgeted amounts and revenue are ','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Remaining Balance R2','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report provides balances for selected budget categories for a selected month by budget and Org Code.   Expenses and encumbrances are shown as negative amounts\,  budgeted amounts and revenue are s','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Remaining Balance R3','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report provides balances for selected budget categories for a selected month by budget and Org Code.    Expenses and encumbrances are shown as negative amounts\,  budgeted amounts and revenue are ','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END  \, ''SAT'' = CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip  \,addr.perm_line_1  \, addr.perm_line_2  \, addr.perm_city  \, addr.perm_state  \, addr.perm_zip_5  \,st30hs.high_school_name   FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key   WHERE a.appl_yr IN(@Year)    AND a.appl_qtr IN (@Quarter)        AND a.appl_branch = @branch     AND a.appl_type IN (''2''\, ''4'')   AND (a.resident NOT IN (''5''\, ''6'') AND addr.perm_state <> ''WA''  )     AND   a.trans_GPA  >= 3.4','EDWAdminMart'),
('Report','Remaining Balance R4','2008-03-01','2008-04-20',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report provides balances for selected budget categories for a selected month by budget and Org Code.   Expenses and encumbrances are shown as negative amounts\,  budgeted amounts and revenue are s','Services & Resources','SELECT DISTINCT v.system_key \,v.student_name \,student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END \,v.admitted_for_yr \,admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end \,rcm.regis_major_abbr \,current_major = (  SELECT rcm.regis_major_abbr  FROM sec.registration_regis_col_major rcm  WHERE rcm.regis_yr = @Current_Year   AND rcm.regis_qtr = @Current_Qtr   AND rcm.index1=1   AND rcm.system_key = v.system_key  ) \,class =   CASE   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  END \,addr.local_phone_num \,addr.e_mail_ucs \,addr.e_mail_other  FROM sec.student_1 v  INNER JOIN sec.registration r ON v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key   AND r.regis_yr = rcm.regis_yr  AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.registration_courses rc ON r.system_key = rc.system_key  AND r.regis_yr = rc.regis_yr  AND r.regis_qtr = rc.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key  WHERE rcm.regis_major_abbr in (''B PRE''\, ''B XPRE'')   AND r.enroll_status = 12  AND r.regis_yr = @Previous_Year  AND r.regis_qtr = @Previous_Qtr  AND NOT EXISTS (   SELECT r.system_key    from sec.registration_courses rcc   WHERE rcc.regis_yr = @Current_Year    AND rcc.regis_qtr = @Current_Qtr    AND rcc.system_key = v.system_key    AND rcc.request_status in (''A''\,''C''\,''R'')    AND rcc.course_branch IN(@campus)  )   order by v.student_name','EDWAdminMart'),
('Report','Grant and Contract Certification Report','2009-01-14','2009-03-05','Executive Director\, Management Accounting and Analysis','Dinah Mite Millikin\, Eric Rucker\, & Phillip Burger','This report is to certify that the work performed and that the salary distribution detailed herein is a reasonable reflection of effort for the specified reporting period and project(s). Access to the','Services & Resources','WITH CTE_PolicyData (Folder\, PolicyRootFolder\, UserName\, RoleName\, RowNbr\, PolicyRoot) AS (    SELECT CASE WHEN cat.parentid is null THEN '' (Home)'' ELSE cat.path end as Folder\,        CASE WHEN cat.PolicyRoot=1             THEN (CASE WHEN cat.parentid is null THEN '' (Home)'' ELSE cat.path end)            ELSE (CASE WHEN c2.parentid is null THEN '' (Home)'' ELSE c2.path end)            end as PolicyRootFolder\,       wk.UserName\, wk.RoleName\, wk.RowNbr\, cat.PolicyRoot    FROM catalog cat    LEFT JOIN catalog c2 on c2.PolicyId=cat.PolicyId and c2.PolicyRoot=1    LEFT JOIN      (SELECT pur.PolicyId\, u.UserName\, r.RoleName\,          Row_Number() OVER (PARTITION BY pur.PolicyId\, u.UserName                             ORDER BY r.RoleName) as RowNbr       FROM PolicyUserRole pur       INNER JOIN Roles r on r.RoleId = pur.RoleId       INNER JOIN Users u on u.UserId = pur.UserId       WHERE u.UserName not in (''Everyone''\,''NT AUTHORITY\SYSTEM''\,''BUILTIN\Administrators'')) as wk          on wk.PolicyId = cat.PolicyId          and cat.PolicyRoot = 1     WHERE cat.Type = 1 )  SELECT a.PolicyRootFolder\, a.Folder\, a.UserName\,     a.RoleName +       CASE WHEN b.RoleName Is Not Null THEN ''\, ''+ b.RoleName ELSE '''' END +       CASE WHEN c.RoleName Is Not Null THEN ''\, ''+ c.RoleName ELSE '''' END +       CASE WHEN d.RoleName Is Not Null THEN ''\, ''+ d.RoleName ELSE '''' END +       CASE WHEN e.RoleName Is Not Null THEN '' ...'' ELSE '''' END           as Roles FROM CTE_PolicyData a LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=2) b       on a.Folder = b.Folder AND a.UserName = b.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=3) c       on a.Folder = c.Folder AND a.UserName = c.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=4) d       on a.Folder = d.Folder AND a.UserName = d.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr>=5) e       on a.Folder = e.Folder AND a.UserName = e.UserName WHERE a.RowNbr = 1 OR a.RowNbr Is Null ORDER BY a.PolicyRootFolder\, a.PolicyRoot desc\, a.UserName\, a.Folder','EDWAdminMart'),
('Report','Expense and Revenue Transfer Report','2009-02-02','2009-03-24',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays posted Expense and Revenue Journal Entries (Transaction Code 35) and Salary Expense Transfers (Transaction Code 70) for selected Org Codes for a selected date range. It is similar','Services & Resources','SELECT Distinct  a.appl_yr\,  Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,   v.student_name\, fname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, 1\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,mname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc)))+1\,LEN(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,lname = SUBSTRING(v.student_name_lowc\, 1\, CHARINDEX(''\,''\,v.student_name_lowc)-1) \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  addr.perm_line_1\, addr.perm_line_2\, addr.perm_city\, addr.perm_state\, addr.perm_zip_5\,  addr.local_line_1\, addr.local_line_2\, addr.local_city\, addr.local_state\, addr.local_zip_5\,   addr.perm_phone_num\,  addr.local_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where  ab.system_key = a.system_key      and ab.appl_no = a.appl_no      and ab.appl_yr = a.appl_yr      and ab.appl_qtr = a.appl_qtr                                                                                 and ab.appl_status_new in (15\,16) )\, r.advising_date\, r.advising_type\, AdviseType =  CASE   WHEN r.advising_type= ''O'' THEN ''Orientation''  Else ''Other''   END\,  v.running_start\, v.college_in_hs  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   left join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr  and ar.req_pathway = mc.major_pathway   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  LEFT JOIN sec.registration r ON  v.system_key = r.system_key AND  r.regis_yr=@year  AND r.regis_qtr=@Quarter  WHERE a.appl_branch = 1 and a.appl_type = ''1'' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15\,16) order by v.student_name','EDWAdminMart'),
('Report','Transfer Detail Report','2011-02-15','2011-04-06',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays transfer detail for the selected transaction.','Services & Resources','SELECT       AcctngMonth\,   FundCode\,   SUM(DebitSumAmt) AS DebitAmt\,   SUM(CreditSumAmt) AS CreditAmt FROM          GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') AND (AcctngMonth =@Acctmonth) AND (BienniumYear = @BienYear) GROUP BY   AcctngMonth\,   FundCode ORDER BY   AcctngMonth\,   FundCode','EDWAdminMart'),
('Report','Custom Budget Index Report by OrgCode','2009-02-27','2009-04-18',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays customizable Budget Index information for selected Org Codes.','Services & Resources','SELECT Distinct  a.appl_yr\,  Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,   v.student_name\, fname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, 1\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,mname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc)))+1\,LEN(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,lname = SUBSTRING(v.student_name_lowc\, 1\, CHARINDEX(''\,''\,v.student_name_lowc)-1) \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  addr.perm_line_1\, addr.perm_line_2\, addr.perm_city\, addr.perm_state\, addr.perm_zip_5\,  addr.local_line_1\, addr.local_line_2\, addr.local_city\, addr.local_state\, addr.local_zip_5\,   addr.perm_phone_num\,  addr.local_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where  ab.system_key = a.system_key      and ab.appl_no = a.appl_no      and ab.appl_yr = a.appl_yr      and ab.appl_qtr = a.appl_qtr                                                                                 and ab.appl_status_new in (15\,16) )\, r.advising_date\, r.advising_type\, AdviseType =  CASE   WHEN r.advising_type= ''O'' THEN ''Orientation''  Else ''Other''   END\,  v.running_start\, v.college_in_hs  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   left join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr  and ar.req_pathway = mc.major_pathway   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  LEFT JOIN sec.registration r ON  v.system_key = r.system_key AND  r.regis_yr=@year  AND r.regis_qtr=@Quarter  WHERE a.appl_branch = 1 and a.appl_type = ''1'' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15\,16) order by v.student_name','EDWAdminMart'),
('Report','MyFD Expense Transfer Volume Report','2009-03-27','2009-05-16',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays metrics for a selected date range about the volume of Expense Transfers initiated/executed in MyFinancialDesktop\, beginning with Dec-08-2008.','Services & Resources','DECLARE @fundingtable table ( f_systemkey decimal(9\,0) \, Funding_Source varchar(30) )  INSERT INTO @fundingtable  SELECT DISTINCT s1.system_key \, CASE  WHEN mc.major_ss_inelig = 1  THEN ''Fee Based''  WHEN s1.system_key IN (   SELECT DISTINCT r1.system_key   FROM UWSDBDataStore.sec.registration r1   INNER JOIN UWSDBDataStore.sec.registration_courses rc1 ON r1.system_key = rc1.system_key    AND r1.regis_yr = rc1.regis_yr    AND r1.regis_qtr = rc1.regis_qtr    AND rc1.course_branch = 1   INNER JOIN UWSDBDataStore.sec.sys_tbl_39_calendar st39 ON ''0'' + CAST(rc1.regis_yr AS char(4)) + CAST(rc1.regis_qtr AS char(1)) = st39.table_key   WHERE r1.enroll_status = 12     AND ((rc1.request_status IN(''A''\,''C''\,''R'')) OR (rc1.request_status IN(''W''\,''Y''\,''D'') AND rc1.request_dt > st39.tenth_day))     AND r1.regis_qtr = @Quarter      AND r1.regis_yr = @year     AND CAST(r1.regis_yr AS char(4)) + CAST(r1.regis_qtr AS char(1)) + rc1.crs_curric_abbr + CAST(rc1.crs_number AS char(3)) + rc1.crs_section_id IN (    ''20104B NURS350C''\, ''20104B NURS430D''\, --Fall 2010    ''20111B NURS407C''\, ''20111B NURS410C''\, --Winter 2011    ''20112B NURS403C''\, ''20112B HLTH497D''\, --Spring 2011    ''20113B HLTH497D''\,''20113B NURS409F''\,''20113B NURS409G''\,''20113B NURS409H''\,''20113B NURS495G''\,''20113B NURS495H''\,''20113B NURS495I''\, --Summer 2011    ''20114B NURS430D''\, ''20114B HLTH497D''\, ''20114B NURS350C''\, --Fall 2011    ''20121B NURS407C''\, ''20121B NURS410C''\, --Winter 2012    ''20122B NURS403C''\, ''20122B HLTH497C''\, --Spring 2012     ''20123B HLTH450A''\, ''20123B NURS409F''\, ''20123B NURS409G''\, ''20123B NURS409H''\, --Summer 2012    ''20124B HLTH497D''\, ''20124B NURS350C''\, ''20124B NURS430D''\, --Fall 2012    ''20131B NURS407C''\, ''20131B NURS410C''\, --Winter 2013    ''20132B NURS403C''\, ''20132B HLTH497C''\, --Spring 2013    ''20133B HLTH497A''\, ''20133B NURS409F''\, ''20133B NURS409G''\, ''20133B NURS409H'' --Summer 2013    )   ) THEN ''University Center Everett'' --NOTE there will need to be a separate WHEN...THEN statement for each year and quarter that the Everett Nursing program runs at least until Seattle comes up with some way to code them appropriately   WHEN s1.system_key IN (   SELECT DISTINCT sg.system_key   FROM UWSDBDataStore.sec.sr_student_grp sg   WHERE sg.sg_group_cd = ''NEVT''    AND @year *10 + @Quarter BETWEEN sg.sg_init_yr *10 + sg.sg_init_qtr AND sg.sg_exp_yr *10 + sg.sg_exp_qtr   ) THEN ''University Center Everett''  ELSE '' State Funded''  END  FROM UWSDBDataStore.sec.student_1 s1  INNER JOIN UWSDBDataStore.sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key  AND s1cm.branch = 1  AND s1cm.index1 = 1  INNER JOIN UWSDBDataStore.sec.registration r ON s1.system_key = r.system_key INNER JOIN UWSDBDataStore.sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr  AND s1cm.pathway = mc.major_pathway  AND mc.major_last_yr IN (   SELECT MAX(mc1.major_last_yr) AS lastyr   FROM UWSDBDataStore.sec.Sr_major_code mc1    WHERE s1cm.major_abbr = mc1.major_abbr     AND s1cm.pathway = mc1.major_pathway   ) WHERE r.regis_yr = @year   AND r.regis_qtr = @Quarter   AND r.enroll_status = 12  -----------------------------------------------------------------------------------------------------   --Headcount SELECT Dept = CASE  WHEN scm.major_abbr = ''B NM'' THEN ''Non-Matric''  WHEN scm.major_abbr = ''B BUSX'' THEN ''BUSINESS ADMINISTRATION (BELLEVUE)''  WHEN scm.major_abbr = ''B NURS'' AND ft.funding_source =''University Center Everett'' THEN ''NURSING (EVERETT)''  WHEN m.major_dept IN(865\, 1073\, 1091\, 1092\, 1093) THEN ''School of Science\, Technology\, Engr & Math''  ELSE d.dept_full_nm  END \, Funding = ft.Funding_Source \, r.regis_qtr \, r.regis_yr \, class_status = CASE  WHEN s1.class = 1 AND m.major_dept = 864 THEN ''Undergrad-Freshman'' --NOTE that dept code 864 is CUSP  WHEN s1.class = 2 AND m.major_dept = 864 THEN ''Undergrad-Sophomore''    WHEN s1.class = 3 AND m.major_dept = 864 THEN ''Undergrad-Junior''    WHEN s1.class = 4 AND m.major_dept = 864 THEN ''Undergrad-Senior''    WHEN s1.class = 5 AND m.major_dept = 864 THEN ''Undergrad-Fifth Year''    WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 0 THEN ''Undergrad-Non-Matric''    WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 2 THEN ''Graduate-Non-Matric''    WHEN s1.class < 6 AND m.major_dept <> 864 THEN ''Undergrad''    WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 0 THEN ''Undergrad''  WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 2 THEN ''Graduate''  WHEN s1.class = 8 THEN ''Graduate''  ELSE ''UNKNOWN''  END  \, class_status_order = CASE  WHEN s1.class = 1 AND m.major_dept = 864 THEN 20  WHEN s1.class = 2 AND m.major_dept = 864 THEN 30   WHEN s1.class = 3 AND m.major_dept = 864 THEN 40    WHEN s1.class = 4 AND m.major_dept = 864 THEN 50    WHEN s1.class = 5 AND m.major_dept = 864 THEN 60    WHEN s1.class = 6 AND m.major_dept = 864 THEN 70    WHEN s1.class < 6 AND m.major_dept <> 864 THEN 10    WHEN s1.class = 6 AND scm.deg_level = 0 AND m.major_dept <> 864 THEN 10    WHEN s1.class = 6 AND scm.deg_level = 2 AND m.major_dept ','EDWAdminMart'),
('Report','Budget Profile Report','2009-04-06','2009-05-26',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays all detail information for a given budget number in a given biennium.','Services & Resources','SELECT          BienniumYear\,     SUM(OpenBalAmt) AS BeginingBalance\,      SUM(DebitSumAmt) AS debit\,      SUM(CreditSumAmt) AS credit FROM              GLDataMart.sec.TransGLSummary WHERE          (GLAccountCode = ''1160'') GROUP BY BienniumYear ORDER BY BienniumYear','EDWAdminMart'),
('Report','Budget Summary by OrgCode','2009-05-20','2009-07-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays budgeted amounts\, encumbrances\, transaction totals\, and budget balances for the selected Org Codes\, by account code\, during a reporting period.','Services & Resources','SELECT DISTINCT s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip \,addr.perm_city \,addr.perm_state \,addr.local_state \,st30hs.high_school_name  FROM UWSDBDataStore.sec.student_1 s1  INNER JOIN UWSDBDataStore.sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join UWSDBDataStore.sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join UWSDBDataStore.sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key  WHERE appl_yr IN  (@Year)    AND appl_qtr IN (@Quarter)        AND appl_branch = @branch   AND appl_type = ''1''     AND   high_sch_gpa >= @GPA   AND   (       CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END >= @ACT  OR  CASE   WHEN s1.s1_high_satv > 0    THEN s1.s1_high_satv    ELSE NULL  END >= @SATV    OR   CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END >= @SATM  )','EDWAdminMart'),
('Report','Transaction Summary by OrgCode','2009-05-20','2009-07-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays individual transactions that impacted the budgets for the selected Org Codes\, by account code\, during a reporting period.','Services & Resources','SELECT Distinct  a.appl_yr\,  Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,   v.student_name\, fname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, 1\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,mname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc)))+1\,LEN(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,lname = SUBSTRING(v.student_name_lowc\, 1\, CHARINDEX(''\,''\,v.student_name_lowc)-1) \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  addr.perm_line_1\, addr.perm_line_2\, addr.perm_city\, addr.perm_state\, addr.perm_zip_5\,  addr.local_line_1\, addr.local_line_2\, addr.local_city\, addr.local_state\, addr.local_zip_5\,   addr.perm_phone_num\,  addr.local_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where  ab.system_key = a.system_key      and ab.appl_no = a.appl_no      and ab.appl_yr = a.appl_yr      and ab.appl_qtr = a.appl_qtr                                                                                 and ab.appl_status_new in (15\,16) )\, r.advising_date\, r.advising_type\, AdviseType =  CASE   WHEN r.advising_type= ''O'' THEN ''Orientation''  Else ''Other''   END\,  v.running_start\, v.college_in_hs  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   left join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr  and ar.req_pathway = mc.major_pathway   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  LEFT JOIN sec.registration r ON  v.system_key = r.system_key AND  r.regis_yr=@year  AND r.regis_qtr=@Quarter  WHERE a.appl_branch = 1 and a.appl_type = ''1'' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15\,16) order by v.student_name','EDWAdminMart'),
('Report','Transaction Detail','2009-05-20','2009-07-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays a list of budget numbers that are not associated with a room in the GeoSIMS application. Budget type classes 0552 and 0557 are excluded by default because departments are not requ','Services & Resources','SELECT sr_adm_appl.appl_qtr \, sr_adm_appl.appl_yr \, sr_adm_appl.appl_branch \, sr_adm_appl.appl_status_rsn \, v.student_no \, v.student_name_lowc \, v.system_key \, sr_adm_appl.appl_status \, addr.e_mail_ucs \, addr.e_mail_other \, AppStatus = CASE  WHEN sr_adm_appl.appl_status = 1 THEN ''Application Received -- Not Processed'' WHEN sr_adm_appl.appl_status = 2 THEN ''Incomplete'' WHEN sr_adm_appl.appl_status = 4 THEN ''File Complete and Sent to Department'' WHEN sr_adm_appl.appl_status = 5 THEN ''HOLD- Requested Additional Documenation'' WHEN sr_adm_appl.appl_status = 7 THEN ''Applicant Withdrew Application'' WHEN sr_adm_appl.appl_status = 8 THEN ''Applicant is Denied Admission'' WHEN sr_adm_appl.appl_status = 9 THEN ''Temp Hold- File is Complete and Sent to Evaluators'' WHEN sr_adm_appl.appl_status = 10 THEN ''Applicant is Admited to the University'' WHEN sr_adm_appl.appl_status = 12 THEN ''Applicant has Registered for Classes'' WHEN sr_adm_appl.appl_status = 14 THEN ''Applicant is Admited to the University'' WHEN sr_adm_appl.appl_status = 15 THEN ''Applicant is Paid Confirmation Fee'' WHEN sr_adm_appl.appl_status = 16 THEN ''Applicant is Paid Confirmation Fee'' WHEN sr_adm_appl.appl_status = 17 THEN ''Files Complete - Too Late for an Admissions Decision'' WHEN sr_adm_appl.appl_status = 24 THEN ''Applicant Declined Our Offer of Admission'' ELSE ''NON UWB App Status'' END\,    (SELECT     COUNT(*) AS Expr1                 FROM          sec.sr_adm_appl AS app_sea                  WHERE      (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0)) AS seattle_appl_count\,    CASE WHEN                           (SELECT     COUNT(*)                             FROM      sec.sr_adm_appl app_sea                             WHERE      sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND                                                     app_sea.appl_branch = 0) = 0 THEN ''No''             ELSE ''Yes''    END AS Seattle_app\,   CASE WHEN                           (SELECT     COUNT(*)                             FROM          sec.sr_adm_appl app_sea                             WHERE      sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND                                                     app_sea.appl_branch = 2) = 0 THEN ''No''             ELSE ''Yes''    END AS Tacoma_app\,     CASE WHEN                             (select appl_branch from sec.sr_adm_appl b               where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and                                            b.appl_status = 16) = 0 THEN ''Seattle''               WHEN                             (select appl_branch from sec.sr_adm_appl c               where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and                                            c.appl_status = 16) = 1 THEN ''Bothell''              WHEN  (select appl_branch from sec.sr_adm_appl d               where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and                                            d.appl_status = 16) = 2 THEN ''Tacoma''               ELSE ''None'' END AS Confirmed  FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key  INNER JOIN sec.addresses addr ON addr.system_key= v.system_key WHERE (sr_adm_appl.appl_branch = 1) AND (sr_adm_appl.appl_yr = @year)  AND (sr_adm_appl.appl_qtr = @Quarter)  AND (sr_adm_appl.appl_status_rsn = 91)   AND sr_adm_appl.appl_type = ''1''','EDWAdminMart'),
('Report','Organization-Budget Relationship Report','2010-07-20','2010-09-08',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays the current and past relationships between budgets and user-selected org codes for a user-specified date.','Services & Resources','SELECT  v.system_key\,  a.appl_yr\,  a.appl_qtr\,  v.student_name\, -- addr.local_line_1\, -- addr.local_line_2\, -- addr.local_city\, -- addr.local_state\, -- addr.local_zip_5\, -- addr.local_zip_4\,  addr.local_phone_num\,  addr.perm_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  v.s1_gender\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' OR          a.appl_type = ''4'' then ''UG (2yr/4yr)''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  v.s1_visa_type\,  v.resident\,  addr.perm_country\,  addr.parent_country\, ReasonCode= CASE  WHEN a.appl_status_rsn= 0 THEN ''Direct'' WHEN a.appl_status_rsn= 90 THEN ''Conditional - ELP'' WHEN a.appl_status_rsn= 91 THEN ''Conditional - ATP'' WHEN a.appl_status_rsn= 92 THEN ''Conditional - English Proficiency in Progress'' WHEN a.appl_status_rsn= 93 THEN ''B BUS - Bellevue'' WHEN a.appl_status_rsn= 99 THEN ''Director Approval'' ELSE ''-'' END\, a.appl_status_rsn\, v.student_no  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 and v.resident in (5\,6) and v.s1_visa_type is not null and v.s1_visa_type <> ''''  AND (a.appl_yr = @year)  AND (a.appl_qtr = @Quarter)','EDWAdminMart'),
('Report','Consolidated Budget Status Report Menu','2010-10-20','2010-12-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report supercedes all varieties of the discontinued paper-based Consolidated Budget Status Report AM28619 and AM28225. It can be used to view current budget status information by OrgCode or by Pa','Services & Resources','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Consolidated Budget Status Report R1','2010-10-20','2010-12-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','Exec Summary','Services & Resources','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Consolidated Budget Status Report R2','2010-10-20','2010-12-09',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','Exec Summary','Services & Resources','select     budgetnbr\,     budgetname\,     accountcode\,     accountname\,     trancodedesc\,     tranamount\,     trandesc\,     tranadditionaldesc\,     tranreference2 from     ODS.sec.BudgetActivityDetail where     bienniumyear = @BienniumYear and     fasrunnbr =@fasno and     trancode = ''35'' and tranreference2 = @ref2 order by    budgetnbr\, budgetname\,accountcode','EDWAdminMart'),
('Report','FAS Batch Summary Report','2009-07-15','2009-09-03',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays rejected and accepted transaction information for a given Originating Area Code (OAC) for a selected time period. A complete listing of OAC''s is available in the MyFD Glossary. Pl','Services & Resources','SELECT Distinct  a.appl_yr\,  Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,   v.student_name\, fname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, 1\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,mname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc)))+1\,LEN(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,lname = SUBSTRING(v.student_name_lowc\, 1\, CHARINDEX(''\,''\,v.student_name_lowc)-1) \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  addr.perm_line_1\, addr.perm_line_2\, addr.perm_city\, addr.perm_state\, addr.perm_zip_5\,  addr.local_line_1\, addr.local_line_2\, addr.local_city\, addr.local_state\, addr.local_zip_5\,   addr.perm_phone_num\,  addr.local_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where  ab.system_key = a.system_key      and ab.appl_no = a.appl_no      and ab.appl_yr = a.appl_yr      and ab.appl_qtr = a.appl_qtr                                                                                 and ab.appl_status_new in (15\,16) )\, r.advising_date\, r.advising_type\, AdviseType =  CASE   WHEN r.advising_type= ''O'' THEN ''Orientation''  Else ''Other''   END\,  v.running_start\, v.college_in_hs  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   left join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr  and ar.req_pathway = mc.major_pathway   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  LEFT JOIN sec.registration r ON  v.system_key = r.system_key AND  r.regis_yr=@year  AND r.regis_qtr=@Quarter  WHERE a.appl_branch = 1 and a.appl_type = ''1'' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15\,16) order by v.student_name','EDWAdminMart'),
('Report','GL Summary Report','2010-11-01','2010-12-21',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','Displays the GL Beginning Balance Amounts\, Debit Amounts\, Credit Amounts and Ending Balance amounts for the selected GL Accounts and Fund Codes for the selected reporting period.','Services & Resources','SELECT DISTINCT  v.student_name\, v.student_no\, v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, v.class\, v.tot_lowd_transfer\, v.tot_upd_transfer\, r.regis_yr\,  regis_qtr =  case   when r.regis_qtr = 1 then ''Winter''   when r.regis_qtr = 2 then ''Spring''   when r.regis_qtr = 3 then ''Summer''   when r.regis_qtr = 4 then ''Autumn''  end\, r.current_credits\, total_credits = ((v.tot_graded_attmp + tot_nongrd_earn) - tot_deductible)\, addr.local_phone_num\, addr.e_mail_ucs\, addr.e_mail_other\, addr.local_line_1\, addr.local_city\, addr.local_zip_5\, addr.perm_line_1\, addr.perm_city\, addr.perm_zip_5\,  rcm.regis_major_abbr   FROM sec.student_1 v  INNER JOIN sec.registration r on v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm  ON r.system_key = rcm.system_key  AND r.regis_yr = rcm.regis_yr  AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr  ON v.system_key = addr.system_key INNER JOIN sec.sr_adm_appl a  ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_mail_codes mc  ON a.system_key = mc.system_key  AND a.appl_no = mc.appl_no  AND a.appl_qtr = mc.appl_qtr  AND a.appl_yr = mc.appl_yr  AND ( a.appl_status_rsn=91 OR mc.mail_code = ''BCT'') WHERE  r.enroll_status = 12 AND rcm.regis_branch = 1 AND rcm.regis_major_abbr in ( ''B PRE''\,''B XPRE''\,''B NM'') AND r.regis_yr = @Year AND r.regis_qtr = @Quarter  ORDER BY admitted_for_yr\,student_name\, r.regis_yr\, regis_qtr','EDWAdminMart'),
('Report','Budget Type Class Matrix','2009-10-13','2009-12-02',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','The Budget Type/Class Matrix is used to classify and group budgets by their funding sources and is maintained by the Office of Planning and Budgeting.  This classification system facilitates fiscal re','Services & Resources','SELECT p.IdNbr\, dc.PaycycleEndDate\, dc.GTNNbr\, dc.Amount\, dc.SourceDesc FROM HumanResources_HEPPS.sec.DeductAndContributions  dc   INNER JOIN HumanResources_HEPPS.sec.Person  p      ON p.PersonKey = dc.PersonKey       AND p.RecordEffBeginDate <= dc.PaycycleEndDate       AND p.recordEffEndDate >= dc.PaycycleEndDate WHERE dc.GTNNbr = @GTN AND p.IdNbr = @EID ORDER BY dc.GTNNbr\, dc.PaycycleEndDate','EDWAdminMart'),
('Report','FAS Batch Summary Report - Accepted TC-30','2009-11-10','2009-12-30',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays Accepted TC-30 Transactions for a selected Originating Area Code and Date Range.','Services & Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, BienniumYear\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''35''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1'' ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Se','EDWAdminMart'),
('Report','FAS Batch Summary Report - Accepted TC-35','2009-11-10','2009-12-30',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays Accepted TC-35 Transactions for a selected Originating Area Code and Date Range.','Services & Resources','SELECT   FundCode\,   TransDate\,   TransDebitAmt\,   TransCreditAmt\,   TransRef1Text \,   TransRef2Text FROM                        GLDataMart.sec.TransGLUseTax WHERE                  GLAccountCode  = ''4801''  and                  BienniumYear = @BienYear and                  TransBatchNbr = @FASNo and                  TransTypeCode=@TransCode ORDER BY  FundCode\,   TransDate','EDWAdminMart'),
('Report','FAS Batch Summary Report - Accepted TC-60','2009-11-10','2009-12-30',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays Accepted TC-60 Transactions for a selected Originating Area Code and Date Range.','Services & Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','FAS Batch Summary Report - Accepted TC-65','2009-11-10','2009-12-30',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays Accepted TC-65 Transactions for a selected Originating Area Code and Date Range.','Services & Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','GL Payroll Cash Account Biennium Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report summarizes\, as of last night\, the debit and credit balances of the GL account 1160 for Payroll Cash Account\, by different biennium.','Services & Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','FAS Adjustment Runs','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report would display transactions that are not included in main FAS payroll runs.  That would give user a detailed list to see how many transactions that can be attributed to the reconciling diff','Services & Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','Payroll Adjustment Runs Record Detail','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows the list of transactions included in the FAS run you have clicked. By looking at the type of the documentation number (Such as a leading letter \"D\"\, or \"P\"\, etc) a payroll office staf','Services & Resources','declare @UserKey smallint /* -- Parameters used for testing -- declare @ReportUser varchar(50) declare @StartDate datetime declare @EndDate datetime  set @ReportUser = ''netid\alchin''; set @StartDate =  ''05/15/2012'' set @EndDate = ''01/15/2013''  */  set @StartDate = Dateadd(day\,-1\,@StartDate); set @EndDate = Dateadd(day\, 1\, @EndDate);  select @UserKey = UserKey from  EDWAdminMart.sec.RSUser where UserName = @ReportUser   ;with cte_TopRpts as  (     SELECT r.ReportName            \, r.ReportFolder            \, r.ReportKey            \, count(l.ExecutionLogKey) as RptRunCount            \, max(l.TimeStart) as RptLastRun      FROM EDWAdminMart.sec.RSExecutionLog l      JOIN EDWAdminMart.sec.RSReport r    ON l.ReportKey = r.ReportKey      WHERE l.UserKey = @UserKey      and   l.TimeStart  between @StartDate and @EndDate             and   l.StatusKey = 1      and   r.ReportDeleted = 0       group by r.ReportName         \, r.ReportFolder         \, r.ReportKey        ) -- this version will return the last exec detail for the top N reports SELECT r.RptOrd      \, r.ReportName      \, r.ReportFolder      \, r.ReportKey      \, r.RptRunCount\, r.RptLastRun      \, l.TimeStart      \, l.TimeEnd      \, l.Parameters  from     ( select top 10000  *\,  -- row_number() over(order by RptRunCount desc) RptOrd   -- ordering # by report execution     row_number() over(order by RptLastRun desc) RptOrd  -- ordering # by last report run       from cte_TopRpts   order by RptLastRun desc   -- order by last report run     -- order by RptRunCount desc  -- order by most executed report     ) r join EDWAdminMart.sec.RSExecutionLog l        ON  l.ReportKey = r.ReportKey       and l.TimeStart = (select max(TimeStart) from EDWAdminMart.sec.RSExecutionLog b                          where b.ReportKey = l.ReportKey                          and   b.StatusKey = 1                          and b.UserKey = @UserKey)  where        l.TimeStart between @StartDate and @EndDate                       order by r.RptOrd\, l.TimeStart','EDWAdminMart'),
('Report','Legacy GL Payroll Cash Activities in a Month: Major Payroll Runs','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report shows the comparison between the summaries of GL payroll cash account processed by FAS\, and payroll data processed by HEPPS. The upper portion of the report lists all FAS runs that process','Services & Resources','select       budgetnbr\,      budgetname\,       accountcode\,       accountname\,       trancodedesc\,      tranamount\,       tranreference2\,       trandesc\,       tranadditionaldesc from        ODS.sec.BudgetActivityDetail where       bienniumyear = @bienyear and       fasrunnbr =@fasno and       tranreference1 = @ref1 and       trancode = ''44'' order by       budgetnbr\, budgetname','EDWAdminMart'),
('Report','GL Payroll Cash Account  Daily Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report provides summarized amounts by FAS run in a month relating to GL Payroll Cash Account 1160. If you need to see detailed list of transaction\, please go to reconcilation report and drill thr','Services & Resources','SELECT DISTINCT  v.student_name\,  student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,  v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, mmd.mm_major_abbr\,   class =   case   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  end\,  addr.e_mail_ucs\, addr.e_mail_other\,   Registered_Current =  CASE WHEN EXISTS  (SELECT r.system_key                  FROM sec.registration_courses r                  WHERE r.regis_yr=@Current_Year   and r.regis_qtr=@Current_Quarter                                  and r.course_branch = 1   and r.system_key = v.system_key)   THEN ''Yes''   ELSE ''No''  END  FROM sec.student_1 v    LEFT JOIN sec.addresses addr   ON v.system_key = addr.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @Current_Year  AND mm_qtr = @Current_Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no   WHERE   mmd.mm_major_abbr NOT in (''B PRE''\, ''B XPRE'')   AND    v.system_key  IN   (  SELECT  v.system_key   FROM sec.student_1 v  INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key  INNER JOIN (     SELECT DISTINCT rc.system_key                   FROM  sec.registration_courses rc                  WHERE rc.course_branch=1          AND rc.regis_yr=@year       AND rc.regis_qtr=@Quarter       AND rc.request_status in (''A''\,''C''\,''R'')) X     ON X.system_key = v.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @year  AND mm_qtr = @Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no  WHERE mmd.mm_major_abbr in (''B PRE''\, ''B XPRE'') )','EDWAdminMart'),
('Report','GL Payroll Cash Account  Monthly Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows GL 1160 summaries of the month\, grouped by transaction codes. The links in the month column will lead to daily summaries of the transaction relating to the account.','Services & Resources','SELECT DISTINCT  v.student_name\,  student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,  v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, mmd.mm_major_abbr\,   class =   case   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  end\,  addr.e_mail_ucs\, addr.e_mail_other\,   Registered_Current =  CASE WHEN EXISTS  (SELECT r.system_key                  FROM sec.registration_courses r                  WHERE r.regis_yr=@Current_Year   and r.regis_qtr=@Current_Quarter                                  and r.course_branch = 1   and r.system_key = v.system_key)   THEN ''Yes''   ELSE ''No''  END  FROM sec.student_1 v    LEFT JOIN sec.addresses addr   ON v.system_key = addr.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @Current_Year  AND mm_qtr = @Current_Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no   WHERE   mmd.mm_major_abbr NOT in (''B PRE''\, ''B XPRE'')   AND    v.system_key  IN   (  SELECT  v.system_key   FROM sec.student_1 v  INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key  INNER JOIN (     SELECT DISTINCT rc.system_key                   FROM  sec.registration_courses rc                  WHERE rc.course_branch=1          AND rc.regis_yr=@year       AND rc.regis_qtr=@Quarter       AND rc.request_status in (''A''\,''C''\,''R'')) X     ON X.system_key = v.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @year  AND mm_qtr = @Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no  WHERE mmd.mm_major_abbr in (''B PRE''\, ''B XPRE'') )','EDWAdminMart'),
('Report','GL Payroll Cash Account  Monthly Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report lists monthly summaries of the biennium selected for the GL account 1160.','Services & Resources','/*   --Variables for testing     --DECLARE @startdate DATETIME\, @enddate DATETIME \, @jvbud_user VARCHAR(8)     -- SET @startdate = ''1/1/2013''     -- SET @enddate = ''3/25/2014''     -- SET @jvbud_user = ''JVBO276 ''       ------------Derive all Date Variables in the Following Section  */  DECLARE @sfy char(4)\, @sby char(4)\, @sam char(2)\, @ecalyear char(4)\, @ecalmonth char(2)\, @efy char(4)\, @eby char(4)\, @eam VARCHAR(2)\, @jvbud VARCHAR(8)\, @searchtype CHAR(6)            SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END      SET @sby = (@sfy-(@sfy %2)-1)      SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18      WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6      END      SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end      SET @sam = CASE WHEN LEN(@sam) = 1 THEN ''0'' + @sam ELSE @sam END      SET @ecalyear = YEAR(@enddate)      SET @ecalmonth = MONTH(@enddate)      SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END      SET @eby = (@efy-(@efy %2)-1)      SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18      WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6      ELSE 27 END      SET @eam = CASE WHEN LEN(@eam) = 1 THEN ''0'' + @eam ELSE @eam END       --Remove the dash character from the @jv variable if entered with a budget#      SET @jvbud = UPPER(@jvbud_user)      SET @jvbud =  CASE WHEN SUBSTRING(@jvbud\,3\,1)=''-'' AND LEFT(@jvbud\,2)!=''jv'' THEN LEFT(@jvbud\,2) + RIGHT(@jvbud\,4)      WHEN LEN(@jvbud)=''5'' THEN ''JV'' + (@jvbud)      ELSE RTRIM(LTRIM(@jvbud)) END      SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN ''x''      WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud\,2)!=''JV'' THEN ''b''      WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud\,2)= ''JV'' THEN ''j''      ELSE ''x'' END      --SELECT @searchtype      --SELECT @jvbud            --select @sby\, @sam\, @eby\, @eam        IF OBJECT_ID(''tempdb..#T1'') IS NOT NULL DROP TABLE #T1  CREATE TABLE #T1  (Bienniumyear CHAR(4)\, TranReference2 CHAR (8))      INSERT INTO #T1(BienniumYear\, TranReference2)       ( SELECT DISTINCT BienniumYear\, BAD.TranReference2       FROM sec.BudgetActivityDetail BAD       WHERE (BAD.BudgetNbr = @jvbud        AND LEFT(BAD.TranReference2\,2)=''JV''        AND BAD.BienniumYear BETWEEN @sby AND @eby        AND BAD.TranCode = ''35''        AND BAD.TranPostingDate BETWEEN @startdate AND @enddate        AND @searchtype = ''b''       )      )                  SELECT        BAD.BienniumYear\,        BAD.BudgetNbr\,        BudgetName\,        AccountCode\,        OrgCode\,        OrgName\,        TranAmount\,        TranCode\,        TranDate1\,        TranPostingDate\,       BAD.TranReference2\,        TranReference3\,        TranDesc\,        TranFTE\,        PositionNbr\,        BAD.TDPrimaryKey\,        AppTranOriginating      FROM sec.BudgetActivityDetail BAD       LEFT JOIN #T1        ON BAD.TranReference2 = #T1.TranReference2      WHERE      (       (@searchtype = ''b'' AND #T1.TranReference2 IS NOT NULL)       OR       (@searchtype = ''j'' AND @jvbud = BAD.TranReference2)      ) and      BAD.BienniumYear BETWEEN @sby AND @eby      AND BAD.TranCode = ''35''      AND TranPostingDate BETWEEN @startdate AND @enddate      AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam)      ORDER BY BAD.TranReference2\, BAD.BudgetNbr','EDWAdminMart'),
('Report','Hepps Payroll Monthly Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report summarizes HEPPS payroll activities by calendar year and month. The link in the month column will lead you to reconciling report for GL 1160 summaries from FAS and payroll summaries from H','Services & Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''65''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1''  AND ISNULL(LEFT(CTIAccountCode\,2)\,0) = CASE WHEN TranCode=''65'' THEN ''96''      WHEN TranCode=''60'' THEN ''21'' ELSE 0 END ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, Prior','EDWAdminMart'),
('Report','Hepps Payroll and GL Payroll Cash Account','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This is a menu page for reports going to \"GL 1160 and payroll activity reconciling\" or \"GL summaries\".     The link “Hepps Payroll Monthly Summaries and Reconciliation”  goes to reports that compare t','Services & Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report provides summarized list at the transaction codes (TC) level for each FAS daily run in the month. TC 35 is for payment and adjustment. TC 44 records Use Tax liability coming from accrued a','Services & Resources','SELECT sr_adm_appl.appl_qtr \, sr_adm_appl.appl_yr \, sr_adm_appl.appl_branch \, sr_adm_appl.appl_status_rsn \, v.student_no \, v.student_name_lowc \, v.system_key \, sr_adm_appl.appl_status \, sr_adm_appl.adv_reg_prt_dt \, registration.regis_yr \, registration.regis_qtr \, registration.special_program AS Expr1 \, registration.advising_date \, registration.advising_type \, registration.regis_class \, addr.e_mail_ucs \, addr.e_mail_other \, AppStatus = CASE   WHEN sr_adm_appl.appl_status = 1 THEN ''Application Received -- Not Processed''  WHEN sr_adm_appl.appl_status = 2 THEN ''Incomplete''  WHEN sr_adm_appl.appl_status = 4 THEN ''File Complete and Sent to Department''  WHEN sr_adm_appl.appl_status = 5 THEN ''HOLD- Requested Additional Documenation''  WHEN sr_adm_appl.appl_status = 7 THEN ''Applicant Withdrew Application''  WHEN sr_adm_appl.appl_status = 8 THEN ''Applicant is Denied Admission''  WHEN sr_adm_appl.appl_status = 9 THEN ''Temp Hold- File is Complete and Sent to Evaluators''  WHEN sr_adm_appl.appl_status = 10 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 12 THEN ''Applicant has Registered for Classes''  WHEN sr_adm_appl.appl_status = 14 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 15 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 16 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 17 THEN ''Files Complete - Too Late for an Admissions Decision''  WHEN sr_adm_appl.appl_status = 24 THEN ''Applicant Declined Our Offer of Admission''  ELSE ''NON UWB App Status''  END \, (  SELECT COUNT(*) AS Expr1  FROM sec.sr_adm_appl AS app_sea  WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Seattle_app \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Tacoma_app \, CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10\,14)  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10\,14)  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch   from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10\,14)  ) = 2 THEN ''Tacoma'' /* WHEN ((select appl_branch from sr_adm_appl b               where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and                                            b.appl_status IN(10\,14)) AND  (select appl_branch from sr_adm_appl d               where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and                                            d.appl_status IN(10\,14) )) THEN ''Seattle and Tacoma''*/  --Build Case for Seattle- And Tacoma Acceptance  --Build acceptance for all three campus                ELSE ''None'' END AS Accepted \,   CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16  ) = 2 THEN ''Tacoma''  ELSE ''None''  END AS Confirmed   \,HST_Received = appl_doc_rcvd_dt \,Current_Credits = registration.current_credits \,mpt.test_dt \,mpt.test_type \,mpt.test_score  FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key  AND registration.regis_yr = rcm.regis_yr  AND registration.regis_qtr = rcm.regis_qtr  INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN (  SELECT *   FROM sec.sr_adm_applicant_docs  WHERE appl','EDWAdminMart'),
('Report','Use Tax Liability Biennium Summaries','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report summarizes total amounts\, as of last night\, the debit and credit balances of the GL account 4801 for Use Tax by biennium.','Services & Resources','SELECT  * FROM    Report WHERE ReportCodeNbr = @rptcd','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows all transactions relating to the requisition number. The link will drill through to reports showing transaction details\, including budget number\, budget name\, object code\, and the inp','Services & Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows information from the original transaction details\, including the note\, if any\, from the data entry.','Services & Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows detail data going beyongd just general leadger transaction\, to look up the budget number\, budget name\, object code\, object description\, and input note that are related to the combinat','Services & Resources','SELECT   v.system_key\,  v.student_name\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''        when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,  status_dt = convert(char(10)\, a.appl_status_dt\,110)\,  s.appl_stat_descrip\,  Case when r.enroll_status = 12 then ''Yes''  end as Registered\,  a.appl_yr\,  Appl_Qtr =  case  when a.appl_qtr = 1 then ''Winter''  when a.appl_qtr = 2 then ''Spring''  when a.appl_qtr = 3 then ''Summer''  when a.appl_qtr = 4 then ''Autumn''  end\,  rcvd_dt = convert(char(10)\,a.appl_rcvd_dt\,110)\,  ar.req_major_abbr\,  mc.major_full_nm\,  addr.local_line_1\,  addr.local_city\,  addr.local_state\,  addr.local_zip_5 FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key    left join sec.addresses addr  on v.system_key = addr.system_key  left join sec.registration r  on a.system_key = r.system_key  and a.appl_yr = r.regis_yr  and a.appl_qtr = r.regis_qtr  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','The report shows all the transactions relating to this reference. It can be a JV or document number. If it is a JV\, they are all transaction in the JV batch. If it is a check number or document number','Services & Resources','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int \, @budgetperiod char(1) SET @orglevel10 = ''2600004000'' SET @budgetgroup = ''6GD'' SET @calmonth = ''5'' SET @calyear = 2011 SET @budgetperiod = ''B''  */    DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12   THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = convert(int\,@fiscalyear)%2  /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */  DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18        WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6        ELSE @calmonth + 21 END         DECLARE @bienniumyear char(4)\, @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@fiscalyear %2) - 1     select @fiscalYearToUse = convert(char(4)\,(CASE WHEN @evenoddfy =0   and @fiscalyear <   (SELECT max(convert(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN @fiscalyear+1 ELSE @fiscalyear end))   IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups   CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\, BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\,Budgetname varchar(50)\, BudgetStatusCode char(1)\, BudgetGroup varchar(50)\, BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN Insert into #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptName\, BudgetSuperClassCode\, BudgetTypeCode\, BudgetClassCode\, Budgetnbr\, Budgetname\, BudgetStatusCode\, BudgetGroup\, BudgetGroupCode)  (SELECT DISTINCT BI.fiscalyear \, BI.OrgCode \, LEFT(BI.OrgCode\,7) \, OD.OrgDeptName \, BTC.budgetsuperclasscode \, BTC.budgettypecode \, BTC.budgetclasscode \, BI.budgetnbr \, BI.budgetname \, BI.BudgetStatusCode \, CASE WHEN   BTC.BudgetSuperClassCode  = ''ROF35'' AND BI.RFAcctngCode = ''R'' THEN ''Gifts and Discretionary''  WHEN BTC.budgetsuperclasscode = ''ROF40'' AND BI.RFAcctngCode != ''R'' THEN ''Self Sustaining - Auxillary Ed Activities''  WHEN  (BTC.budgetsuperclasscode = ''ROF70'' AND BI.RFAcctngCode != ''R'' ) OR (BI.BudgetTypeCode = ''56'' and BI.BudgetClassCode = ''04'')  THEN ''Self Sustaining - Service Funds''   WHEN BI.BudgetTypeCode = ''05'' and BI.BudgetClassCode = ''52'' THEN ''Clinical Medicine Fund'' ELSE BTC.budgetsuperclasscode END AS ''BudgetGroup''\, CASE   WHEN BTC.BudgetSuperClassCode  = ''ROF35'' AND BI.RFAcctngCode = ''R'' THEN ''6GD''   WHEN BTC.budgetsuperclasscode = ''ROF40'' AND BI.RFAcctngCode != ''R'' THEN ''8SAEA''   WHEN  (BTC.budgetsuperclasscode = ''ROF70'' AND BI.RFAcctngCode != ''R'' ) OR (BI.BudgetTypeCode = ''56'' and BI.BudgetClassCode = ''04'')  THEN ''9SSSF''   WHEN BI.BudgetTypeCode = ''05'' and BI.BudgetClassCode = ''52'' THEN ''9CMF'' ELSE Budgetsuperclasscode END AS ''BudgetGroupCode'' FROM sec.dimBudgetTypeClassFY BTC  INNER JOIN sec.dimBudgetIndexFY BI  ON BI.budgettypecode = BTC.budgettypecode  AND BI.budgetclasscode = BTC.budgetclasscode  AND  BI.fiscalyear = BTC.fiscalyear  LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY     WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4)  GROUP BY OrgName\,  left(OrgCode\,7)) OD  on LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel WHERE (  (BTC.BudgetSuperClassCode IN (''ROF40''\,  ''ROF70''))   OR (BTC.BudgetTypeCode = ''56'' AND BTC.BudgetClassCode = ''04'')   OR (BTC.BudgetTypeCode = ''05'' AND BTC.BudgetClassCode = ''52'')  OR (BTC.BudgetSuperClassCode = ''ROF35'' AND BI.RFAcctngCode = ''R''))   AND BTC.FiscalYear = @fiscalYearToUse AND BI.OrgCode IN (@orglevel10))  SELECT      BTC.OrgDeptCode \, BTC.OrgDeptName \, btc.OrgCode \, BTC.BudgetGroup \, BTC.BudgetGroupCode \, BTC.BudgetNbr \, BTC.BudgetName \, BTC.BudgetStatusCode \, (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) AS ''TYPE_CLASS'' \, SUM(CASE WHEN FS.TranCode =''32''  AND FS.ObjSubObjCode = ''9788'' THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''FundBeginningBalance''\,  SUM(CASE WHEN (/*Revenue*/   ((FS.TranCode IN (''30''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'')) OR(FS.Trancode = ''32'' AND FS.ObjSubObjCode != ''9788'')) AND LEFT(FS.ObjSubObjCode\, 1) = ''9'') THEN (FS.SummaryAmt * - 1) ELSE 0 END)  AS ''Revenue'' \, /*Expenditures without encumbrances*/  SUM(CASE WHEN (FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) != ''9'') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''Expense''\,  SUM(CASE WHEN   (/*Revenue*/ FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) = ''9'')   OR (/*Expenses*/ FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) != ''9'')   THEN (FS.SummaryAmt * -','EDWAdminMart'),
('Report','Use Tax Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report drills down to the summarizations of the Use Tax account by different funds in the month selected. The link in the accounting month column will lead to the report for daily transaction sum','Services & Resources','SELECT  AcctngMonth\,   TransTypeCode AS TransCode\,   CASE    WHEN     TransTypeCode = 35 THEN ''Adjustment''    WHEN     TransTypeCode = 50 THEN ''Stipend''    WHEN     TransTypeCode= 70 THEN ''Salary''    WHEN     TransTypeCode= 71 THEN ''Benefits''  END AS ''transdesc''\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM         GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''1160'') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY   AcctngMonth\,   TransTypeCode ORDER BY                TransTypeCode','EDWAdminMart'),
('Report','Use Tax Payment Liability','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report summarizes the debit and credit balances of the GL account 4801 for Use Tax by accounting month for the biennium selected. The color chart on the report shows the monthly balance compariso','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END  \, ''SAT'' = CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip  \,addr.perm_line_1  \, addr.perm_line_2  \, addr.perm_city  \, addr.perm_state  \, addr.perm_zip_5  \,st30hs.high_school_name   FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key   WHERE a.appl_yr IN(@Year)    AND a.appl_qtr IN (@Quarter)        AND a.appl_branch = @branch   AND a.appl_type = ''1''      AND (a.resident NOT IN (''5''\, ''6'') AND addr.perm_state <> ''WA''  )     AND    high_sch_gpa >= 3.4 AND  ( CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END >= 1090   OR  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END >= 23        )','EDWAdminMart'),
('Report','Use Tax JV List / Account Payable Accrual','2009-12-05','2010-01-24',' Dan Schaaf','BK Chen\Alexis Chin','This report displays one of 3 different types of Use Tax  transactions: If you had clicked a TC 35\, the report would show you a link to a JV batch via the JV number.  If you had clicked a TC 44\, it wo','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_no \,Student_Name = s1.student_name_lowc \,r.regis_yr \,r.regis_qtr \,yr_qtr = CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1)) \,Academic_Year =  CASE   WHEN r.regis_qtr = 1 THEN CAST((r.regis_yr - 1) AS char(4)) + ''-'' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 2 THEN CAST((r.regis_yr - 1) AS char(4)) + ''-'' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 3 THEN CAST(r.regis_yr AS char(4)) + ''-'' + CAST((r.regis_yr + 1) AS char(4))   WHEN r.regis_qtr = 4 THEN CAST(r.regis_yr AS char(4)) + ''-'' + CAST((r.regis_yr + 1) AS char(4))  END \,Academic_Quarter =   CASE   WHEN r.regis_qtr = 1 THEN ''Winter '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 2 THEN ''Spring '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 3 THEN ''Summer '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 4 THEN ''Autumn '' + CAST(r.regis_yr AS char(4))   ELSE ''ERROR''  END \,Application_Type =  CASE   WHEN a.appl_type = ''1'' THEN ''First-Years''   WHEN a.appl_type IN(''2''\,''4'') THEN ''Transfers''   WHEN a.appl_type = ''5'' THEN ''5th Years''   WHEN a.appl_type = ''G'' THEN ''Graduates''   WHEN a.appl_type IN(''E''\,''7'') THEN ''Graduate Non-Matric''   WHEN a.appl_type IN(''N''\,''6'') THEN ''Non-Matric''   WHEN a.appl_type = ''R'' THEN ''Returning Undergrad''   WHEN s1cm.deg_level <2 THEN ''Continuing Undergrad''   WHEN s1cm.deg_level >=2 THEN ''Continuing Graduate''   ELSE ''Error''  END \,Age =  CASE   WHEN s1.birth_dt >= st39.tenth_day OR s1.birth_dt IS NULL   THEN NULL   WHEN MONTH(s1.birth_dt) > MONTH(st39.tenth_day) OR (MONTH(s1.birth_dt) = MONTH(st39.tenth_day) AND DAY(s1.birth_dt) > DAY(st39.tenth_day))   THEN DATEDIFF(YY\, (s1.birth_dt)\, (st39.tenth_day)) -1   ELSE DATEDIFF(YY\, (s1.birth_dt)\, (st39.tenth_day))  END \,Gender = CASE WHEN s1.s1_gender =''M'' THEN ''Male'' WHEN s1.s1_gender = ''F'' THEN ''Female'' ELSE ''Unknown'' END \,Education_Level = CASE WHEN s1cm.deg_level <2 THEN ''Undergraduate'' WHEN s1cm.deg_level >=2 THEN ''Graduate'' ELSE ''Error'' END \,Class =  CASE   WHEN s1.class = 1 THEN ''1 (First-Year)''   WHEN s1.class = 2 THEN ''2 (Sophomore)''   WHEN s1.class = 3 THEN ''3 (Junior)''   WHEN s1.class = 4 THEN ''4 (Senior)''   WHEN s1.class = 5 THEN ''5 (Fifth-Year)''   WHEN s1.class = 6 THEN ''6 (Non-Degree)''   WHEN s1.class = 8 THEN ''8 (Graduate)''   ELSE ''Unknown''  END  ------------------------------------ ------------Program Data------------ ------------------------------------ \,s1cm.major_abbr \,mc.major_full_nm \,Dept = CASE WHEN dc.dept_abbr =''B VIS'' THEN ''NONE'' ELSE dc.dept_abbr END \,Dept_Name = CASE WHEN dc.dept_full_nm =''BOTHELL CAMPUS VISITING'' THEN ''NONE'' ELSE dc.dept_full_nm END ------------------------------- ---------Other Data-------- ------------------------------- \,HS_GPA = s2.high_sch_gpa \,Transfer_College_GPA = CASE WHEN s2.sr_col_gpa > 0 THEN s2.sr_col_gpa WHEN s2.sr_col_gpa = 0 AND s2.jr_col_gpa > 0 THEN s2.jr_col_gpa ELSE NULL END \,Last_School_Attended = CASE WHEN s1.last_sch_type = 1 THEN st30.high_school_name ELSE st02.institution_name END \,s1.s1_high_satv \,s1.s1_high_satm \,s1.s1_high_act \,s1.s1_last_toefl \,s1.s1_last_toefl_typ \,s1.s1_visa_type \,s1.s1_ins_sevis_id \,st33.home_addr_descrip \,addr.perm_country \,Registered_Credit_Hours = r.current_credits \,addr.e_mail_ucs \,addr.e_mail_other \,Qtr_GPA = CASE WHEN t.qtr_graded_attmp >0 THEN t.qtr_grade_points/t.qtr_graded_attmp ELSE NULL END \,Cumul_GPA = CASE WHEN s1.tot_graded_attmp >0 THEN s1.tot_grade_points/s1.tot_graded_attmp ELSE NULL END \,Qtr_attmp_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned   \,Qtr_earned_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned - t.qtr_deductible  \,t.scholarship_type \,st45.scholar_descrip FROM sec.student_1 s1 INNER JOIN sec.student_1_college_major s1cm  ON s1.system_key = s1cm.system_key  AND s1cm.index1 =1  AND s1cm.branch =1 INNER JOIN sec.registration r  ON s1.system_key = r.system_key INNER JOIN sec.student_2 s2  ON s1.system_key = s2.system_key INNER JOIN sec.Sr_major_code mc  ON s1cm.major_abbr = mc.major_abbr  AND s1cm.pathway = mc.major_pathway  AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr)      FROM sec.Sr_major_code mc1      WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway) INNER JOIN sec.sys_tbl_39_calendar st39  ON (''0'' + CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1))) = st39.table_key INNER JOIN sec.Sr_dept_code dc  ON mc.major_dept = dc.dept_code  AND mc.major_branch = dc.dept_branch INNER JOIN sec.addresses addr  ON s1.system_key = addr.system_key LEFT JOIN sec.sr_adm_appl a  ON r.system_key = a.system_key  AND r.regis_yr = a.appl_yr  AND r.regis_qtr = a.appl_qtr LEFT JOIN sec.Sys_tbl_33_home_addr_by_code st33  ON st33.table_key =    CASE     WHEN LEN(s1.home_addr_code)= 4 THEN ''00'' + CAST(s1.home_addr_code AS char(4))    WHEN LEN(s1.home_addr_code)= 3 THEN ''000'' + CAST(s1.home_addr_code AS char(3))    ELSE ''000000''   END LEFT JOIN sec.sys_tbl_02_ed_inst_info st02  ON s1.last_sch_code = CAST(st02.table_key AS int) LEFT JOIN sec.Sys_tbl_30_highschool st30  ON  s1.la','EDWAdminMart'),
('Report','Variable Reporting Period Budget Summary','2010-01-11','2010-03-02',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays the project period budgeted amount\, encumbrances\, transaction totals\, and budget balances for a selected budget or static MyFD budget list for a selected date range.','Services & Resources','--updated by summyd on 31 January 2014 to include ACT scores per CSS request. Also fixed code to pull all pathways for the most uptodate sr_major_code record. ----also changed s1.tot_2yr_transfer to s1.tot_lowd_transfer and s1.tot_4yr_transfer to s1.tot_u','EDWAdminMart'),
('Report','Forecasting Template by Fiscal Year and OrgCode','2010-05-10','2010-06-29',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report template displays budgeted and actual amounts through the selected reporting period for both fiscal years of a biennium for all budgets within the selected orgcodes and budget categories. ','Services & Resources','SELECT        FundCode\,      GLAccountCode\,     OriginalTransCode\,     TransDebitAmt\,      TransCreditAmt\,      TransRef2Text FROM       GLDataMart.sec.TransGLUseTax WHERE     BienniumYear = @bienyear and      TransBatchNbr = @fasno and      TransTypeCode IN (''35''\,''50'') and       TransRef2Text= @ref2 ORDER BY       FundCode\,      GLAccountCode','EDWAdminMart'),
('Report','Hepps Payroll Monthly Summaries','2009-07-16','2009-09-04',' Dan Schaaf','BK Chen\Dinah Mite Millikin','This report summaries montly payment amounts shown in Hepps Actual Distribution.','Services & Resources','SELECT    coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) AS Appl_level\, coalesce  (T1.ethnicity\, T2.ethnicity\, T3.ethnicity\, T4.ethnicity\, T5.ethnicity\, T6.ethnicity) AS Ethnicity\,  T1.Current_Year_Applied_Count  \, CASE WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Freshman'' THEN ''1''  WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Transfer'' THEN ''2''  WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Graduate'' THEN ''3''  ELSE ''0'' END AS Order_1 \, isnull (T2.Previous_Year_Applied_Count\, 0) as Previous_Year_Applied_Count \,CAST ( (isnull (T1.Current_Year_Applied_Count\, 0)  -  isnull (T2.Previous_Year_Applied_Count\, 0))  AS FLOAT ) / isnull (T1.Current_Year_Applied_Count\,1)     as Change_Applied \, isnull (T3.Current_Year_Admitted_Count\, 0) as Current_Year_Admitted_Count \, isnull (T4.Previous_Year_Admitted_Count\, 0) as Previous_Year_Admitted_Count \, CAST (( isnull (T3.Current_Year_Admitted_Count\, 0) -  isnull (T4.Previous_Year_Admitted_Count\, 0)) AS FLOAT)  / isnull (T3.Current_Year_Admitted_Count\, 1)   as Change_Admitted \, isnull (T5.Current_Year_Confirmed_Count\, 0) as Current_Year_Confirmed_Count \, isnull (T6.Previous_Year_Confirmed_Count\, 0) as Previous_Year_Confirmed_Count \, CAST ( (isnull (T5.Current_Year_Confirmed_Count\, 0) -  isnull (T6.Previous_Year_Confirmed_Count\, 0))   AS FLOAT) /  isnull (T5.Current_Year_Confirmed_Count\, 1)  AS Change_Confirmed FROM  (  SELECT  --Column1 = cast(a.appl_yr as varchar(4)) + '' Applications as of: '' + convert(nvarchar(10)\,@AppDate\,101)\, count(a.system_key) AS Current_Year_Applied_Count \,  Appl_level =    case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\, ethnicity =  addr.perm_country from sec.sr_adm_appl a   inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key  and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr   inner join sec.student_1 v on v.system_key = a.system_key  left join sec.addresses addr  on v.system_key = addr.system_key  where   a.appl_qtr = @Quarter and a.appl_yr = @year and a.appl_branch = @branch  AND v.s1_visa_type = ''F1'' and b.trans_dt =  (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where ab.trans_dt <= @AppDate and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab       where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  GROUP BY     case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\,  addr.perm_country  )T1  full JOIN  (  SELECT  --Column1 = cast(a.appl_yr as varchar(4)) + '' Applications as of: '' + convert(nvarchar(10)\,@AppDate\,101)\, ISNULL (count(a.system_key)\, 0) AS Previous_Year_Applied_Count \,  Appl_level =    case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\, ethnicity =        addr.perm_country from sec.sr_adm_appl a   inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key  and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr   inner join sec.student_1 v on v.system_key = a.system_key  left join sec.addresses addr  on v.system_key = addr.system_key  where   a.appl_qtr = @Quarter and a.appl_yr = (@year-1) and a.appl_branch = @branch  AND v.s1_visa_type = ''F1'' and b.trans_dt =  (Select max(trans_dt) from sec.sr_adm_stat_chg b       where b.trans_dt <= (@PrevAppDate) and b.system_key = a.system_key                and b.appl_no = a.appl_no                and b.appl_yr = a.appl_yr                and b.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab       where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  GROUP BY     case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\,  addr.perm_country  ','EDWAdminMart'),
('Report','Comparison of SDB & PNB Organization Hierarchies','2010-02-18','2010-04-09','Information Management','Ann Wunderlin','Displays the Student Database (SDB) and Planning & Budgeting (PNB) organization codes and names based on links defined by the Financial Accounting System (FAS) org_code that exists in both systems.  T','Healthcare','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int \, @budgetperiod char(1) SET @orglevel10 = ''3060001020'' SET @budgetgroup = ''7LNur'' SET @calmonth = ''1'' SET @calyear = 2012 SET @budgetperiod = ''f'' */    DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12   THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = @fiscalyear %2  /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */  DECLARE @acctngmonth INT SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18        WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6        ELSE @calmonth + 21 END         DECLARE @bienniumyear char(4)\, @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@evenoddfy) - 1     select @fiscalYearToUse = convert(char(4)\,(CASE WHEN @evenoddfy =0   and @fiscalyear <   (SELECT max(convert(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN @fiscalyear+1 ELSE @fiscalyear end))                                  IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups   CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\, BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\,Budgetname varchar(50)\, BudgetStatusCode char(1)\, BudgetGroup varchar(50)\, BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN  Insert into #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptName\, BudgetSuperClassCode\, BudgetTypeCode\, BudgetClassCode\, Budgetnbr\, Budgetname\, BudgetStatusCode\, BudgetGroup\, BudgetGroupCode)  (SELECT DISTINCT BI.fiscalyear\,   BI.OrgCode\,   LEFT(BI.OrgCode\,7)\,  OD.OrgDeptName\,  BTC.budgetsuperclasscode\,  BTC.budgettypecode\,   BTC.budgetclasscode\,   BI.budgetnbr\,   BI.budgetname\,   BI.BudgetStatusCode\,   ''Loans To Students - Revolving''  as ''BudgetGroup''\,   ''7LNur'' as ''BudgetGroupCode''  from sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI   ON BI.budgettypecode = BTC.budgettypecode   AND BI.budgetclasscode = BTC.budgetclasscode   AND BI.fiscalyear = BTC.fiscalyear   AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY    WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4) GROUP BY OrgName\,  left(OrgCode\,7)) OD on LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel WHERE BTC.BudgetSuperClassCode  in (''ROF31''\, ''ROF35'')   AND BI.RFAcctngCode != ''R''  AND  BI.OrgCode IN (@orglevel10))  SELECT   BTC.OrgDeptCode\,  BTC.OrgDeptName\,  BTC.OrgCode\,  BTC.BudgetGroup\,  BTC.BudgetGroupCode\,  BTC.BudgetNbr\,  BTC.BudgetName\,  BTC.BudgetStatusCode\,  (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) as ''TYPE_CLASS''\,  SUM(CASE WHEN   (   FS.TranCode =''32''    AND FS.ObjSubObjCode = ''9788''   )   THEN (FS.SummaryAmt * -1) ELSE 0 END) AS ''FundBeginningBalance''\,  SUM(CASE WHEN   (--Revenue   ((FS.TranCode IN (''30''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73''))   OR (FS.Trancode = ''32'' and FS.ObjSubObjCode != ''9788''))   AND LEFT(FS.ObjSubObjCode\,1) = ''9''  )   THEN (FS.SummaryAmt * -1) ELSE 0 END) AS ''Revenue''\,  --Expenditures without encumberances SUM(CASE WHEN   (   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')   AND LEFT(FS.ObjSubObjCode\,1) != ''9''  )  THEN (FS.SummaryAmt*-1)ELSE 0 END)  as ''Expense''\,  Sum(Case WHEN           (--Revenue   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')    AND LEFT(FS.ObjSubObjCode\,1) = ''9'')   OR          (--Expenses   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')   AND LEFT(FS.ObjSubObjCode\,1) != ''9'') THEN (FS.SummaryAmt*-1) ELSE 0 END) as ''TotalActuals''\,  --Encumberances\, which are not included in the final balance SUM(CASE WHEN   FS.TranCode IN (''40''\, ''41''\,''42''\,''43''\,''51''\,''53'')  THEN (FS.SummaryAmt*-1)ELSE 0 END) AS ''Encumbrances''  FROM   #BudgetGroups BTC INNER JOIN sec.AcctngMonthTransSum FS          ON FS.BienniumYear = @bienniumyear          AND BTC.BudgetNbr = FS.BudgetNbr   WHERE           BTC.budgetGroupCode = @budgetgroup   --DATE LOGIC --regular transactions for acctngmonths up to now AND FS.BienniumYear = @bienniumyear  AND ((CONVERT(INT\, FS .Acctngmonth) <= @acctngmonth) /*Adds in trans  for Calendar June of even fiscal year that are posted with AcctgMonth 13 & 14 of the subsequent fiscal year */  OR (@evenoddfy = 0 AND @calmonth = ''6'' AND FS.Acctngmonth IN (''13''\,''14'') AND fs.fiscalyear = CONVERT(CHAR(4)\, @fiscalyear) ) /*--Adds in trans for biennium close months 24-26 when user selects last month (June) of biennium.*/  OR (@evenoddfy = 1 AND @calmonth = ''6'' AND  FS.Acctngmonth IN (''24''\,''25''\,''26'')) /*Adds in Budget Trans for  Calendar July of odd fisca','EDWAdminMart'),
('Report','Payroll Detail Download','2009-06-08','2009-07-28','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Alexis Chin','This download file includes the same data as the Budget Verification and Payment Verification reports as well as the drill through reports.  It can be viewed/saved in either an Excel (default) or CSV ','University Advancement','SELECT        Person.Name\, Person.IdNbr\, EmploymentStatus.EmploymentStatusCode\, EmploymentStatus.EmploymentStatusDesc\, Contact.HomePDC\, Contact.HomeDeptName\,                           EmploymentStatus.TravelCardInd\, Contact.PersonalCampusMailbox\, Contact.PrimaryUWEmailAddr\, EmploymentStatus.PrimaryEmploymentTypeDesc FROM            ODS_HEPPS.sec.Person  AS Person INNER JOIN                          ODS_HEPPS.sec.EmploymentStatus  AS EmploymentStatus ON Person.PersonKey = EmploymentStatus.PersonKey INNER JOIN                          ODS_HEPPS.sec.Contact  AS Contact ON Person.PersonKey = Contact.PersonKey WHERE        (EmploymentStatus.TravelCardInd = ''Y'') ORDER BY EmploymentStatus.EmploymentStatusCode DESC','EDWAdminMart'),
('Report','Stipend Recipients with Tax Deductions','2009-10-01','2009-11-20','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of employees who are only receiving Stipend payments and who have additional federal withholding tax deductions.','University Advancement','SELECT       AcctngMonth\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM        GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''1160'') AND (BienniumYear =@BienniumYear) GROUP BY   AcctngMonth ORDER BY                AcctngMonth','EDWAdminMart'),
('Report','Negative Pretax Reductions','2009-10-01','2009-11-20','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of employees whose pre-tax deduction balances are negative.','University Advancement','SELECT rao.FACILITY_CODE FacilityCode\,        rao.ROOM_NUMBER RoomNumber\,        rao.ORGANIZATION assignee_organization\,        rao.EMPLOYEE_ID assignee_eid\,        rao.Occupant_EID\,        ISNULL(s_occup.Name\, ''n/a'') Occupant_Name         FROM dbo.room_assignment_occupant rao LEFT JOIN dbo.Person s_occup      ON s_occup.IdNbr = rao.occupant_eid    WHERE rao.FACILITY_CODE = @facilitycode AND       rao.ROOM_NUMBER = @roomno AND       rao.ORGANIZATION = @assignorg AND       rao.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Negative Federal W/H Taxable Gross','2009-10-02','2009-11-21','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of employees whose Federal Withholding Gross balances are negative.','University Advancement','SELECT        YEAR(P.PayPeriodEndDate) AS PayYear\,         MONTH(P.PayPeriodEndDate) AS PayMonth\,         P.PayPeriodEndDate AS PaycycleEndDate\,        SUM(P.NetPayAmt) AS HeppsPayrollSum\,         CASE WHEN S.StateFiscalMonth < 10 THEN ''0'' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth\,             -- used in subreport param        SUBSTRING(S.StateFiscalBiennium\, 1\, 4) AS FisBien                                                                                                                           -- used in subreport param FROM ODS.sec.StandardTimeDimension AS S  INNER JOIN ODS.sec.PayrollResultSummary AS P   ON S.CalendarDate = P.PayPeriodEndDate GROUP BY          YEAR(P.PayPeriodEndDate)\, MONTH(P.PayPeriodEndDate)\, P.PayPeriodEndDate\, S.StateFiscalMonth\, SUBSTRING(S.StateFiscalBiennium\, 1\, 4) ORDER BY          P.PayPeriodEndDate','EDWAdminMart'),
('Report','Returning Retirees-Medicare Tax Only','2009-10-05','2009-11-24','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of Returning Retirees Employees who are only subject to Medicare taxation.','University Advancement','SELECT   ts.ts_year \,ts.ts_quarter \,yrqtr = CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) \,Qtr_desc =  CASE  WHEN ts.ts_quarter = 1 THEN ''Winter '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 2 THEN ''Spring '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 3 THEN ''Summer '' + CAST(ts.ts_year AS char(4))  WHEN ts.ts_quarter = 4 THEN ''Autumn '' + CAST(ts.ts_year AS char(4)) END \,Program = RTRIM(CASE WHEN dc.dept_abbr LIKE ''B %'' THEN SUBSTRING(dc.dept_abbr\,3\,6) ELSE dc.dept_abbr END) \,Program_full_name = RTRIM(dc.dept_full_nm) \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name \,ts.students_denied \,ts.starting_time \,ts.day_of_week \,ts.ending_time \,ts.pm_flag  FROM UWSDBDataStore.sec.time_schedule ts INNER JOIN UWSDBDataStore.sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM UWSDBDataStore.sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN UWSDBDataStore.sec.sr_dept_code dc  ON scc.curric_dept = dc.dept_code LEFT JOIN UWSDBDataStore.sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE CAST(ts.ts_year AS char(4)) + CAST(ts.ts_quarter AS char(1)) IN (@yrqtr)   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   AND ts.dept_abbrev IN(@curric)   AND ts.course_no IN(@crsno)   ORDER BY  ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','Supplemental Retirees with Pretax Reductions','2009-10-05','2009-11-24','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of employees who are only receiving Supplemental Retiree payments who have pretax deductions.','University Advancement','WITH  --CTE 1 Cohort(syskey\,cohort_yrqtr) AS ( SELECT   smm0.mm_system_key \,MIN(smm0.mm_year * 10 + smm0.mm_qtr)  FROM UWSDBDataStore.sec.sr_mini_master smm0 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp0  ON smm0.mm_year = smmdp0.mm_year  AND smm0.mm_qtr = smmdp0.mm_qtr  AND smm0.mm_proc_ind = smmdp0.mm_proc_ind  AND smm0.mm_student_no = smmdp0.mm_student_no  AND smmdp0.index1 =1  AND smmdp0.mm_branch =1 WHERE smmdp0.mm_major_abbr = ''B PRE''   AND smm0.mm_proc_ind = 2   AND ((smm0.mm_year <1998 AND smm0.mm_curr_credits >0) OR (smm0.mm_sea_st_funded+smm0.mm_sea_self_sus+smm0.mm_bot_st_funded+smm0.mm_bot_self_sus+smm0.mm_tac_st_funded+smm0.mm_tac_self_sus >0)) GROUP BY smm0.mm_system_key ) --CTE 2 \,First_CUSP_yrqtr(syskey\, CUSP_cohort_yrqtr\, Cohort_Type) AS ( SELECT   c.syskey \,c.cohort_yrqtr \,CASE WHEN smm00.mm_last_schl_type = 1 THEN ''Freshmen'' WHEN smm00.mm_last_schl_type IN(2\,3) THEN ''Transfer'' ELSE ''Error'' END FROM Cohort c INNER JOIN UWSDBDataStore.sec.sr_mini_master smm00  ON c.syskey = smm00.mm_system_key  AND c.cohort_yrqtr = (smm00.mm_year * 10 + smm00.mm_qtr)   AND smm00.mm_proc_ind = 2 --WHERE c.cohort_yrqtr IN(@cohort) --add this line back in if you want to restrict what cohorts you want to look at )  --CTE 3 \,Last_CUSP_yrqtr(syskey\, Last_CUSP_yrqtr) AS ( SELECT   smm1.mm_system_key \,MAX(smm1.mm_year * 10 + smm1.mm_qtr)  FROM UWSDBDataStore.sec.sr_mini_master smm1 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp1  ON smm1.mm_year = smmdp1.mm_year  AND smm1.mm_qtr = smmdp1.mm_qtr  AND smm1.mm_proc_ind = smmdp1.mm_proc_ind  AND smm1.mm_student_no = smmdp1.mm_student_no  AND smmdp1.index1 =1  AND smmdp1.mm_branch =1 WHERE smmdp1.mm_major_abbr = ''B PRE''   AND smm1.mm_proc_ind = 2   AND ((smm1.mm_year <1998 AND smm1.mm_curr_credits >0) OR (smm1.mm_sea_st_funded+smm1.mm_sea_self_sus+smm1.mm_bot_st_funded+smm1.mm_bot_self_sus+smm1.mm_tac_st_funded+smm1.mm_tac_self_sus >0)) GROUP BY smm1.mm_system_key ) --CTE 4 \,First_major_yrqtr(syskey\, First_major_yrqtr --\,Program\,Major ) AS ( SELECT  smm2.mm_system_key \,MIN(smm2.mm_year * 10 + smm2.mm_qtr) AS First_major_yrqtr --\,dc2.dept_abbr --\,smmdp2.mm_major_abbr FROM UWSDBDataStore.sec.sr_mini_master smm2 INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp2  ON smm2.mm_year = smmdp2.mm_year  AND smm2.mm_qtr = smmdp2.mm_qtr  AND smm2.mm_proc_ind = smmdp2.mm_proc_ind  AND smm2.mm_student_no = smmdp2.mm_student_no  AND smmdp2.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc2  ON smmdp2.mm_major_abbr = mc2.major_abbr  AND smmdp2.mm_pathway = mc2.major_pathway  AND mc2.major_last_yr IN(SELECT MAX(mc2a.major_last_yr)         FROM UWSDBDataStore.sec.Sr_major_code mc2a         WHERE smmdp2.mm_major_abbr = mc2a.major_abbr AND smmdp2.mm_pathway = mc2a.major_pathway) INNER JOIN UWSDBDataStore.sec.Sr_dept_code dc2  ON mc2.major_dept = dc2.dept_code  AND mc2.major_branch = dc2.dept_branch WHERE smm2.mm_proc_ind = 2   AND smmdp2.mm_deg_level <2   AND ((smm2.mm_year <1998 AND smm2.mm_curr_credits >0) OR (smm2.mm_sea_st_funded+smm2.mm_sea_self_sus+smm2.mm_bot_st_funded+smm2.mm_bot_self_sus+smm2.mm_tac_st_funded+smm2.mm_tac_self_sus >0))   AND mc2.major_dept NOT IN(864\,866\,883\,1032) GROUP BY  smm2.mm_system_key )   ------------------------------------ SELECT DISTINCT  cusp.syskey \,cohort.Cohort_Type \,cohort = cohort.CUSP_cohort_yrqtr \,cohort_acadyr = CASE WHEN RIGHT(cohort.CUSP_cohort_yrqtr\,1) IN (3\,4) THEN CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)) + ''-'' + CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)+1) WHEN RIGHT(cohort.CUSP_cohort_yrqtr\,1) IN (1\,2) THEN CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)-1) + ''-'' + CONVERT(char(4)\,LEFT(cohort.CUSP_cohort_yrqtr\,4)) ELSE ''Error'' END \,qtr =    CASE   WHEN smm.mm_qtr = 1 THEN ''Winter ''    WHEN smm.mm_qtr = 2 THEN ''Spring ''    WHEN smm.mm_qtr = 3 THEN ''Summer ''   WHEN smm.mm_qtr = 4 THEN ''Autumn ''   ELSE ''ERROR''  END + CONVERT(char(4)\, smm.mm_year) \,cusp.Last_CUSP_yrqtr \,major.First_major_yrqtr \,Program = dc.dept_full_nm \,dc.dept_abbr \,Major = major_full_nm \,mc.major_abbr \,mc.major_pathway  FROM First_CUSP_yrqtr cohort INNER JOIN Last_CUSP_yrqtr cusp  ON cohort.syskey = cusp.syskey INNER JOIN First_major_yrqtr major  ON cusp.syskey = major.syskey  AND cusp.Last_CUSP_yrqtr < major.First_major_yrqtr INNER JOIN UWSDBDataStore.sec.sr_mini_master smm  ON major.syskey = smm.mm_system_key  AND major.First_major_yrqtr = smm.mm_year * 10 + smm.mm_qtr INNER JOIN UWSDBDataStore.sec.sr_mini_master_deg_program smmdp  ON smm.mm_year = smmdp.mm_year  AND smm.mm_qtr = smmdp.mm_qtr  AND smm.mm_proc_ind = smmdp.mm_proc_ind  AND smm.mm_student_no = smmdp.mm_student_no  AND smmdp.mm_branch =1 INNER JOIN UWSDBDataStore.sec.sr_major_code mc  ON smmdp.mm_major_abbr = mc.major_abbr  AND smmdp.mm_pathway = mc.major_pathway  AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr)         FROM UWSDBDataStore.sec.Sr_major_code mc1        WHERE smmdp.mm_major_abbr = mc1.major_abbr AND smmdp.mm_pathway ','EDWAdminMart'),
('Report','Budget Verification Download','2009-10-01','2009-11-20','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Alexis Chin','The output file contains Budget Verification download details by PUC and Paycycles.','University Advancement','SELECT   ts.ts_year \,ts.ts_quarter \,d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id \,ts.sln \,ts.l_e_enroll as class_limit \,ts.current_enroll \,ts.space_available \,ts.course_title \,sci.fac_name  FROM sec.time_schedule ts INNER JOIN sec.sr_curric_code scc  ON scc.curric_abbr = ts.dept_abbrev                 AND scc.curric_last_yr *10 + scc.curric_last_qtr =(SELECT MAX(scc1.curric_last_yr *10 + scc1.curric_last_qtr) FROM sec.sr_curric_code scc1 WHERE scc1.curric_abbr = ts.dept_abbrev) INNER JOIN sec.sr_dept_code d  ON scc.curric_dept = d.dept_code LEFT JOIN sec.sr_course_instr sci  ON ts.ts_year = sci.fac_yr  AND ts.ts_quarter = sci.fac_qtr  AND ts.dept_abbrev = sci.fac_curric_abbr  AND ts.course_no = sci.fac_course_no  AND ts.course_branch = sci.fac_branch  AND ts.section_id = sci.fac_sect_id  WHERE ts.ts_year=@year   AND ts.ts_quarter=@Quarter   AND ts.course_branch=1   AND ts.delete_flag <> ''@''   ORDER BY   d.dept_full_nm \,ts.dept_abbrev \,ts.course_no \,ts.section_id','EDWAdminMart'),
('Report','Supplemental_Retirees_with_FWT','2009-10-02','2009-11-21','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Ann Wunderlin','This is a list of employees who are only receiving Supplemental Retiree payments who have federal withholding tax deductions.','University Advancement','--Report: Building Summary by OrgCode --Datasource: Get_Detail --History: --Date\, programmer: April 15\, 2012\, PBurger - To production.  Refactored code to conform to current UW  --practices and conventions.  Leaving the joins as the pre-ANSI standard. --D','EDWAdminMart'),
('Report','Fiscal Year Income and Expense Summary by OrgCode and Funding Source','2010-06-15','2010-08-04',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report template displays budgeted and actual amounts through the selected reporting period for the selected fiscal years summarized by budget category within the selected orgcodes.','Services & Resources','--search by name or eid  /*declare @findwho varchar(100)  SET @findwho = ''862008689'' --SET @findwho = ''Dinah''*/  DECLARE @fy char(4)\, @by char(4) SET @fy = CASE WHEN MONTH(GETDATE()) BETWEEN 7 AND 12 THEN YEAR(GETDATE()) +1 ELSE YEAR(GETDATE()) END SET @b','EDWAdminMart'),
('Report','Grant and Contract Deficit Report','2010-06-15','2010-08-04',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report is provided to assist departments in managing Grant and Contract budgets in compliance with the University of Washington Deficit Policy. A budgets is determined to be in deficit when the T','Services & Resources','SELECT DISTINCT  v.student_name\,  v.student_no\,                 a.appl_yr\,                 Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,  ar.req_major_abbr\,  mc.major_full_nm\,                 v.num_holds\,                 a.trans_gpa\,  v.tot_2yr_transfer\,  v.tot_4yr_transfer\,  v.tot_lowd_transfer\,  v.tot_upd_transfer\,  v.class\,  class_desc =   CASE    WHEN v.class = 1 THEN ''Freshman''    WHEN v.class = 2 THEN ''Sophomore''    WHEN v.class = 3 THEN ''Junior''    WHEN v.class = 4 THEN ''Senior''    WHEN v.class = 5 THEN ''Fifth Year''    WHEN v.class = 6 THEN ''Non-Matric''    WHEN v.class = 8 THEN ''Graduate''    WHEN v.class in (11\,12\,13\,14) THEN ''Professional''    ELSE convert(char(1)\,v.class)   END \,Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\, Paid_Date = (  Select max(ab.trans_dt)   from sec.sr_adm_stat_chg ab   where appl_status_new in (15\, 16)   and ab.system_key = a.system_key   and ab.appl_no = a.appl_no   and ab.appl_yr = a.appl_yr   and ab.appl_qtr = a.appl_qtr )\, MailCode = CASE WHEN mlc.mail_code IN (''UW''\, ''PB''\, ''BOR'') THEN mlc.mail_code ELSE ''None'' END    FROM sec.student_1 v  inner join sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON  a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr  and a.system_key = ar.system_key  and a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key  WHERE   a.appl_yr = @year  and a.appl_qtr = @Quarter   and a.appl_branch = 1  and convert(char(1)\,a.appl_type) in (''2''\,''4''\,''5''\,''R'')  --and (a.trans_gpa is null or a.trans_gpa = 0)  and a.appl_status in (12\,15\,16)                and v.class <> 6  and mc.major_pathway = 0','EDWAdminMart'),
('Report','Aid Authorized and Disbursed for Aid Year and Quarter','2010-06-15','2010-08-04','Director\, Student Financial Aid & Director\, Student Fiscal Services','Colin Sachs','Displays the dollar amount of aid authorized and disbursed\, and the difference between the two\, by student number and name for a given fund/budget for a specified quarter and aid year.   Report is use','Financial Resources','SELECT rau.FACILITY_CODE FacilityCode\,        rau.ROOM_NUMBER RoomNumber\,        rau.ORGANIZATION assignee_organization\,        rau.EMPLOYEE_ID assignee_eid\,        rau.functional_use_code\,        fuc.DESCRIPTION Functional_Use\,        rau.functional_use_percent         FROM dbo.room_assignment_use rau LEFT JOIN dbo.functional_use_code fuc      ON rau.functional_use_code = fuc.functional_use_code    WHERE rau.FACILITY_CODE = @facilitycode AND       rau.ROOM_NUMBER = @roomno AND       rau.ORGANIZATION = @assignorg AND       rau.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Journal Voucher Detail','2010-06-24','2010-08-13',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays the debits and credits associated with a given Journal Voucher number.','Services & Resources','SELECT       BienniumYear\,   SUM(OpenBalAmt) AS BeginningBalance\,   SUM(DebitSumAmt) AS DebitAmount\,   SUM(CreditSumAmt) AS CreditAmount FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') GROUP BY   BienniumYear ORDER BY                 BienniumYear','EDWAdminMart'),
('Report','Variable Reporting Period Transaction Summary','2011-05-12','2011-07-01',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays transaction detail for a selected budget or static MyFD budget list for a selected date range.','Services & Resources','SELECT DISTINCT v.student_name  \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END  \,v.system_key \,class =   CASE   WHEN v.class = 1 THEN ''Freshman''   WHEN v.class = 2 THEN ''Sophomore''   WHEN v.class = 3 THEN ''Junior''   WHEN v.class = 4 THEN ''Senior''   WHEN v.class = 5 THEN ''Fifth Year''   WHEN v.class = 6 THEN ''Non-Matric''   WHEN v.class = 8 THEN ''Graduate''   WHEN v.class = 11 THEN ''1st Year Professional''   WHEN v.class = 12 THEN ''2nd Year Professional''   WHEN v.class = 13 THEN ''3rd Year Professional''   WHEN v.class = 14 THEN ''4th Year Professional''   ELSE ''Unknown Class Status''  END \,v.admitted_for_yr \,admitted_for_qtr =   CASE   WHEN v.admitted_for_qtr = 1 THEN ''Winter''   WHEN v.admitted_for_qtr = 2 THEN ''Spring''   WHEN v.admitted_for_qtr = 3 THEN ''Summer''   WHEN v.admitted_for_qtr = 4 THEN ''Autumn''   ELSE ''Unknown Quarter''  END  \,v.tot_graded_attmp  \,uwb = (SELECT SUM(tc.course_credits)     FROM sec.transcript_courses_taken tc     WHERE tc.system_key = v.system_key AND tc.course_branch = 1     AND course_number <500 AND grade_system = 0) \,uwb_gpa = ( SELECT (SUM((CONVERT(DEC(2)\,grade)/10)*course_credits))/SUM(course_credits) FROM sec.transcript_courses_taken tc     WHERE tc.system_key = v.system_key AND tc.course_branch = 1    AND course_number <500 AND grade_system = 0 AND grade NOT IN (''I''\, ''W''\,''HW''\,''W3''\,''W4''\,''W5''\,''W6''\,''W7''\,'''')) \,v.tot_nongrd_earn \,gpa =   CASE   WHEN v.tot_graded_attmp > 0 THEN (v.tot_grade_points/v.tot_graded_attmp)   ELSE 0  END \,current_credits = (SELECT current_credits from sec.registration where  system_key = v.system_key AND regis_yr = @Year and regis_qtr = 4) \,mc.major_name \,addr.e_mail_ucs \,addr.local_line_1 \,addr.local_line_2 \,addr.local_city \,addr.local_state \,addr.local_zip_5  FROM sec.student_1 v  INNER JOIN sec.student_1_college_major cm  ON v.system_key = cm.system_key  INNER JOIN sec.sr_major_code mc  ON cm.major_abbr = mc.major_abbr  AND cm.pathway = mc.major_pathway INNER JOIN sec.registration r ON v.system_key = r.system_key  LEFT JOIN sec.transcript t  ON v.system_key = t.system_key LEFT JOIN sec.addresses addr  ON v.system_key = addr.system_key  WHERE r.regis_yr = @Year AND r.regis_qtr = @Quarter AND r.enroll_status = 12 AND cm.major_abbr = ''B BUS'' AND (SELECT SUM(tc.course_credits) FROM sec.transcript_courses_taken tc WHERE tc.system_key = v.system_key AND tc.course_branch = 1 AND course_number <500 AND grade_system = 0) >= 30 order by gpa desc','EDWAdminMart'),
('Report','Major Codes','2011-05-25','2011-07-14','University Registrar and Chief Officer of Enrollment Information Services','Randy Byers','Displays information about major codes for selected departments. Useful for seeing which majors are controlled by a department or finding the CIP code associated with a major. Required parameters are ','Financial Resources','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int    \, @budgetperiod  char(1) SET @orglevel10 = ''2540578000'' SET @budgetgroup = ''5GC'' SET @calmonth = ''6'' SET @calyear = 2010 SET @budgetperiod = ''f''*/  DECLARE @fiscalyear char(4) SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12       THEN @calyear + 1 ELSE @calyear END   DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND                        @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6 WHEN @fiscalyear % 2 = 1 AND @calmonth BETWEEN 1 AND                        5 THEN @calmonth + 18 WHEN @fiscalyear % 2 = 0 AND @calmonth BETWEEN 7 AND                        12 THEN @calmonth - 6 ELSE @calmonth + 21 END  DECLARE @bienniumyear char(4) SET              @bienniumyear = (@fiscalyear - (@fiscalyear % 2) - 1)   DECLARE @fiscalYearToUse char(4) SELECT @fiscalYearToUse = CONVERT(char(4)\, (CASE WHEN (CONVERT(int\,@fiscalyear)%2)=0   AND CONVERT(int\,@fiscalyear) <   (SELECT max(CONVERT(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN CONVERT(varchar(4)\,CONVERT(int\,@fiscalyear)+1)            ELSE @fiscalyear end))   DECLARE @evenoddfy int SET @evenoddfy = convert(int\,@fiscalyear)%2   IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups  CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\,  BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\, Budgetname varchar(50)\, BudgetStatusCode char(1)\, RevenueSource char(2)\, RevenueSourceDesc varchar(30)\,  RevenueClass char(4)\, RevenueClassDesc varchar(30)\,  PrincipalInvestigatorID char(9)\, PrincipalInvestigator varchar(50)\, ParentSubFlag char(1)\, BudgetGroup varchar(50)\,  BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN   INSERT INTO   #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptname\, BudgetSuperClassCode\, BudgetTypeCode\,  BudgetClassCode\, Budgetnbr\,  Budgetname\, BudgetStatusCode\, RevenueSource\, RevenueSourceDesc\, RevenueClass\, RevenueClassDesc\, PrincipalInvestigatorID\, PrincipalInvestigator\, ParentSubFlag\, BudgetGroup\, BudgetGroupCode)  (SELECT   DISTINCT BI.FiscalYear\, BI.OrgCode \, Left(BI.OrgCode\,7) ''OrgDeptCode'' \, OD.OrgDeptName\, BTC.budgetsuperclasscode\, BTC.budgettypecode\, BTC.budgetclasscode\, BI.budgetnbr\, BI.budgetname\,    BI.BudgetStatusCode\, BI1.RevenueSource\, BI1.RevenueSourceDesc\,BI1.RevenueClass\, BI1.RevenueClassDesc\,    BI1.PrincipalInvestigatorID\, BI1.PrincipalInvestigator\,     CASE WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\,     BI1.ParentCapitalProject)) = BI.Budgetnbr THEN ''P''     WHEN rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\, BI1.ParentCapitalProject)) != BI.Budgetnbr     AND rtrim(ISNULL(ISNULL(BI1.ParentGrant\, LEFT(BI1.ParentBudgetNbr\, 2) + RIGHT(BI1.ParentBudgetNbr\, 4))\, BI1.ParentCapitalProject)) != '''' THEN ''S'' ELSE '''' END AS ''ParentSubFlag''\,    ''Grants and Contracts'' AS ''BudgetGroup''\,     ''5GC'' AS ''BudgetGroupCode'' FROM sec.dimBudgetTypeClassFY BTC  INNER JOIN sec.dimBudgetIndexFY BI  ON BI.budgettypecode = BTC.budgettypecode   AND BI.budgetclasscode = BTC.budgetclasscode   AND BI.fiscalyear = BTC.fiscalyear   AND BI.fiscalyear = @fiscalYearToUse  LEFT JOIN (SELECT     BudgetNbr FROM ODS.sec.BudgetIndexBudgetOfficeFlag            WHERE BienniumYear = @bienniumyear AND index1 = ''2'' AND BudgetOfficeFlag IN (''2''\, ''3''\, ''4''\, ''5''\, ''6'')) BOF  ON BI.Budgetnbr = BOF.Budgetnbr LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY     WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4)  GROUP BY OrgName\,  left(OrgCode\,7)) OD  ON LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel INNER JOIN ODS.sec.BudgetIndex BI1    ON BI1.BudgetNbr = BI.BudgetNbr     AND BI1.BienniumYear = @bienniumyear  WHERE (BI.budgetTypecode + BI.budgetClassCode != ''0552'')  AND BI.RFAcctngCode = ''R''     AND BTC.BudgetSuperClassCode = ''ROF31''     AND BI.OrgCode IN (@orglevel10))  SELECT     BTC.OrgCode\, BTC.OrgDeptCode\, BTC.OrgDeptName\, BTC.BudgetGroup\, BTC.BudgetGroupCode\, BTC.BudgetNbr\, BTC.BudgetName\,    (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) AS ''TYPE_CLASS''\, BTC.BudgetStatusCode\, BTC.ParentSubFlag\,    BTC.RevenueSource\, BTC.RevenueSourceDesc\,BTC.RevenueClass\, BTC.RevenueClassDesc\,    BTC.PrincipalInvestigator\, BTC.PrincipalInvestigatorID\,   /*Beginning Balance */   SUM(CASE WHEN FS.TranCode IN (''24'') AND fs.BudgetPermTempCryFwdCode != ''C'' AND cast(FS.Acctngmonth as int) < 3    THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''BegBalance''\,                                                     /*New Awards and Adjustments*/   SUM(CASE WHEN FS.TranCode IN (''25'') AND fs.BudgetPermTempCryFwdCode != ''C'' AND CONVERT(INT\, fs.fiscalyear) <=  CONVERT(INT\, @fiscalyear)    THEN (FS.SummaryAmt * -','EDWAdminMart'),
('Report','Gift Balance Summary by Spending Restriction','2010-08-03','2010-09-22',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report summarizes gift balances for a user selected time period for chosen Gift spending restrictions (indentified by budget prefix).','Services & Resources','SELECT    AcctngMonth\,  SUM(DebitSumAmt) AS DebitAmount\,   SUM(CreditSumAmt) AS CreditAmount FROM           GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'' and BienniumYear IN (@bienYear) )  GROUP BY   AcctngMonth ORDER BY                  AcctngMonth','EDWAdminMart'),
('Report','Gift Balance Detail by Spending Restriction and OrgCode','2010-08-10','2010-09-29',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report displays Gift budget level activity for selected spending restriction / budget prefixes by Org Department for the user selected time period and Organization structure.','Services & Resources','SELECT    s2di.deg_branch\,s2di.deg_earned_yr \,s2di.deg_earned_qtr \,s2di.deg_status \,s2di.deg_title \,v.student_name_lowc \,s1cm.major_abbr \,addr.e_mail_ucs \,v.s1_ins_sevis_id \,v.s1_visa_type \,v.student_no \,v.system_key \,DegQuarter = CASE   WHEN s2di.deg_earned_qtr =1 THEN ''Winter''  WHEN s2di.deg_earned_qtr =2 THEN ''Spring''  WHEN s2di.deg_earned_qtr =3 THEN ''Summer''  WHEN s2di.deg_earned_qtr =4 THEN ''Fall''  ELSE ''--''   END \,DegApplication_Status = CASE   WHEN s2di.deg_status =3 THEN ''Applied''  WHEN s2di.deg_status =4 THEN ''Applied''  WHEN s2di.deg_status =5 THEN ''Applied''  WHEN s2di.deg_status =9 THEN ''Granted''  ELSE ''--''   END FROM         sec.student_1 v INNER JOIN                       sec.student_1_college_major s1cm         ON v.system_key = s1cm.system_key INNER JOIN                       sec.student_2_uw_degree_info s2di          ON v.system_key = s2di.system_key INNER JOIN                       sec.addresses  addr         ON v.system_key = addr.system_key  WHERE      (s2di.deg_branch = 1)  AND (s2di.deg_status IN(3\,4\,5\,9))  AND (s2di.deg_earned_yr = @year)  AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> ''''  ORDER BY v.student_name_lowc','EDWAdminMart'),
('Report','Cashier Activity Report - Payments Received','2010-11-19','2011-01-08','Director\, Student Fiscal Serivces','Colin Sachs','Displays cashier payment transactions by student number\, payment amount\, bank deposit reference number\, time of transaction and amount tendered by cashier ID.  Useful for verifying cashier daily balan','Financial Resources','SELECT    s2di.deg_branch\,s2di.deg_earned_yr \,s2di.deg_earned_qtr \,s2di.deg_status \,s2di.deg_title \,v.student_name_lowc \,s1cm.major_abbr \,addr.e_mail_ucs \,v.s1_ins_sevis_id \,v.s1_visa_type \,v.student_no \,v.system_key \,DegQuarter = CASE   WHEN s2di.deg_earned_qtr =1 THEN ''Winter''  WHEN s2di.deg_earned_qtr =2 THEN ''Spring''  WHEN s2di.deg_earned_qtr =3 THEN ''Summer''  WHEN s2di.deg_earned_qtr =4 THEN ''Fall''  ELSE ''--''   END \,DegApplication_Status = CASE   WHEN s2di.deg_status =3 THEN ''Applied''  WHEN s2di.deg_status =4 THEN ''Applied''  WHEN s2di.deg_status =5 THEN ''Applied''  WHEN s2di.deg_status =9 THEN ''Granted''  ELSE ''--''   END FROM         sec.student_1 v INNER JOIN                       sec.student_1_college_major s1cm         ON v.system_key = s1cm.system_key INNER JOIN                       sec.student_2_uw_degree_info s2di          ON v.system_key = s2di.system_key INNER JOIN                       sec.addresses  addr         ON v.system_key = addr.system_key  WHERE      (s2di.deg_branch = 1)  AND (s2di.deg_status IN(3\,4\,5\,9))  AND (s2di.deg_earned_yr = @year)  AND (s2di.deg_earned_qtr IN (@Quarter)) AND v.s1_visa_type <> ''''  ORDER BY v.student_name_lowc','EDWAdminMart'),
('Report','Daily Aid and Refund Check Activity File','2010-12-13','2011-02-01','Director\, Student Financial Aid','Colin Sachs','Displays check register activity file for aid and refund checks issued on a given date. Useful to monitor or audit check register activity. (Similar to: SA70200-D-01)','Financial Resources','SELECT    r.ReportKey\, r.ReportHidden\,    r.ReportFolder\, r.ReportName\, --r.ReportTypeCd\,     lr.ReportFolder AS LinkedReportFolder\,     lr.ReportName AS LinkedReportName\,      Max(el.TimeStart) AS LastRunDate\,     Count(el.ExecutionLogKey) AS Executions\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN 1 ELSE 0 END) AS Succeeded\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' OR sc.StatusDesc Is Null THEN 0 ELSE 1 END) AS Failed\,      Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN DateDiff(ms\,el.TimeStart\,el.TimeEnd)        ELSE 0 END) AS TotalRunMSs\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN el.ByteCount ELSE 0 END) AS TotalBytes\,     Sum(CASE WHEN sc.StatusDesc = ''rsSuccess'' THEN el.[RowCount] ELSE 0 END) AS TotalRows  FROM sec.RSReport AS r  LEFT JOIN sec.RSReport AS lr ON r.LinkedReportUID = lr.ReportUID  LEFT JOIN sec.RSExecutionLog AS el ON r.ReportKey = el.ReportKey     AND DATEDIFF(day\, el.TimeStart\, GetDate()) <= @days LEFT JOIN sec.RSExecStatus AS sc ON el.StatusKey = sc.StatusKey  WHERE r.ReportKey > 0 --AND r.ReportDeleted = 0 AND r.ReportName Not Like ''%_sub''  GROUP BY r.ReportKey\, r.ReportHidden\, r.ReportFolder\, r.ReportName\, lr.ReportFolder\, lr.ReportName ORDER BY r.ReportFolder\, r.ReportHidden\, r.ReportName','EDWAdminMart'),
('Report','(not currently deployed)','2011-02-02','2011-03-24','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','Dinah Mite Millikin & Eric Rucker','This report displays employees associatied with the selected home department OrgCode.','Healthcare','SELECT DISTINCT s1.system_key\, s1.student_no\, s1.student_name\, a.appl_status\, aps.appl_stat_descrip\, Appl_Qtr =  CASE   WHEN a.appl_qtr = 1 THEN ''Winter''   WHEN a.appl_qtr = 2 THEN ''Spring''   WHEN a.appl_qtr = 3 THEN ''Summer''   WHEN a.appl_qtr = 4 THEN ''Autumn''  END\, a.appl_yr\, a.appl_type\, Appl_level =    CASE       when a.appl_type = ''1'' then ''FR''       when a.appl_type = ''2'' then ''UG 2yr''       when a.appl_type = ''4'' then ''UG 4yr''       when a.appl_type = ''6'' OR a.appl_type = ''R'' then ''UG (Returning)''       when a.appl_type = ''5'' then ''5YR''       when a.appl_type = ''N''OR a.appl_type = ''P'' then ''NM''       when a.appl_type = ''7'' then ''GR (Returning)''       when a.appl_type = ''G'' then ''GR (Gradute)''       when a.appl_type = ''E'' then ''GNM''       when a.appl_type = ''P'' then ''PRO''       ELSE ''No Appl Type''    END\, a.appl_rcvd_dt\, ar.req_major_abbr\, cm.major_abbr\, r.advising_date\, r.advising_type\, AdviseType = CASE WHEN r.advising_type= ''O'' THEN ''Orientation'' Else ''Other'' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a  on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr  and a.appl_qtr = ar.appl_qtr  and a.appl_no = ar.appl_no  and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps  on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm  on a.system_key = cm.system_key  and a.appl_no = cm.appl_no  and a.appl_qtr = cm.appl_qtr  and a.appl_yr = cm.appl_yr  and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r  ON a.system_key = r.system_key  AND a.appl_yr = r.regis_yr  AND a.appl_qtr = r.regis_qtr  AND r.enroll_status = 12  WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN (''2''\,''4''\,''5''\,''6''\,''N''\,''R'') AND a.appl_status IN (15\,16) and (ar.req_major_abbr = ''B PRE'' or cm.major_abbr = ''B PRE'')','EDWAdminMart'),
('Report','Consolidated Budget Status Report R3','2011-02-23','2011-04-14',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','Exec Summary','Services & Resources','SELECT DISTINCT s1.system_key\, s1.student_no\, s1.student_name\, a.appl_status\, aps.appl_stat_descrip\, Appl_Qtr =  CASE   WHEN a.appl_qtr = 1 THEN ''Winter''   WHEN a.appl_qtr = 2 THEN ''Spring''   WHEN a.appl_qtr = 3 THEN ''Summer''   WHEN a.appl_qtr = 4 THEN ''Autumn''  END\, a.appl_yr\, a.appl_type\, Appl_level =    CASE       when a.appl_type = ''1'' then ''FR''       when a.appl_type = ''2'' then ''UG 2yr''       when a.appl_type = ''4'' then ''UG 4yr''       when a.appl_type = ''6'' OR a.appl_type = ''R'' then ''UG (Returning)''       when a.appl_type = ''5'' then ''5YR''       when a.appl_type = ''N''OR a.appl_type = ''P'' then ''NM''       when a.appl_type = ''7'' then ''GR (Returning)''       when a.appl_type = ''G'' then ''GR (Gradute)''       when a.appl_type = ''E'' then ''GNM''       when a.appl_type = ''P'' then ''PRO''       ELSE ''No Appl Type''    END\, a.appl_rcvd_dt\, ar.req_major_abbr\, cm.major_abbr\, r.advising_date\, r.advising_type\, AdviseType = CASE WHEN r.advising_type= ''O'' THEN ''Orientation'' Else ''Other'' END FROM UWSDBDataStore.sec.student_1 s1 INNER JOIN UWSDBDataStore.sec.sr_adm_appl a  on s1.system_key = a.system_key INNER JOIN UWSDBDataStore.sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr  and a.appl_qtr = ar.appl_qtr  and a.appl_no = ar.appl_no  and a.system_key = ar.system_key INNER JOIN UWSDBDataStore.sec.sys_tbl_72_appl_status aps  on a.appl_status = cast(aps.table_key as int) LEFT JOIN UWSDBDataStore.sec.sr_adm_appl_college_major cm  on a.system_key = cm.system_key  and a.appl_no = cm.appl_no  and a.appl_qtr = cm.appl_qtr  and a.appl_yr = cm.appl_yr  and a.appl_branch = cm.branch LEFT JOIN UWSDBDataStore.sec.registration r  ON a.system_key = r.system_key  AND a.appl_yr = r.regis_yr  AND a.appl_qtr = r.regis_qtr  AND r.enroll_status = 12  WHERE a.appl_branch = 1 and a.appl_yr = @Year and a.appl_qtr = @Quarter and a.appl_type IN (''2''\,''4''\,''5''\,''6''\,''N''\,''R'') AND a.appl_status IN (15\,16) and (ar.req_major_abbr = ''B PRE'' or cm.major_abbr = ''B PRE'')','EDWAdminMart'),
('Report','Paid FTE by Funding Source','2011-04-14','2011-06-03','Dan Schaaf','Dinah Mite Millikin\, Eric Rucker\, & Phillip Burger','This report displays employees paid from budgets within the selected OrgCode by object subobject\, employee type\, or by Enterprise Employee Group. Results include only the portion of pay and FTE associ','Services & Resources','SELECT DISTINCT                        Person.PersonKey\, Person.Name\, Person.PreferredName\, Person.FirstMiddleLastName\, Person.UWNetId\, Contact.PrimaryTitle\,                        Contact.PrimaryDeptName\, Contact.PrimaryWorkPhone\, Contact.PrimaryWorkPhoneExt\, Contact.HomeDeptCampusMailbox\, Contact.HomeDeptName\,                        Contact.HomeDeptOrgCode\, Contact.CollegeOrgCode\, Contact.CollegeOrgName\, Contact.AltTitle\, Contact.AltDeptName\,                        Contact.PersonalCampusMailbox\, Contact.HomePhone\, Contact.PrimaryUWEmailAddr\, Contact.AltUWEmailAddr\, Contact.OnOffCampusCode\,                        Contact.OnOffCampusDesc\, Person.IdNbr\, Contact.DirectoryInfoReleaseCode\, Contact.DirectoryInfoReleaseDesc\, ODS_HEPPS.sec.Appointment .EndDate\,                        ODS_HEPPS.sec.Appointment .DeptOrgCode\, ODS_HEPPS.sec.Appointment .DeptOrgName\, ODS_HEPPS.sec.Appointment .JobClassCode\, ODS_HEPPS.sec.Appointment .JobClass\, ODS_HEPPS.sec.Appointment .Status\,                        ODS_HEPPS.sec.Appointment .StatusCode\, ODS_HEPPS.sec.Appointment .ApptTerm\, ODS_HEPPS.sec.Appointment .PercentOfFulltime\, ODS_HEPPS.sec.Appointment .PayCycleSchedule\,                        ODS_HEPPS.sec.Appointment .FTE\, Contact.AcademicHomeDeptOrgCode\, Contact.AcadmicHomeDeptName\, ODS_HEPPS.sec.Appointment .PaidApptCode\,                        ODS_HEPPS.sec.Appointment .PaidApptCodeDesc\, ODS_HEPPS.sec.JobClassification .PayRateCode\, ODS_HEPPS.sec.JobClassification .PayRateDesc\, ODS_HEPPS.sec.JobClassification .ECSCode\,                        ODS_HEPPS.sec.JobClassification .ECSDesc\, ODS_HEPPS.sec.JobClassification .AcademicGroupCode\, ODS_HEPPS.sec.JobClassification .AcademicGroupDesc FROM         ODS_HEPPS.sec.Person  AS Person INNER JOIN                       ODS_HEPPS.sec.Contact  AS Contact ON Person.PersonKey = Contact.PersonKey INNER JOIN                       ODS_HEPPS.sec.Appointment  ON Person.PersonKey = ODS_HEPPS.sec.Appointment .PersonKey INNER JOIN                       ODS_HEPPS.sec.JobClassification  ON ODS_HEPPS.sec.Appointment .JobClassCode = ODS_HEPPS.sec.JobClassification .JobClassCode WHERE     (ODS_HEPPS.sec.Appointment .StatusCode = ''A'') AND (Contact.PersonalCampusMailbox <> 351272) AND (ODS_HEPPS.sec.Appointment .ECSCode != ''R'') ORDER BY Person.Name','EDWAdminMart'),
('Report','Salary and Wage Expense Detail','2011-09-09','2011-10-29',' Dan Schaaf','Dinah Mite Millikin & Eric Rucker','This report shows detail of an employee''s pay for the selected reporting period\, regardless of orgcode or funding source. Results include salary expense transfers.','Services & Resources','SELECT             GLProcessingDate\,          TransBatchNbr AS FASRunNbr\,          TransTypeCode AS TransCode\,          SUM(RecordCount) RecordCount\,         SUM(DebitSumAmt) AS Debit\,          SUM(CreditSumAmt) AS Credit FROM                  GLDataMart.sec.TransGLSummary WHERE             (GLAccountCode = ''1160'') AND (BienniumYear = @bienyr) AND (AcctngMonth =  @acctmonth) GROUP BY         AcctngMonth\,         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode ORDER BY         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode','EDWAdminMart'),
('Report','Research Awards','2011-08-01','2011-09-20','Jeff Cheek','John Peca-Medlin','This report lists awards related to research\, fellowships\, and other externally sponsored programs allocated to the University of Washington. These awards\, represented by a Funding Action number (eFA#','Services & Resources','SELECT             GLProcessingDate\,          TransBatchNbr AS FASRunNbr\,          TransTypeCode AS TransCode\,          SUM(RecordCount) RecordCount\,         SUM(DebitSumAmt) AS Debit\,          SUM(CreditSumAmt) AS Credit FROM                  GLDataMart.sec.TransGLSummary WHERE             (GLAccountCode = ''1160'') AND (BienniumYear = @bienyr) AND (AcctngMonth =  @acctmonth) GROUP BY         AcctngMonth\,         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode ORDER BY         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode','EDWAdminMart'),
('Report','Minor Codes','2011-06-02','2011-07-22','University Registrar and Chief Officer of Enrollment Information Services','Randy Byers','Displays information about major codes for selected departments. Useful for looking up minor codes for declaring a student''s minor. Required parameters are college and department.','Financial Resources','SELECT ''UW'' as UW\,    mm.mm_year as AcadYr\,     CASE        WHEN mm.mm_class=''06'' THEN 4       WHEN mm.mm_class<''06'' THEN 1       WHEN mm.mm_class=''08'' THEN 2       ELSE 3                 END as ClassSort\,     CASE        WHEN mm.mm_class=6 THEN ''Non-matric''       WHEN mm.mm_class<6 THEN ''Undergraduate''       WHEN mm.mm_class=''08'' THEN ''Graduate''       ELSE ''Professional''    END as ClassGrouping\,    COUNT(mm.mm_system_key) as HeadCount  FROM sec.sr_mini_master mm Where mm.mm_year > Year(getdate())-10    and mm.mm_qtr = @Quarter    and mm.mm_proc_ind = 2    and (mm.mm_sea_st_funded + mm.mm_sea_self_sus +    mm.mm_bot_st_funded + mm.mm_bot_self_sus +    mm.mm_tac_st_funded + mm.mm_tac_self_sus) > 0 GROUP BY mm.mm_year \, mm.mm_qtr \,  CASE        WHEN mm.mm_class=''06'' THEN 4       WHEN mm.mm_class<''06'' THEN 1       WHEN mm.mm_class=''08'' THEN 2       ELSE 3                 END \, CASE        WHEN mm.mm_class=6 THEN ''Non-matric''       WHEN mm.mm_class<6 THEN ''Undergraduate''       WHEN mm.mm_class=''08'' THEN ''Graduate''       ELSE ''Professional''    END ORDER BY AcadYr\, ClassSort','EDWAdminMart'),
('Report','Curriculum Codes','2011-06-07','2011-07-27','University Registrar and Chief Officer of Enrollment Information Services','Randy Byers','Displays information about curriculum codes for selected departments. Useful for seeing which curricula are controlled by a department or for seeing what CIP code is associated with a curriculum. Requ','Financial Resources','SELECT  * FROM    Report WHERE ReportCodeNbr = @rptcd','EDWAdminMart'),
('Report','Research Proposals','2011-08-02','2011-09-21','Jeff Cheek','John Peca-Medlin','This report lists awards related to research\, fellowships\, and other externally sponsored programs allocated to the University of Washington. These awards\, represented by a Funding Action number (eFA#','Services & Resources','SELECT             GLProcessingDate\,          TransBatchNbr AS FASRunNbr\,          TransTypeCode AS TransCode\,          SUM(RecordCount) RecordCount\,         SUM(DebitSumAmt) AS Debit\,          SUM(CreditSumAmt) AS Credit FROM                  GLDataMart.sec.TransGLSummary WHERE             (GLAccountCode = ''1160'') AND (BienniumYear = @bienyr) AND (AcctngMonth =  @acctmonth) GROUP BY         AcctngMonth\,         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode ORDER BY         GLProcessingDate\,         TransBatchNbr\,         TransTypeCode','EDWAdminMart'),
('Report','eFECS Effort Reporting Retroactive Salary Adjustment Report','2011-09-07','2011-10-27','Dan Schaaf','Phillip Burger\, Eric Rucker\,  Dinah Mite Millikin\, & Kirk Udovich','This report displays salary transfers processed in MyFinancial.desktop that posted to the Financial Accounting System (FAS) during the selected period\, i.e.\, transaction posting date range\, for employ','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status \, s.appl_stat_descrip   \,addr.local_line_1  \, addr.local_line_2  \, addr.local_city  \, addr.local_state  \, addr.local_zip_5  \, addr.local_phone_num   \, addr.perm_line_1 \, addr.perm_line_2 \, addr.perm_city \, addr.perm_state \, addr.perm_zip_5 \, addr.perm_phone_num  \,st30hs.high_school_name  \,Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end  FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key  WHERE appl_yr IN(@Year)    AND appl_qtr IN (@Quarter)        AND appl_branch = @branch   AND addr.perm_state IN (@State)','EDWAdminMart'),
('Report','Performance Evaluation Metrics -  Administrative University Units','2011-09-30','2011-11-19','Todd Mildon','Dinah Mite Millikin & Eric Rucker','This report displays Administrative Unit metric data for the latest completed fiscal year by budget category for the selected OrgCode(s). Additionally\, a 5 year history for each orgcode is provided wh','Services & Resources','SELECT        YEAR(P.PaycycleEndDate) AS PayYear\,         MONTH(P.PaycycleEndDate) AS PayMonth\,         P.PaycycleEndDate\,         SUM(P.NetPayAmt) AS HeppsPayrollSum\,         CASE WHEN S.StateFiscalMonth < 10 THEN ''0'' + S.StateFiscalMonth ELSE S.StateFiscalMonth END AS StateFiscalMonth\,             -- used in subreport param        SUBSTRING(S.StateFiscalBiennium\, 1\, 4) AS FisBien                                                                                                                           -- used in subreport param FROM                ODS.sec.StandardTimeDimension AS S INNER JOIN        ODS_HEPPS.sec.PaymentHistory  AS P ON S.CalendarDate = P.PaycycleEndDate GROUP BY          YEAR(P.PaycycleEndDate)\, MONTH(P.PaycycleEndDate)\, P.PaycycleEndDate\, S.StateFiscalMonth\, SUBSTRING(S.StateFiscalBiennium\, 1\, 4) ORDER BY          P.PaycycleEndDate','EDWAdminMart'),
('Report','Faculty Effort Certification (FEC) Dashboard','2011-10-03','2011-11-22','Executive Director\, Management Accounting and Analysis','Dinah Mite Millikin\, Eric Rucker & Kirk Udovich','FEC Dashboard','Services & Resources','SELECT DISTINCT v.student_name \, v.student_no \, a.appl_yr \, Appl_Qtr = CASE  WHEN a.appl_qtr = 1 THEN ''Winter''  WHEN a.appl_qtr = 2 THEN ''Spring''  WHEN a.appl_qtr = 3 THEN ''Summer''  WHEN a.appl_qtr = 4 THEN ''Autumn''  END \, ar.req_major_abbr \, mc.major_full_nm \, v.num_holds \, a.trans_gpa \, v.tot_2yr_transfer \, v.tot_4yr_transfer \, v.tot_lowd_transfer \, v.tot_upd_transfer \, v.class \, class_desc = CASE  WHEN v.class = 1 THEN ''Freshman''  WHEN v.class = 2 THEN ''Sophomore''  WHEN v.class = 3 THEN ''Junior''  WHEN v.class = 4 THEN ''Senior''  WHEN v.class = 5 THEN ''Fifth Year''  WHEN v.class = 6 THEN ''Non-Matric''  WHEN v.class = 8 THEN ''Graduate''  WHEN v.class in (11\,12\,13\,14) THEN ''Professional''  ELSE CONVERT(char(1)\,v.class)  END \, Appl_level = CASE  WHEN a.appl_type = ''1'' THEN ''FR''  WHEN a.appl_type = ''2'' THEN ''UG 2yr''  WHEN a.appl_type = ''4'' THEN ''UG 4yr''  WHEN a.appl_type = ''6'' OR a.appl_type = ''R'' THEN ''UG (Returning)''  WHEN a.appl_type = ''5'' THEN ''5YR''  WHEN a.appl_type = ''N'' OR a.appl_type = ''P'' THEN ''NM''  WHEN a.appl_type = ''7'' THEN ''GR (Returning)''  WHEN a.appl_type = ''G'' THEN ''GR (Gradute)''  WHEN a.appl_type = ''E'' THEN ''GNM''  WHEN a.appl_type = ''P'' THEN ''PRO''  ELSE ''No Appl Type''  END \, Paid_Date = (  SELECT MAX(ab.trans_dt)   FROM sec.sr_adm_stat_chg ab   WHERE appl_status_new in (15\, 16)   AND ab.system_key = a.system_key   AND ab.appl_no = a.appl_no   AND ab.appl_yr = a.appl_yr   AND ab.appl_qtr = a.appl_qtr  ) \, MailCode = mlc.mail_code    FROM sec.student_1 v  INNER JOIN sec.sr_adm_appl a ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_req_col_major ar ON a.appl_yr = ar.appl_yr   AND a.appl_qtr = ar.appl_qtr  AND a.system_key = ar.system_key  AND a.appl_no = ar.appl_no INNER JOIN sec.sr_major_code mc ON ar.req_major_abbr = mc.major_abbr LEFT OUTER JOIN sec.sr_adm_appl_mail_codes AS mlc ON v.system_key = mlc.system_key  WHERE a.appl_yr = @year  AND a.appl_qtr = @Quarter  AND a.appl_branch = 1  AND CONVERT(char(1)\,a.appl_type) in (''2''\,''4''\,''5''\,''R'')   --AND (a.trans_gpa is null or a.trans_gpa = 0)   AND a.appl_status in (12\,15\,16)  AND v.class <> 6  AND mc.major_pathway = 0 ','EDWAdminMart'),
('Report','FEC Dashboard Report by OrgCode','2011-10-03','2011-11-22','Executive Director\, Management Accounting and Analysis','Phillip Burger\, Dinah Mite Millikin & Kirk Udovich','This report displays an FEC status dashboard across all FEC cycles for the OrgCode you select.','Services & Resources','SELECT    AcctngMonth\,  TransBatchNbr\,   TransTypeCode\,  TransDate\,  TransDebitAmt\,   TransCreditAmt\,                  TransRef2Text\,  GLProcessingDate FROM        GLDataMart.sec.TransGLPayrollCash WHERE       ( BienniumYear = @BienYear) AND (TransBatchNbr = @FasNo) ORDER BY                GLProcessingDate','EDWAdminMart'),
('Report','Performance Evaluation Metrics - Academic Units','2011-10-31','2011-12-20','Todd Mildon','Dinah Mite Millikin & Eric Rucker','This report displays Program Evaluation Metric Data for Academic Units for the latest completed 5 fiscal years (when available) for the selected Org Dean. Export this report to Excel by choosing the E','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Degrees and Organization Associations','2011-12-19','2012-02-07','Office of Planning & Budgeting','Alexis Chin','List of University degrees for the time period selected and their associated financial organizations.  Degrees may be assocciated with more than one financial organization.  The primary organization i','Healthcare','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','100 Percent Sponsor-Funded Faculty','2011-12-22','2012-02-10','Executive Director\, Management Accounting and Analysis','Phillip Burger\, Dinah Mite Millikin\, & Kirk Udovich','This report displays faculty in a department within the selected OrgCode who submitted one or more applications to the UW Office of Sponsored Programs (OSP) during an FEC cycle where they were paid 10','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Advance Budget Number Report','2011-12-23','2012-02-11','Dan Schaaf','Phillip Burger & Dinah Mite Millikin','This report displays a list of grant and contract budgets in advance funding status for a selected Org Code structure. No historical information is reported.','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END  \, ''SAT'' = CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip  \,addr.perm_line_1  \, addr.perm_line_2  \, addr.perm_city  \, addr.perm_state  \, addr.perm_zip_5  \,st30hs.high_school_name   FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key   WHERE a.appl_yr IN(@Year)    AND a.appl_qtr IN (@Quarter)        AND a.appl_branch = @branch     AND a.appl_type IN (''2''\, ''4'')   AND (a.resident NOT IN (''5''\, ''6'') AND addr.perm_state <> ''WA''  )     AND   a.trans_GPA  >= 3.4','EDWAdminMart'),
('Report','Performance Evaluation Metrics - Academic Unit Comparison','2011-12-13','2012-02-01','Todd Mildon','Dinah Mite Millikin','This report displays Program Evaluation Calculated Metrics for the applicable Academic Units side by side at the Org Dean Level. Export this report to Excel by choosing the Excel Export button at the ','Services & Resources','SELECT DISTINCT v.system_key \,v.student_name \,student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END \,v.admitted_for_yr \,admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end \,rcm.regis_major_abbr \,current_major = (  SELECT rcm.regis_major_abbr  FROM sec.registration_regis_col_major rcm  WHERE rcm.regis_yr = @Current_Year   AND rcm.regis_qtr = @Current_Qtr   AND rcm.index1=1   AND rcm.system_key = v.system_key  ) \,class =   CASE   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  END \,addr.local_phone_num \,addr.e_mail_ucs \,addr.e_mail_other  FROM sec.student_1 v  INNER JOIN sec.registration r ON v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm ON r.system_key = rcm.system_key   AND r.regis_yr = rcm.regis_yr  AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.registration_courses rc ON r.system_key = rc.system_key  AND r.regis_yr = rc.regis_yr  AND r.regis_qtr = rc.regis_qtr INNER JOIN sec.addresses addr ON v.system_key = addr.system_key  WHERE rcm.regis_major_abbr in (''B PRE''\, ''B XPRE'')   AND r.enroll_status = 12  AND r.regis_yr = @Previous_Year  AND r.regis_qtr = @Previous_Qtr  AND NOT EXISTS (   SELECT r.system_key    from sec.registration_courses rcc   WHERE rcc.regis_yr = @Current_Year    AND rcc.regis_qtr = @Current_Qtr    AND rcc.system_key = v.system_key    AND rcc.request_status in (''A''\,''C''\,''R'')    AND rcc.course_branch IN(@campus)  )   order by v.student_name','EDWAdminMart'),
('Report','FEC Dashboard Report by FEC Cycle','2012-01-26','2012-03-16','Dan Schaaf','Dinah Mite Millikin\, Eric Rucker\, Kirk Udovich','This report displays an FEC Status Dashboard for a specific FEC cycle - for the OrgCode(s) that you select.','Services & Resources','WITH CTE_PolicyData (Folder\, PolicyRootFolder\, UserName\, RoleName\, RowNbr\, PolicyRoot) AS (    SELECT CASE WHEN cat.parentid is null THEN '' (Home)'' ELSE cat.path end as Folder\,        CASE WHEN cat.PolicyRoot=1             THEN (CASE WHEN cat.parentid is null THEN '' (Home)'' ELSE cat.path end)            ELSE (CASE WHEN c2.parentid is null THEN '' (Home)'' ELSE c2.path end)            end as PolicyRootFolder\,       wk.UserName\, wk.RoleName\, wk.RowNbr\, cat.PolicyRoot    FROM catalog cat    LEFT JOIN catalog c2 on c2.PolicyId=cat.PolicyId and c2.PolicyRoot=1    LEFT JOIN      (SELECT pur.PolicyId\, u.UserName\, r.RoleName\,          Row_Number() OVER (PARTITION BY pur.PolicyId\, u.UserName                             ORDER BY r.RoleName) as RowNbr       FROM PolicyUserRole pur       INNER JOIN Roles r on r.RoleId = pur.RoleId       INNER JOIN Users u on u.UserId = pur.UserId       WHERE u.UserName not in (''Everyone''\,''NT AUTHORITY\SYSTEM''\,''BUILTIN\Administrators'')) as wk          on wk.PolicyId = cat.PolicyId          and cat.PolicyRoot = 1     WHERE cat.Type = 1 )  SELECT a.PolicyRootFolder\, a.Folder\, a.UserName\,     a.RoleName +       CASE WHEN b.RoleName Is Not Null THEN ''\, ''+ b.RoleName ELSE '''' END +       CASE WHEN c.RoleName Is Not Null THEN ''\, ''+ c.RoleName ELSE '''' END +       CASE WHEN d.RoleName Is Not Null THEN ''\, ''+ d.RoleName ELSE '''' END +       CASE WHEN e.RoleName Is Not Null THEN '' ...'' ELSE '''' END           as Roles FROM CTE_PolicyData a LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=2) b       on a.Folder = b.Folder AND a.UserName = b.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=3) c       on a.Folder = c.Folder AND a.UserName = c.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr=4) d       on a.Folder = d.Folder AND a.UserName = d.UserName LEFT JOIN  (SELECT * FROM CTE_PolicyData WHERE RowNbr>=5) e       on a.Folder = e.Folder AND a.UserName = e.UserName WHERE a.RowNbr = 1 OR a.RowNbr Is Null ORDER BY a.PolicyRootFolder\, a.PolicyRoot desc\, a.UserName\, a.Folder','EDWAdminMart'),
('Report','FEC Dashboard Action List','2012-01-26','2012-03-16','Dan Schaaf','Dinah Mite Millikin\, Eric Rucker & Kirk Udovich','This report displays a tabular list of FECs requiring further action for the FEC cycle and OrgCode selected.','Services & Resources','SELECT Distinct  a.appl_yr\,  Appl_Qtr =  case   when a.appl_qtr = 1 then ''Winter''   when a.appl_qtr = 2 then ''Spring''   when a.appl_qtr = 3 then ''Summer''   when a.appl_qtr = 4 then ''Autumn''  end\,   v.student_name\, fname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, 1\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,mname = SUBSTRING(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))\, CHARINDEX('' ''\,SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc)))+1\,LEN(SUBSTRING(v.student_name_lowc\, CHARINDEX(''\,''\,v.student_name_lowc) + 1\, LEN(v.student_name_lowc))))  \,lname = SUBSTRING(v.student_name_lowc\, 1\, CHARINDEX(''\,''\,v.student_name_lowc)-1) \, student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''       when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  addr.perm_line_1\, addr.perm_line_2\, addr.perm_city\, addr.perm_state\, addr.perm_zip_5\,  addr.local_line_1\, addr.local_line_2\, addr.local_city\, addr.local_state\, addr.local_zip_5\,   addr.perm_phone_num\,  addr.local_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  confirmed_dt = (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where  ab.system_key = a.system_key      and ab.appl_no = a.appl_no      and ab.appl_yr = a.appl_yr      and ab.appl_qtr = a.appl_qtr                                                                                 and ab.appl_status_new in (15\,16) )\, r.advising_date\, r.advising_type\, AdviseType =  CASE   WHEN r.advising_type= ''O'' THEN ''Orientation''  Else ''Other''   END\,  v.running_start\, v.college_in_hs  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   left join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr  and ar.req_pathway = mc.major_pathway   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  LEFT JOIN sec.registration r ON  v.system_key = r.system_key AND  r.regis_yr=@year  AND r.regis_qtr=@Quarter  WHERE a.appl_branch = 1 and a.appl_type = ''1'' --and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) AND a.appl_status in (15\,16) order by v.student_name','EDWAdminMart'),
('Report','Fiscal Year Income and Expense Summary by OrgCode and Function','2012-01-25','2012-03-15','Dan Schaaf','Dinah Mite Millikin','This report displays budgeted and actual amounts through the selected reporting period for the selected fiscal year summarized by report fucntion for the selected orgcodes.','Services & Resources','SELECT       AcctngMonth\,   FundCode\,   SUM(DebitSumAmt) AS DebitAmt\,   SUM(CreditSumAmt) AS CreditAmt FROM          GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') AND (AcctngMonth =@Acctmonth) AND (BienniumYear = @BienYear) GROUP BY   AcctngMonth\,   FundCode ORDER BY   AcctngMonth\,   FundCode','EDWAdminMart'),
('Report','Fiscal Year Income and Expense Summary Report Menu','2012-01-25','2012-03-15','Dan Schaaf','Dinah Mite Millikin','These reports display budgeted and actual amounts through the selected reporting period for the selected fiscal year.','Services & Resources','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Salary Cap Cost Share Report','2012-03-06','2012-04-25','Executive Director\, Management Accounting and Analysis','Phillip Burger\, Dinah Mite Millikin & Kirk Udovich','This report displays the certified salary cap cost sharing (required and actual) for faculty in a department within the selected OrgCode and FEC cycle with institutional base salary (IBS) in excess of','Services & Resources','DECLARE @fundingtable table ( f_systemkey decimal(9\,0) \, Funding_Source varchar(30) )  INSERT INTO @fundingtable  SELECT DISTINCT s1.system_key \, CASE  WHEN mc.major_ss_inelig = 1  THEN ''Fee Based''  WHEN s1.system_key IN (   SELECT DISTINCT r1.system_key   FROM UWSDBDataStore.sec.registration r1   INNER JOIN UWSDBDataStore.sec.registration_courses rc1 ON r1.system_key = rc1.system_key    AND r1.regis_yr = rc1.regis_yr    AND r1.regis_qtr = rc1.regis_qtr    AND rc1.course_branch = 1   INNER JOIN UWSDBDataStore.sec.sys_tbl_39_calendar st39 ON ''0'' + CAST(rc1.regis_yr AS char(4)) + CAST(rc1.regis_qtr AS char(1)) = st39.table_key   WHERE r1.enroll_status = 12     AND ((rc1.request_status IN(''A''\,''C''\,''R'')) OR (rc1.request_status IN(''W''\,''Y''\,''D'') AND rc1.request_dt > st39.tenth_day))     AND r1.regis_qtr = @Quarter      AND r1.regis_yr = @year     AND CAST(r1.regis_yr AS char(4)) + CAST(r1.regis_qtr AS char(1)) + rc1.crs_curric_abbr + CAST(rc1.crs_number AS char(3)) + rc1.crs_section_id IN (    ''20104B NURS350C''\, ''20104B NURS430D''\, --Fall 2010    ''20111B NURS407C''\, ''20111B NURS410C''\, --Winter 2011    ''20112B NURS403C''\, ''20112B HLTH497D''\, --Spring 2011    ''20113B HLTH497D''\,''20113B NURS409F''\,''20113B NURS409G''\,''20113B NURS409H''\,''20113B NURS495G''\,''20113B NURS495H''\,''20113B NURS495I''\, --Summer 2011    ''20114B NURS430D''\, ''20114B HLTH497D''\, ''20114B NURS350C''\, --Fall 2011    ''20121B NURS407C''\, ''20121B NURS410C''\, --Winter 2012    ''20122B NURS403C''\, ''20122B HLTH497C''\, --Spring 2012     ''20123B HLTH450A''\, ''20123B NURS409F''\, ''20123B NURS409G''\, ''20123B NURS409H''\, --Summer 2012    ''20124B HLTH497D''\, ''20124B NURS350C''\, ''20124B NURS430D''\, --Fall 2012    ''20131B NURS407C''\, ''20131B NURS410C''\, --Winter 2013    ''20132B NURS403C''\, ''20132B HLTH497C''\, --Spring 2013    ''20133B HLTH497A''\, ''20133B NURS409F''\, ''20133B NURS409G''\, ''20133B NURS409H'' --Summer 2013    )   ) THEN ''University Center Everett'' --NOTE there will need to be a separate WHEN...THEN statement for each year and quarter that the Everett Nursing program runs at least until Seattle comes up with some way to code them appropriately   WHEN s1.system_key IN (   SELECT DISTINCT sg.system_key   FROM UWSDBDataStore.sec.sr_student_grp sg   WHERE sg.sg_group_cd = ''NEVT''    AND @year *10 + @Quarter BETWEEN sg.sg_init_yr *10 + sg.sg_init_qtr AND sg.sg_exp_yr *10 + sg.sg_exp_qtr   ) THEN ''University Center Everett''  ELSE '' State Funded''  END  FROM UWSDBDataStore.sec.student_1 s1  INNER JOIN UWSDBDataStore.sec.student_1_college_major s1cm ON s1.system_key = s1cm.system_key  AND s1cm.branch = 1  AND s1cm.index1 = 1  INNER JOIN UWSDBDataStore.sec.registration r ON s1.system_key = r.system_key INNER JOIN UWSDBDataStore.sec.Sr_major_code mc ON s1cm.major_abbr = mc.major_abbr  AND s1cm.pathway = mc.major_pathway  AND mc.major_last_yr IN (   SELECT MAX(mc1.major_last_yr) AS lastyr   FROM UWSDBDataStore.sec.Sr_major_code mc1    WHERE s1cm.major_abbr = mc1.major_abbr     AND s1cm.pathway = mc1.major_pathway   ) WHERE r.regis_yr = @year   AND r.regis_qtr = @Quarter   AND r.enroll_status = 12  -----------------------------------------------------------------------------------------------------   --Headcount SELECT Dept = CASE  WHEN scm.major_abbr = ''B NM'' THEN ''Non-Matric''  WHEN scm.major_abbr = ''B BUSX'' THEN ''BUSINESS ADMINISTRATION (BELLEVUE)''  WHEN scm.major_abbr = ''B NURS'' AND ft.funding_source =''University Center Everett'' THEN ''NURSING (EVERETT)''  WHEN m.major_dept IN(865\, 1073\, 1091\, 1092\, 1093) THEN ''School of Science\, Technology\, Engr & Math''  ELSE d.dept_full_nm  END \, Funding = ft.Funding_Source \, r.regis_qtr \, r.regis_yr \, class_status = CASE  WHEN s1.class = 1 AND m.major_dept = 864 THEN ''Undergrad-Freshman'' --NOTE that dept code 864 is CUSP  WHEN s1.class = 2 AND m.major_dept = 864 THEN ''Undergrad-Sophomore''    WHEN s1.class = 3 AND m.major_dept = 864 THEN ''Undergrad-Junior''    WHEN s1.class = 4 AND m.major_dept = 864 THEN ''Undergrad-Senior''    WHEN s1.class = 5 AND m.major_dept = 864 THEN ''Undergrad-Fifth Year''    WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 0 THEN ''Undergrad-Non-Matric''    WHEN s1.class = 6 AND m.major_dept = 864 AND scm.deg_level = 2 THEN ''Graduate-Non-Matric''    WHEN s1.class < 6 AND m.major_dept <> 864 THEN ''Undergrad''    WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 0 THEN ''Undergrad''  WHEN s1.class = 6 AND m.major_dept <> 864 AND scm.deg_level = 2 THEN ''Graduate''  WHEN s1.class = 8 THEN ''Graduate''  ELSE ''UNKNOWN''  END  \, class_status_order = CASE  WHEN s1.class = 1 AND m.major_dept = 864 THEN 20  WHEN s1.class = 2 AND m.major_dept = 864 THEN 30   WHEN s1.class = 3 AND m.major_dept = 864 THEN 40    WHEN s1.class = 4 AND m.major_dept = 864 THEN 50    WHEN s1.class = 5 AND m.major_dept = 864 THEN 60    WHEN s1.class = 6 AND m.major_dept = 864 THEN 70    WHEN s1.class < 6 AND m.major_dept <> 864 THEN 10    WHEN s1.class = 6 AND scm.deg_level = 0 AND m.major_dept <> 864 THEN 10    WHEN s1.class = 6 AND scm.deg_level = 2 AND m.major_dept ','EDWAdminMart'),
('Report','Grant and Contract Budget Status Report','2012-04-30','2012-06-19','Dan Schaaf','Dinah Mite Millikin & Phillip Burger','This report is provided to assist departments in managing Grant and Contract budgets by allowing them to group the results by Principal Investigator (PI)\, organization\, or days until grant close. Resu','Services & Resources','SELECT          BienniumYear\,     SUM(OpenBalAmt) AS BeginingBalance\,      SUM(DebitSumAmt) AS debit\,      SUM(CreditSumAmt) AS credit FROM              GLDataMart.sec.TransGLSummary WHERE          (GLAccountCode = ''1160'') GROUP BY BienniumYear ORDER BY BienniumYear','EDWAdminMart'),
('Report','Majors and Organization Associations','2011-03-22','2011-05-11','Office of Planning & Budgeting','Alexis Chin','List of University majors for the time period selected and their associated financial organizations. Majors may be associated with more than one financial organization. The primary organization is ind','Healthcare','SELECT DISTINCT s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip \,addr.perm_city \,addr.perm_state \,addr.local_state \,st30hs.high_school_name  FROM UWSDBDataStore.sec.student_1 s1  INNER JOIN UWSDBDataStore.sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join UWSDBDataStore.sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join UWSDBDataStore.sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key  WHERE appl_yr IN  (@Year)    AND appl_qtr IN (@Quarter)        AND appl_branch = @branch   AND appl_type = ''1''     AND   high_sch_gpa >= @GPA   AND   (       CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END >= @ACT  OR  CASE   WHEN s1.s1_high_satv > 0    THEN s1.s1_high_satv    ELSE NULL  END >= @SATV    OR   CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END >= @SATM  )','EDWAdminMart'),
('Report','Building Summary by OrgCode','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a summary of assigned space for the selected facility by OrgCode.','Research Administration','SELECT     FundCode\,   GLAccountCode\,  OriginalTransCode\,  TransDebitAmt\,   TransCreditAmt\,   TransRef1Text FROM   GLDataMart.sec.TransGLUseTax WHERE  BienniumYear = @BienniumYear and   TransBatchNbr = @fasno  and    TransTypeCode = ''44''  and   TransRef1Text = @ref1 ORDER BY                   FundCode\, GLAccountCode','EDWAdminMart'),
('Report','Building Summary by Primary Use','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a summary of assigned space for the selected facility by primary use.','Research Administration','SELECT sr_adm_appl.appl_qtr \, sr_adm_appl.appl_yr \, sr_adm_appl.appl_branch \, sr_adm_appl.appl_status_rsn \, v.student_no \, v.student_name_lowc \, v.system_key \, sr_adm_appl.appl_status \, addr.e_mail_ucs \, addr.e_mail_other \, AppStatus = CASE  WHEN sr_adm_appl.appl_status = 1 THEN ''Application Received -- Not Processed'' WHEN sr_adm_appl.appl_status = 2 THEN ''Incomplete'' WHEN sr_adm_appl.appl_status = 4 THEN ''File Complete and Sent to Department'' WHEN sr_adm_appl.appl_status = 5 THEN ''HOLD- Requested Additional Documenation'' WHEN sr_adm_appl.appl_status = 7 THEN ''Applicant Withdrew Application'' WHEN sr_adm_appl.appl_status = 8 THEN ''Applicant is Denied Admission'' WHEN sr_adm_appl.appl_status = 9 THEN ''Temp Hold- File is Complete and Sent to Evaluators'' WHEN sr_adm_appl.appl_status = 10 THEN ''Applicant is Admited to the University'' WHEN sr_adm_appl.appl_status = 12 THEN ''Applicant has Registered for Classes'' WHEN sr_adm_appl.appl_status = 14 THEN ''Applicant is Admited to the University'' WHEN sr_adm_appl.appl_status = 15 THEN ''Applicant is Paid Confirmation Fee'' WHEN sr_adm_appl.appl_status = 16 THEN ''Applicant is Paid Confirmation Fee'' WHEN sr_adm_appl.appl_status = 17 THEN ''Files Complete - Too Late for an Admissions Decision'' WHEN sr_adm_appl.appl_status = 24 THEN ''Applicant Declined Our Offer of Admission'' ELSE ''NON UWB App Status'' END\,    (SELECT     COUNT(*) AS Expr1                 FROM          sec.sr_adm_appl AS app_sea                  WHERE      (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0)) AS seattle_appl_count\,    CASE WHEN                           (SELECT     COUNT(*)                             FROM      sec.sr_adm_appl app_sea                             WHERE      sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND                                                     app_sea.appl_branch = 0) = 0 THEN ''No''             ELSE ''Yes''    END AS Seattle_app\,   CASE WHEN                           (SELECT     COUNT(*)                             FROM          sec.sr_adm_appl app_sea                             WHERE      sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND                                                     app_sea.appl_branch = 2) = 0 THEN ''No''             ELSE ''Yes''    END AS Tacoma_app\,     CASE WHEN                             (select appl_branch from sec.sr_adm_appl b               where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and                                            b.appl_status = 16) = 0 THEN ''Seattle''               WHEN                             (select appl_branch from sec.sr_adm_appl c               where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and                                            c.appl_status = 16) = 1 THEN ''Bothell''              WHEN  (select appl_branch from sec.sr_adm_appl d               where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and                                            d.appl_status = 16) = 2 THEN ''Tacoma''               ELSE ''None'' END AS Confirmed  FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key  INNER JOIN sec.addresses addr ON addr.system_key= v.system_key WHERE (sr_adm_appl.appl_branch = 1) AND (sr_adm_appl.appl_yr = @year)  AND (sr_adm_appl.appl_qtr = @Quarter)  AND (sr_adm_appl.appl_status_rsn = 91)   AND sr_adm_appl.appl_type = ''1''','EDWAdminMart'),
('Report','College Space Data by OrgCode','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a summary of assigned space for each OrgCode and facility that an Org Dean-level unit has assigned space in.','Research Administration','SELECT  v.system_key\,  a.appl_yr\,  a.appl_qtr\,  v.student_name\, -- addr.local_line_1\, -- addr.local_line_2\, -- addr.local_city\, -- addr.local_state\, -- addr.local_zip_5\, -- addr.local_zip_4\,  addr.local_phone_num\,  addr.perm_phone_num\,  addr.e_mail_ucs\,  addr.e_mail_other\,  v.s1_gender\,   ar.req_major_abbr\,  mc.major_full_nm\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' OR          a.appl_type = ''4'' then ''UG (2yr/4yr)''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,   s.appl_stat_descrip\,  v.s1_visa_type\,  v.resident\,  addr.perm_country\,  addr.parent_country\, ReasonCode= CASE  WHEN a.appl_status_rsn= 0 THEN ''Direct'' WHEN a.appl_status_rsn= 90 THEN ''Conditional - ELP'' WHEN a.appl_status_rsn= 91 THEN ''Conditional - ATP'' WHEN a.appl_status_rsn= 92 THEN ''Conditional - English Proficiency in Progress'' WHEN a.appl_status_rsn= 93 THEN ''B BUS - Bellevue'' WHEN a.appl_status_rsn= 99 THEN ''Director Approval'' ELSE ''-'' END\, a.appl_status_rsn\, v.student_no  FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key   left join sec.addresses addr  on v.system_key = addr.system_key  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 and v.resident in (5\,6) and v.s1_visa_type is not null and v.s1_visa_type <> ''''  AND (a.appl_yr = @year)  AND (a.appl_qtr = @Quarter)','EDWAdminMart'),
('Report','College Space Data by Facility','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a summary of assigned space for each OrgCode and facility that an Org Dean-level unit has assigned space in.','Research Administration','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Facility Information','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays facility-level data.','Research Administration','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Facility Room Detail','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a list of rooms for the selected facility by primary use.','Research Administration','select     budgetnbr\,     budgetname\,     accountcode\,     accountname\,     trancodedesc\,     tranamount\,     trandesc\,     tranadditionaldesc\,     tranreference2 from     ODS.sec.BudgetActivityDetail where     bienniumyear = @BienniumYear and     fasrunnbr =@fasno and     trancode = ''35'' and tranreference2 = @ref2 order by    budgetnbr\, budgetname\,accountcode','EDWAdminMart'),
('Report','Space Data by Department','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a list of rooms assigned to a specified organization\, grouped by building.','Research Administration','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Grant and Gift Budgets Unassigned to Space','2012-04-07','2012-05-27','Todd Mildon','Jeffrey Linn','This report displays a list of budget numbers that are not associated with a room in the GeoSIMS application. Budget type classes 0552 and 0557 are excluded by default because departments are not requ','Research Administration','SELECT DISTINCT  v.student_name\, v.student_no\, v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, v.class\, v.tot_lowd_transfer\, v.tot_upd_transfer\, r.regis_yr\,  regis_qtr =  case   when r.regis_qtr = 1 then ''Winter''   when r.regis_qtr = 2 then ''Spring''   when r.regis_qtr = 3 then ''Summer''   when r.regis_qtr = 4 then ''Autumn''  end\, r.current_credits\, total_credits = ((v.tot_graded_attmp + tot_nongrd_earn) - tot_deductible)\, addr.local_phone_num\, addr.e_mail_ucs\, addr.e_mail_other\, addr.local_line_1\, addr.local_city\, addr.local_zip_5\, addr.perm_line_1\, addr.perm_city\, addr.perm_zip_5\,  rcm.regis_major_abbr   FROM sec.student_1 v  INNER JOIN sec.registration r on v.system_key = r.system_key INNER JOIN sec.registration_regis_col_major rcm  ON r.system_key = rcm.system_key  AND r.regis_yr = rcm.regis_yr  AND r.regis_qtr = rcm.regis_qtr INNER JOIN sec.addresses addr  ON v.system_key = addr.system_key INNER JOIN sec.sr_adm_appl a  ON v.system_key = a.system_key INNER JOIN sec.sr_adm_appl_mail_codes mc  ON a.system_key = mc.system_key  AND a.appl_no = mc.appl_no  AND a.appl_qtr = mc.appl_qtr  AND a.appl_yr = mc.appl_yr  AND ( a.appl_status_rsn=91 OR mc.mail_code = ''BCT'') WHERE  r.enroll_status = 12 AND rcm.regis_branch = 1 AND rcm.regis_major_abbr in ( ''B PRE''\,''B XPRE''\,''B NM'') AND r.regis_yr = @Year AND r.regis_qtr = @Quarter  ORDER BY admitted_for_yr\,student_name\, r.regis_yr\, regis_qtr','EDWAdminMart'),
('Report','Indirect Cost Recovery Estimator','2012-06-20','2012-08-09',' Dan Schaaf','Dinah Mite Millikn & Phillip Burger','This report is useful for estimating total Indirect Cost (IDC) and projected Indirect Cost Recovery (ICR) amounts for the 12-month period starting in April of one year and ending with March of the fol','Services & Resources','SELECT p.IdNbr\, dc.PaycycleEndDate\, dc.GTNNbr\, dc.Amount\, dc.SourceDesc FROM HumanResources_HEPPS.sec.DeductAndContributions  dc   INNER JOIN HumanResources_HEPPS.sec.Person  p      ON p.PersonKey = dc.PersonKey       AND p.RecordEffBeginDate <= dc.PaycycleEndDate       AND p.recordEffEndDate >= dc.PaycycleEndDate WHERE dc.GTNNbr = @GTN AND p.IdNbr = @EID ORDER BY dc.GTNNbr\, dc.PaycycleEndDate','EDWAdminMart'),
('Report','How Many Students By Campus','2012-10-15','2012-12-04','University Registrar and Chief Officer of Enrollment Information Services','Gordon Moll\, Ann Wunderlin','Displays a graph of the unduplicated headcount by campus as of Census Day for a specified quarter for the past ten years. Useful for trend analysis. Excluded from these counts are foreign study studen','Financial Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, BienniumYear\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''35''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1'' ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Se','EDWAdminMart'),
('Report','Gift Balance Detail by Budget List','2013-03-01','2013-04-20','Dan Schaaf','Phillip Burger & Dinah Mite Millikin','This report displays gift budget activity for selected spending restrictions and budget prefixes for a single budget or for a list of budgets via a MyFinancialDesktop Static Budget List. Please note t','Services & Resources','SELECT   FundCode\,   TransDate\,   TransDebitAmt\,   TransCreditAmt\,   TransRef1Text \,   TransRef2Text FROM                        GLDataMart.sec.TransGLUseTax WHERE                  GLAccountCode  = ''4801''  and                  BienniumYear = @BienYear and                  TransBatchNbr = @FASNo and                  TransTypeCode=@TransCode ORDER BY  FundCode\,   TransDate','EDWAdminMart'),
('Report','Internal and External Sales Summary Report','2013-01-01','2013-02-20','Executive Director\, Management Accounting and Analysis','Phillip Burger & Dinah Mite Millikin','The intent of this report is to provide campus the ability to determine internal sales (CTI/ISD/JV) that affect account codes 9620\, 9650\, 21* (exclusive of 21-7* shared leave) and external revenue tha','Services & Resources','SELECT a.appl_qtr \,a.appl_yr \,a.appl_branch \,a.appl_status \,v.student_name_lowc \,st72.appl_stat_descrip \,a.system_key \,v.student_no  FROM sec.student_1 v  INNER JOIN sec.APPLHISTapplication a ON v.system_key = a.system_key INNER JOIN sec.sys_tbl_72_appl_status st72 ON a.appl_status = st72.table_key  WHERE (a.appl_yr = DATEPART(yyyy\, GETDATE()) - 1)   AND a.appl_qtr = @Curr_Quarter  AND (a.appl_type NOT IN (''E''\,''G''\,''N'' ))  AND (a.appl_branch = 1)  --AND a.appl_status IN(2\,8\,17\,4\,5\,7\,9) -- Question: What statuses are considered No decision??  AND a.appl_status IN(2\,4\,5\,7\,8\,9\,17\,10\,13\,14\,15\,16\,24)','EDWAdminMart'),
('Report','Check Register','2010-08-16','2010-10-05','Director\, Student Fiscal Services','Paige Hamlin','Displays detailed information by student and check number for ACH direct deposit\, paper check printing and cancellations within selected date range.  Used for tracking/identification of daily check/AC','Financial Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','Fund Group 70 Agency Funds','2013-12-12','2014-01-31','Dan Schaaf','Tim J McAllister','This report provides balances for budget numbers in Agency Funds with summarization by Program Type and Fund.  To export the data to Excel\, use the \"XML file with report data\" export option.  Locate t','Services & Resources','SELECT      Coalesce(f4.Name\,f3.Name\,f2.Name\,f1.Name) as FolderRoot\,    CASE WHEN f4.Name Is Not Null THEN f3.Name         WHEN f3.Name Is Not Null THEN f2.Name         WHEN f2.Name Is Not Null THEN f1.Name         WHEN f1.Name Is Not Null THEN Null         END    as Folder2\,    CASE WHEN f4.Name Is Not Null THEN f2.Name         WHEN f3.Name Is Not Null THEN f1.Name         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder3\,    CASE WHEN f4.Name Is Not Null THEN f1.Name         WHEN f3.Name Is Not Null THEN Null         WHEN f2.Name Is Not Null THEN Null         WHEN f1.Name Is Not Null THEN Null         END    as Folder4\,     IsNull(r.Name\,''(unknown)'') as ReportName\,    r.Type as ReportType\,    r.Description as ReportDesc\,    r.Hidden as IsHidden\,    CASE WHEN r.LinkSourceId Is Null THEN 0 ELSE 1 END as IsLinked\,    uc.UserName as CreatedBy\, r.CreationDate\,    um.UserName as ModifiedBy\, r.ModifiedDate\,    (SELECT Max(l.TimeStart)     FROM ExecutionLog l WHERE l.ReportId = r.ItemId) as LastRunDate  FROM  Catalog as r LEFT JOIN Catalog f1 On f1.ItemId = r.ParentId  And f1.name>'''' LEFT JOIN Catalog f2 On f2.ItemId = f1.ParentId And f2.name>'''' LEFT JOIN Catalog f3 On f3.ItemId = f2.ParentId And f3.name>'''' LEFT JOIN Catalog f4 On f4.ItemId = f3.ParentId And f4.name>'''' LEFT JOIN Users uc On uc.UserId = r.CreatedByID LEFT JOIN Users um On um.UserId = r.ModifiedByID  WHERE r.Type In (2\,4)   -- rpt\, linked rpt ORDER BY FolderRoot\, Folder2\, Folder3\, Folder4\, r.Type\, r.Hidden\, ReportName','EDWAdminMart'),
('Report','Course Section Fill Rate','2013-12-20','2014-02-08','Carol Diem','Lucy Zybura','This report allows the user to see how full each course section is.     For a selected Year\, Quarter\, Campus\, Department\, Curriculum\, and Section Type\, the user can see what the total capacity is (Tot','Financial Resources','/*DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''11-01-2010'' SET @enddate = ''11-03-2010'' SET @oac=''DE'' SET @tctype=''30''*/   DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, BienniumYear\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''60''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1''  AND ISNULL(LEFT(CTIAccountCode\,2)\,0) = CASE WHEN TranCode=''65'' THEN ''96''      WHEN TranCode=''60'' THEN ''21'' ELSE 0 END ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''Requisition','EDWAdminMart'),
('Report','Room Assignment Details by Department','2013-08-01','2013-09-20','Gary Quarfoth','Eric Darst','This report displays a list of rooms and room assignment details (including a list of occupants\, functional uses and budgets) assigned to the selected organization(s)\, grouped by building.  Unlike the','Research Administration','declare @UserKey smallint /* -- Parameters used for testing -- declare @ReportUser varchar(50) declare @StartDate datetime declare @EndDate datetime  set @ReportUser = ''netid\alchin''; set @StartDate =  ''05/15/2012'' set @EndDate = ''01/15/2013''  */  set @StartDate = Dateadd(day\,-1\,@StartDate); set @EndDate = Dateadd(day\, 1\, @EndDate);  select @UserKey = UserKey from  EDWAdminMart.sec.RSUser where UserName = @ReportUser   ;with cte_TopRpts as  (     SELECT r.ReportName            \, r.ReportFolder            \, r.ReportKey            \, count(l.ExecutionLogKey) as RptRunCount            \, max(l.TimeStart) as RptLastRun      FROM EDWAdminMart.sec.RSExecutionLog l      JOIN EDWAdminMart.sec.RSReport r    ON l.ReportKey = r.ReportKey      WHERE l.UserKey = @UserKey      and   l.TimeStart  between @StartDate and @EndDate             and   l.StatusKey = 1      and   r.ReportDeleted = 0       group by r.ReportName         \, r.ReportFolder         \, r.ReportKey        ) -- this version will return the last exec detail for the top N reports SELECT r.RptOrd      \, r.ReportName      \, r.ReportFolder      \, r.ReportKey      \, r.RptRunCount\, r.RptLastRun      \, l.TimeStart      \, l.TimeEnd      \, l.Parameters  from     ( select top 10000  *\,  -- row_number() over(order by RptRunCount desc) RptOrd   -- ordering # by report execution     row_number() over(order by RptLastRun desc) RptOrd  -- ordering # by last report run       from cte_TopRpts   order by RptLastRun desc   -- order by last report run     -- order by RptRunCount desc  -- order by most executed report     ) r join EDWAdminMart.sec.RSExecutionLog l        ON  l.ReportKey = r.ReportKey       and l.TimeStart = (select max(TimeStart) from EDWAdminMart.sec.RSExecutionLog b                          where b.ReportKey = l.ReportKey                          and   b.StatusKey = 1                          and b.UserKey = @UserKey)  where        l.TimeStart between @StartDate and @EndDate                       order by r.RptOrd\, l.TimeStart','EDWAdminMart'),
('Report','Student Grade Report by Major','2014-12-14','2015-02-02','Crystal Eney','Alexis Wall','Displays a student''s individual grades from courses taken\, as well as the quarterly GPA. It also includes cumulative GPA and departmental GPA calculated at the time the report is run. Departmental GPA','Financial Resources','select       budgetnbr\,      budgetname\,       accountcode\,       accountname\,       trancodedesc\,      tranamount\,       tranreference2\,       trandesc\,       tranadditionaldesc from        ODS.sec.BudgetActivityDetail where       bienniumyear = @bienyear and       fasrunnbr =@fasno and       tranreference1 = @ref1 and       trancode = ''44'' order by       budgetnbr\, budgetname','EDWAdminMart'),
('Report','Research Proposal Details','2015-06-08','2015-07-28','Jim Kresl','Greg Grabowski','This report displays details of a specific awarded grant proposal(s)\, personnel involved in the grant\, sponsor information\, and the grant abstract. Data is derived from the UW System to Administer Gra','Human Resources','SELECT DISTINCT  v.student_name\,  student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,  v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, mmd.mm_major_abbr\,   class =   case   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  end\,  addr.e_mail_ucs\, addr.e_mail_other\,   Registered_Current =  CASE WHEN EXISTS  (SELECT r.system_key                  FROM sec.registration_courses r                  WHERE r.regis_yr=@Current_Year   and r.regis_qtr=@Current_Quarter                                  and r.course_branch = 1   and r.system_key = v.system_key)   THEN ''Yes''   ELSE ''No''  END  FROM sec.student_1 v    LEFT JOIN sec.addresses addr   ON v.system_key = addr.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @Current_Year  AND mm_qtr = @Current_Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no   WHERE   mmd.mm_major_abbr NOT in (''B PRE''\, ''B XPRE'')   AND    v.system_key  IN   (  SELECT  v.system_key   FROM sec.student_1 v  INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key  INNER JOIN (     SELECT DISTINCT rc.system_key                   FROM  sec.registration_courses rc                  WHERE rc.course_branch=1          AND rc.regis_yr=@year       AND rc.regis_qtr=@Quarter       AND rc.request_status in (''A''\,''C''\,''R'')) X     ON X.system_key = v.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @year  AND mm_qtr = @Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no  WHERE mmd.mm_major_abbr in (''B PRE''\, ''B XPRE'') )','EDWAdminMart'),
('Report','Research Proposal Details Lookup','2015-06-08','2015-07-28','Jim Kresl','Greg Graboswki','This report displays details of a specific awarded grant proposal\, personnel involved in the grant\, sponsor information\, and the grant abstract. Data is derived from the UW System to Administer Grants','Human Resources','SELECT DISTINCT  v.student_name\,  student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,  v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, mmd.mm_major_abbr\,   class =   case   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  end\,  addr.e_mail_ucs\, addr.e_mail_other\,   Registered_Current =  CASE WHEN EXISTS  (SELECT r.system_key                  FROM sec.registration_courses r                  WHERE r.regis_yr=@Current_Year   and r.regis_qtr=@Current_Quarter                                  and r.course_branch = 1   and r.system_key = v.system_key)   THEN ''Yes''   ELSE ''No''  END  FROM sec.student_1 v    LEFT JOIN sec.addresses addr   ON v.system_key = addr.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @Current_Year  AND mm_qtr = @Current_Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no   WHERE   mmd.mm_major_abbr NOT in (''B PRE''\, ''B XPRE'')   AND    v.system_key  IN   (  SELECT  v.system_key   FROM sec.student_1 v  INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key  INNER JOIN (     SELECT DISTINCT rc.system_key                   FROM  sec.registration_courses rc                  WHERE rc.course_branch=1          AND rc.regis_yr=@year       AND rc.regis_qtr=@Quarter       AND rc.request_status in (''A''\,''C''\,''R'')) X     ON X.system_key = v.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @year  AND mm_qtr = @Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no  WHERE mmd.mm_major_abbr in (''B PRE''\, ''B XPRE'') )','EDWAdminMart'),
('Report','Undergraduates Eligible to Register','2015-07-21','2015-09-09','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','This report provides a list of Undergraduate Students that are enrolled in a course or admitted 1 or 2 quarters prior to the selected eligible quarter with current class code (1\, 2\, 3\, 4\, 5 or 6 NM). ','Financial Resources','/*   --Variables for testing     --DECLARE @startdate DATETIME\, @enddate DATETIME \, @jvbud_user VARCHAR(8)     -- SET @startdate = ''1/1/2013''     -- SET @enddate = ''3/25/2014''     -- SET @jvbud_user = ''JVBO276 ''       ------------Derive all Date Variables in the Following Section  */  DECLARE @sfy char(4)\, @sby char(4)\, @sam char(2)\, @ecalyear char(4)\, @ecalmonth char(2)\, @efy char(4)\, @eby char(4)\, @eam VARCHAR(2)\, @jvbud VARCHAR(8)\, @searchtype CHAR(6)            SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END      SET @sby = (@sfy-(@sfy %2)-1)      SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18      WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6      END      SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end      SET @sam = CASE WHEN LEN(@sam) = 1 THEN ''0'' + @sam ELSE @sam END      SET @ecalyear = YEAR(@enddate)      SET @ecalmonth = MONTH(@enddate)      SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END      SET @eby = (@efy-(@efy %2)-1)      SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18      WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6      ELSE 27 END      SET @eam = CASE WHEN LEN(@eam) = 1 THEN ''0'' + @eam ELSE @eam END       --Remove the dash character from the @jv variable if entered with a budget#      SET @jvbud = UPPER(@jvbud_user)      SET @jvbud =  CASE WHEN SUBSTRING(@jvbud\,3\,1)=''-'' AND LEFT(@jvbud\,2)!=''jv'' THEN LEFT(@jvbud\,2) + RIGHT(@jvbud\,4)      WHEN LEN(@jvbud)=''5'' THEN ''JV'' + (@jvbud)      ELSE RTRIM(LTRIM(@jvbud)) END      SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN ''x''      WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud\,2)!=''JV'' THEN ''b''      WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud\,2)= ''JV'' THEN ''j''      ELSE ''x'' END      --SELECT @searchtype      --SELECT @jvbud            --select @sby\, @sam\, @eby\, @eam        IF OBJECT_ID(''tempdb..#T1'') IS NOT NULL DROP TABLE #T1  CREATE TABLE #T1  (Bienniumyear CHAR(4)\, TranReference2 CHAR (8))      INSERT INTO #T1(BienniumYear\, TranReference2)       ( SELECT DISTINCT BienniumYear\, BAD.TranReference2       FROM sec.BudgetActivityDetail BAD       WHERE (BAD.BudgetNbr = @jvbud        AND LEFT(BAD.TranReference2\,2)=''JV''        AND BAD.BienniumYear BETWEEN @sby AND @eby        AND BAD.TranCode = ''35''        AND BAD.TranPostingDate BETWEEN @startdate AND @enddate        AND @searchtype = ''b''       )      )                  SELECT        BAD.BienniumYear\,        BAD.BudgetNbr\,        BudgetName\,        AccountCode\,        OrgCode\,        OrgName\,        TranAmount\,        TranCode\,        TranDate1\,        TranPostingDate\,       BAD.TranReference2\,        TranReference3\,        TranDesc\,        TranFTE\,        PositionNbr\,        BAD.TDPrimaryKey\,        AppTranOriginating      FROM sec.BudgetActivityDetail BAD       LEFT JOIN #T1        ON BAD.TranReference2 = #T1.TranReference2      WHERE      (       (@searchtype = ''b'' AND #T1.TranReference2 IS NOT NULL)       OR       (@searchtype = ''j'' AND @jvbud = BAD.TranReference2)      ) and      BAD.BienniumYear BETWEEN @sby AND @eby      AND BAD.TranCode = ''35''      AND TranPostingDate BETWEEN @startdate AND @enddate      AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam)      ORDER BY BAD.TranReference2\, BAD.BudgetNbr','EDWAdminMart'),
('Report','Satisfactory Progress Policy Report','2015-09-09','2015-10-29','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','Matriculated students are expected to make satisfactory progress toward the attainment of a baccalaureate degree\,  which means they are expected to enter a major and graduate after completion of a rea','Financial Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''65''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1''  AND ISNULL(LEFT(CTIAccountCode\,2)\,0) = CASE WHEN TranCode=''65'' THEN ''96''      WHEN TranCode=''60'' THEN ''21'' ELSE 0 END ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, Prior','EDWAdminMart'),
('Report','Research Subawards','2015-09-22','2015-11-11','Jim Kresl','Greg Grabowski','This report represents all subawards related to sponsored research entered into SAGE since 1/1/2015.  Copies of Fully Executed subawards are saved to the parent eGC1 in SAGE under ''attachments''. [Assi','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','EDWAdminMart'),
('Report','SEVIS Immigration Reporting','2015-09-25','2015-11-14','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','This report provides data that is used in the quarterly government reporting submitted through SEVIS. Basic criteria for a student to appear on this report is that they must have some kind of Visa Typ','Financial Resources','SELECT sr_adm_appl.appl_qtr \, sr_adm_appl.appl_yr \, sr_adm_appl.appl_branch \, sr_adm_appl.appl_status_rsn \, v.student_no \, v.student_name_lowc \, v.system_key \, sr_adm_appl.appl_status \, sr_adm_appl.adv_reg_prt_dt \, registration.regis_yr \, registration.regis_qtr \, registration.special_program AS Expr1 \, registration.advising_date \, registration.advising_type \, registration.regis_class \, addr.e_mail_ucs \, addr.e_mail_other \, AppStatus = CASE   WHEN sr_adm_appl.appl_status = 1 THEN ''Application Received -- Not Processed''  WHEN sr_adm_appl.appl_status = 2 THEN ''Incomplete''  WHEN sr_adm_appl.appl_status = 4 THEN ''File Complete and Sent to Department''  WHEN sr_adm_appl.appl_status = 5 THEN ''HOLD- Requested Additional Documenation''  WHEN sr_adm_appl.appl_status = 7 THEN ''Applicant Withdrew Application''  WHEN sr_adm_appl.appl_status = 8 THEN ''Applicant is Denied Admission''  WHEN sr_adm_appl.appl_status = 9 THEN ''Temp Hold- File is Complete and Sent to Evaluators''  WHEN sr_adm_appl.appl_status = 10 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 12 THEN ''Applicant has Registered for Classes''  WHEN sr_adm_appl.appl_status = 14 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 15 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 16 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 17 THEN ''Files Complete - Too Late for an Admissions Decision''  WHEN sr_adm_appl.appl_status = 24 THEN ''Applicant Declined Our Offer of Admission''  ELSE ''NON UWB App Status''  END \, (  SELECT COUNT(*) AS Expr1  FROM sec.sr_adm_appl AS app_sea  WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Seattle_app \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Tacoma_app \, CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10\,14)  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10\,14)  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch   from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10\,14)  ) = 2 THEN ''Tacoma'' /* WHEN ((select appl_branch from sr_adm_appl b               where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and                                            b.appl_status IN(10\,14)) AND  (select appl_branch from sr_adm_appl d               where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and                                            d.appl_status IN(10\,14) )) THEN ''Seattle and Tacoma''*/  --Build Case for Seattle- And Tacoma Acceptance  --Build acceptance for all three campus                ELSE ''None'' END AS Accepted \,   CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16  ) = 2 THEN ''Tacoma''  ELSE ''None''  END AS Confirmed   \,HST_Received = appl_doc_rcvd_dt \,Current_Credits = registration.current_credits \,mpt.test_dt \,mpt.test_type \,mpt.test_score  FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key  AND registration.regis_yr = rcm.regis_yr  AND registration.regis_qtr = rcm.regis_qtr  INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN (  SELECT *   FROM sec.sr_adm_applicant_docs  WHERE appl','EDWAdminMart'),
('Report','Campus Application Counts Comparison','2015-10-05','2015-11-24','University Registrar and Chief Officer of Enrollment Information Services','Doug Pardo','Displays application counts and relative percentages for each campus based on the Quarter and Application Types selected. That aggregate values are grouped by Application Status.','Financial Resources','SELECT  * FROM    Report WHERE ReportCodeNbr = @rptcd','EDWAdminMart'),
('Report','Freshman Applications Scores and Ethnicity','2015-10-05','2015-11-24','University Registrar and Chief Officer of Enrollment Information Services','Doug Pardo','Displays tables of Freshman Application data based on the selected Quarter and Campus. The two tables are: Standardized Test Scores and  Ethnicity by custom application status groupings (Total\, Enr Co','Financial Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Student Grade Report by Curriculum\, Course and Section','2015-12-07','2016-01-26','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','Displays a student''s individual grades from courses taken\, as well as the quarterly GPA selected by Curriculum\, Course and Section. It also includes cumulative GPA and departmental GPA calculated at t','Financial Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Current Application Count by Department and Major','2015-12-29','2016-02-17','University Registrar and Chief Officer of Enrollment Information Services','Doug Pardo','Displays a list of current application counts grouped by Department and Major. Only the current and next academic quarter are available for selection. The layout has three distinct sections: current/s','Financial Resources','SELECT   v.system_key\,  v.student_name\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''        when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,  status_dt = convert(char(10)\, a.appl_status_dt\,110)\,  s.appl_stat_descrip\,  Case when r.enroll_status = 12 then ''Yes''  end as Registered\,  a.appl_yr\,  Appl_Qtr =  case  when a.appl_qtr = 1 then ''Winter''  when a.appl_qtr = 2 then ''Spring''  when a.appl_qtr = 3 then ''Summer''  when a.appl_qtr = 4 then ''Autumn''  end\,  rcvd_dt = convert(char(10)\,a.appl_rcvd_dt\,110)\,  ar.req_major_abbr\,  mc.major_full_nm\,  addr.local_line_1\,  addr.local_city\,  addr.local_state\,  addr.local_zip_5 FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key    left join sec.addresses addr  on v.system_key = addr.system_key  left join sec.registration r  on a.system_key = r.system_key  and a.appl_yr = r.regis_yr  and a.appl_qtr = r.regis_qtr  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date','EDWAdminMart'),
('Report','All Applications','2016-01-14','2016-03-04','University Registrar and Chief Officer of Enrollment Information Services','Doug Pardo','Displays a list of student application data based on the filter criteria selected. This report contains data covered by FERPA','Financial Resources','SELECT   v.system_key\,  v.student_name\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''        when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,  status_dt = convert(char(10)\, a.appl_status_dt\,110)\,  s.appl_stat_descrip\,  Case when r.enroll_status = 12 then ''Yes''  end as Registered\,  a.appl_yr\,  Appl_Qtr =  case  when a.appl_qtr = 1 then ''Winter''  when a.appl_qtr = 2 then ''Spring''  when a.appl_qtr = 3 then ''Summer''  when a.appl_qtr = 4 then ''Autumn''  end\,  rcvd_dt = convert(char(10)\,a.appl_rcvd_dt\,110)\,  ar.req_major_abbr\,  mc.major_full_nm\,  addr.local_line_1\,  addr.local_city\,  addr.local_state\,  addr.local_zip_5 FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key    left join sec.addresses addr  on v.system_key = addr.system_key  left join sec.registration r  on a.system_key = r.system_key  and a.appl_yr = r.regis_yr  and a.appl_qtr = r.regis_qtr  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date','EDWAdminMart'),
('Report','Biennium To Date Budget Balances','2017-04-11','2017-05-31','Amy Floit','Nina Velikin','The Biennium to Date Budget Balances report shows the following funds: Regular State and provisos (GOF)\, Local (DOF-LFA)\, Indirect Cost Recovery (DOF-ICR) and Special State Appropriations for each uni','Services & Resources','SELECT  AcctngMonth\,   TransTypeCode AS TransCode\,   CASE    WHEN     TransTypeCode = 35 THEN ''Adjustment''    WHEN     TransTypeCode = 50 THEN ''Stipend''    WHEN     TransTypeCode= 70 THEN ''Salary''    WHEN     TransTypeCode= 71 THEN ''Benefits''  END AS ''transdesc''\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM         GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''1160'') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY   AcctngMonth\,   TransTypeCode ORDER BY                TransTypeCode','EDWAdminMart'),
('Report','Legacy FEC Dashboard Action List','2012-01-26','2012-03-16','Dan Schaaf','Dinah Mite Millikin\, Eric Rucker & Kirk Udovich','This report displays a tabular list of FEC''s requiring further action for the FEC Period and OrgCode(s) that you select.','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END  \, ''SAT'' = CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip  \,addr.perm_line_1  \, addr.perm_line_2  \, addr.perm_city  \, addr.perm_state  \, addr.perm_zip_5  \,st30hs.high_school_name   FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key   WHERE a.appl_yr IN(@Year)    AND a.appl_qtr IN (@Quarter)        AND a.appl_branch = @branch   AND a.appl_type = ''1''      AND (a.resident NOT IN (''5''\, ''6'') AND addr.perm_state <> ''WA''  )     AND    high_sch_gpa >= 3.4 AND  ( CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END >= 1090   OR  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END >= 23        )','EDWAdminMart'),
('Report','Legacy Grant and Contract Certification Report','2009-01-14','2009-03-05','Executive Director\, Management Accounting and Analysis','Dinah Mite Millikin\, Eric Rucker\, & Phillip Burger','This report is to certify that the work performed and that the salary distribution detailed herein is a reasonable reflection of effort for the specified reporting period and project(s).  *****    ATT','Services & Resources','SELECT DISTINCT  s1.system_key \,s1.student_no \,Student_Name = s1.student_name_lowc \,r.regis_yr \,r.regis_qtr \,yr_qtr = CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1)) \,Academic_Year =  CASE   WHEN r.regis_qtr = 1 THEN CAST((r.regis_yr - 1) AS char(4)) + ''-'' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 2 THEN CAST((r.regis_yr - 1) AS char(4)) + ''-'' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 3 THEN CAST(r.regis_yr AS char(4)) + ''-'' + CAST((r.regis_yr + 1) AS char(4))   WHEN r.regis_qtr = 4 THEN CAST(r.regis_yr AS char(4)) + ''-'' + CAST((r.regis_yr + 1) AS char(4))  END \,Academic_Quarter =   CASE   WHEN r.regis_qtr = 1 THEN ''Winter '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 2 THEN ''Spring '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 3 THEN ''Summer '' + CAST(r.regis_yr AS char(4))   WHEN r.regis_qtr = 4 THEN ''Autumn '' + CAST(r.regis_yr AS char(4))   ELSE ''ERROR''  END \,Application_Type =  CASE   WHEN a.appl_type = ''1'' THEN ''First-Years''   WHEN a.appl_type IN(''2''\,''4'') THEN ''Transfers''   WHEN a.appl_type = ''5'' THEN ''5th Years''   WHEN a.appl_type = ''G'' THEN ''Graduates''   WHEN a.appl_type IN(''E''\,''7'') THEN ''Graduate Non-Matric''   WHEN a.appl_type IN(''N''\,''6'') THEN ''Non-Matric''   WHEN a.appl_type = ''R'' THEN ''Returning Undergrad''   WHEN s1cm.deg_level <2 THEN ''Continuing Undergrad''   WHEN s1cm.deg_level >=2 THEN ''Continuing Graduate''   ELSE ''Error''  END \,Age =  CASE   WHEN s1.birth_dt >= st39.tenth_day OR s1.birth_dt IS NULL   THEN NULL   WHEN MONTH(s1.birth_dt) > MONTH(st39.tenth_day) OR (MONTH(s1.birth_dt) = MONTH(st39.tenth_day) AND DAY(s1.birth_dt) > DAY(st39.tenth_day))   THEN DATEDIFF(YY\, (s1.birth_dt)\, (st39.tenth_day)) -1   ELSE DATEDIFF(YY\, (s1.birth_dt)\, (st39.tenth_day))  END \,Gender = CASE WHEN s1.s1_gender =''M'' THEN ''Male'' WHEN s1.s1_gender = ''F'' THEN ''Female'' ELSE ''Unknown'' END \,Education_Level = CASE WHEN s1cm.deg_level <2 THEN ''Undergraduate'' WHEN s1cm.deg_level >=2 THEN ''Graduate'' ELSE ''Error'' END \,Class =  CASE   WHEN s1.class = 1 THEN ''1 (First-Year)''   WHEN s1.class = 2 THEN ''2 (Sophomore)''   WHEN s1.class = 3 THEN ''3 (Junior)''   WHEN s1.class = 4 THEN ''4 (Senior)''   WHEN s1.class = 5 THEN ''5 (Fifth-Year)''   WHEN s1.class = 6 THEN ''6 (Non-Degree)''   WHEN s1.class = 8 THEN ''8 (Graduate)''   ELSE ''Unknown''  END  ------------------------------------ ------------Program Data------------ ------------------------------------ \,s1cm.major_abbr \,mc.major_full_nm \,Dept = CASE WHEN dc.dept_abbr =''B VIS'' THEN ''NONE'' ELSE dc.dept_abbr END \,Dept_Name = CASE WHEN dc.dept_full_nm =''BOTHELL CAMPUS VISITING'' THEN ''NONE'' ELSE dc.dept_full_nm END ------------------------------- ---------Other Data-------- ------------------------------- \,HS_GPA = s2.high_sch_gpa \,Transfer_College_GPA = CASE WHEN s2.sr_col_gpa > 0 THEN s2.sr_col_gpa WHEN s2.sr_col_gpa = 0 AND s2.jr_col_gpa > 0 THEN s2.jr_col_gpa ELSE NULL END \,Last_School_Attended = CASE WHEN s1.last_sch_type = 1 THEN st30.high_school_name ELSE st02.institution_name END \,s1.s1_high_satv \,s1.s1_high_satm \,s1.s1_high_act \,s1.s1_last_toefl \,s1.s1_last_toefl_typ \,s1.s1_visa_type \,s1.s1_ins_sevis_id \,st33.home_addr_descrip \,addr.perm_country \,Registered_Credit_Hours = r.current_credits \,addr.e_mail_ucs \,addr.e_mail_other \,Qtr_GPA = CASE WHEN t.qtr_graded_attmp >0 THEN t.qtr_grade_points/t.qtr_graded_attmp ELSE NULL END \,Cumul_GPA = CASE WHEN s1.tot_graded_attmp >0 THEN s1.tot_grade_points/s1.tot_graded_attmp ELSE NULL END \,Qtr_attmp_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned   \,Qtr_earned_hrs = t.qtr_graded_attmp + t.qtr_nongrd_earned - t.qtr_deductible  \,t.scholarship_type \,st45.scholar_descrip FROM sec.student_1 s1 INNER JOIN sec.student_1_college_major s1cm  ON s1.system_key = s1cm.system_key  AND s1cm.index1 =1  AND s1cm.branch =1 INNER JOIN sec.registration r  ON s1.system_key = r.system_key INNER JOIN sec.student_2 s2  ON s1.system_key = s2.system_key INNER JOIN sec.Sr_major_code mc  ON s1cm.major_abbr = mc.major_abbr  AND s1cm.pathway = mc.major_pathway  AND mc.major_last_yr IN(SELECT MAX(mc1.major_last_yr)      FROM sec.Sr_major_code mc1      WHERE s1cm.major_abbr = mc1.major_abbr AND s1cm.pathway = mc1.major_pathway) INNER JOIN sec.sys_tbl_39_calendar st39  ON (''0'' + CAST(r.regis_yr AS char(4)) + CAST(r.regis_qtr AS char(1))) = st39.table_key INNER JOIN sec.Sr_dept_code dc  ON mc.major_dept = dc.dept_code  AND mc.major_branch = dc.dept_branch INNER JOIN sec.addresses addr  ON s1.system_key = addr.system_key LEFT JOIN sec.sr_adm_appl a  ON r.system_key = a.system_key  AND r.regis_yr = a.appl_yr  AND r.regis_qtr = a.appl_qtr LEFT JOIN sec.Sys_tbl_33_home_addr_by_code st33  ON st33.table_key =    CASE     WHEN LEN(s1.home_addr_code)= 4 THEN ''00'' + CAST(s1.home_addr_code AS char(4))    WHEN LEN(s1.home_addr_code)= 3 THEN ''000'' + CAST(s1.home_addr_code AS char(3))    ELSE ''000000''   END LEFT JOIN sec.sys_tbl_02_ed_inst_info st02  ON s1.last_sch_code = CAST(st02.table_key AS int) LEFT JOIN sec.Sys_tbl_30_highschool st30  ON  s1.la','EDWAdminMart'),
('Report','Student Athletes Earning','2017-06-27','2017-08-16','Asst VP\, HR Admin and IS\, and Asst V Provost\, Office of Acad Personnel(for faculty salaries)','EIIA','This report displays employment information for a list of current student athletes who have ever been employed by UW. Because many student athletes are only temporarily employed by UW\, the report incl','University Advancement','SELECT   v.system_key\,  v.student_name\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''        when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,  status_dt = convert(char(10)\, a.appl_status_dt\,110)\,  s.appl_stat_descrip\,  Case when r.enroll_status = 12 then ''Yes''  end as Registered\,  a.appl_yr\,  Appl_Qtr =  case  when a.appl_qtr = 1 then ''Winter''  when a.appl_qtr = 2 then ''Spring''  when a.appl_qtr = 3 then ''Summer''  when a.appl_qtr = 4 then ''Autumn''  end\,  rcvd_dt = convert(char(10)\,a.appl_rcvd_dt\,110)\,  ar.req_major_abbr\,  mc.major_full_nm\,  addr.local_line_1\,  addr.local_city\,  addr.local_state\,  addr.local_zip_5 FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key    left join sec.addresses addr  on v.system_key = addr.system_key  left join sec.registration r  on a.system_key = r.system_key  and a.appl_yr = r.regis_yr  and a.appl_qtr = r.regis_qtr  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date','EDWAdminMart'),
('Report','Predominantly Sponsor-Funded Faculty','2017-12-13','2018-02-01','Executive Director\, Management Accounting and Analysis','Kirk Udovich\, Mitch DeRidder','This report displays faculty in a department within the selected OrgCode that were paid from sponsored funds at the user-selected %. If faculty submitted one or more applications to the UW Office of S','Services & Resources','SELECT        FundCode\,      GLAccountCode\,     OriginalTransCode\,     TransDebitAmt\,      TransCreditAmt\,      TransRef2Text FROM       GLDataMart.sec.TransGLUseTax WHERE     BienniumYear = @bienyear and      TransBatchNbr = @fasno and      TransTypeCode IN (''35''\,''50'') and       TransRef2Text= @ref2 ORDER BY       FundCode\,      GLAccountCode','EDWAdminMart'),
('Report','Time Schedule Information Security TAB TEST','2018-02-06','2018-03-28','Alexis TEST','EDA TEST','SECURITY TAB TEST:: Displays time schedule\, meeting and instructor data for selected quarters\, curricula\, instructors\, courses and sections. Useful for planning next year''''''''s courses. Required parame','Financial Resources','SELECT    coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) AS Appl_level\, coalesce  (T1.ethnicity\, T2.ethnicity\, T3.ethnicity\, T4.ethnicity\, T5.ethnicity\, T6.ethnicity) AS Ethnicity\,  T1.Current_Year_Applied_Count  \, CASE WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Freshman'' THEN ''1''  WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Transfer'' THEN ''2''  WHEN  coalesce (T1.Appl_level\, T2.Appl_level\, T3.Appl_level\, T4.Appl_level\, T5.Appl_level\, T6.Appl_level) = ''Graduate'' THEN ''3''  ELSE ''0'' END AS Order_1 \, isnull (T2.Previous_Year_Applied_Count\, 0) as Previous_Year_Applied_Count \,CAST ( (isnull (T1.Current_Year_Applied_Count\, 0)  -  isnull (T2.Previous_Year_Applied_Count\, 0))  AS FLOAT ) / isnull (T1.Current_Year_Applied_Count\,1)     as Change_Applied \, isnull (T3.Current_Year_Admitted_Count\, 0) as Current_Year_Admitted_Count \, isnull (T4.Previous_Year_Admitted_Count\, 0) as Previous_Year_Admitted_Count \, CAST (( isnull (T3.Current_Year_Admitted_Count\, 0) -  isnull (T4.Previous_Year_Admitted_Count\, 0)) AS FLOAT)  / isnull (T3.Current_Year_Admitted_Count\, 1)   as Change_Admitted \, isnull (T5.Current_Year_Confirmed_Count\, 0) as Current_Year_Confirmed_Count \, isnull (T6.Previous_Year_Confirmed_Count\, 0) as Previous_Year_Confirmed_Count \, CAST ( (isnull (T5.Current_Year_Confirmed_Count\, 0) -  isnull (T6.Previous_Year_Confirmed_Count\, 0))   AS FLOAT) /  isnull (T5.Current_Year_Confirmed_Count\, 1)  AS Change_Confirmed FROM  (  SELECT  --Column1 = cast(a.appl_yr as varchar(4)) + '' Applications as of: '' + convert(nvarchar(10)\,@AppDate\,101)\, count(a.system_key) AS Current_Year_Applied_Count \,  Appl_level =    case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\, ethnicity =  addr.perm_country from sec.sr_adm_appl a   inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key  and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr   inner join sec.student_1 v on v.system_key = a.system_key  left join sec.addresses addr  on v.system_key = addr.system_key  where   a.appl_qtr = @Quarter and a.appl_yr = @year and a.appl_branch = @branch  AND v.s1_visa_type = ''F1'' and b.trans_dt =  (Select max(ab.trans_dt) from sec.sr_adm_stat_chg ab       where ab.trans_dt <= @AppDate and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab       where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  GROUP BY     case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\,  addr.perm_country  )T1  full JOIN  (  SELECT  --Column1 = cast(a.appl_yr as varchar(4)) + '' Applications as of: '' + convert(nvarchar(10)\,@AppDate\,101)\, ISNULL (count(a.system_key)\, 0) AS Previous_Year_Applied_Count \,  Appl_level =    case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\, ethnicity =        addr.perm_country from sec.sr_adm_appl a   inner join sec.sr_adm_stat_chg b on a.system_key = b.system_key  and a.appl_no = b.appl_no and a.appl_yr = b.appl_yr and a.appl_qtr = b.appl_qtr   inner join sec.student_1 v on v.system_key = a.system_key  left join sec.addresses addr  on v.system_key = addr.system_key  where   a.appl_qtr = @Quarter and a.appl_yr = (@year-1) and a.appl_branch = @branch  AND v.s1_visa_type = ''F1'' and b.trans_dt =  (Select max(trans_dt) from sec.sr_adm_stat_chg b       where b.trans_dt <= (@PrevAppDate) and b.system_key = a.system_key                and b.appl_no = a.appl_no                and b.appl_yr = a.appl_yr                and b.appl_qtr = a.appl_qtr) and b.trans_time = (Select max(ab.trans_time) from sec.sr_adm_stat_chg ab       where ab.trans_dt = b.trans_dt and ab.system_key = a.system_key                and ab.appl_no = a.appl_no                and ab.appl_yr = a.appl_yr                and ab.appl_qtr = a.appl_qtr)  GROUP BY     case       when          a.appl_type = ''1'' then ''Freshman''       when          a.appl_type in (''2''\,''4''\,''5''\,''6''\,''R''\,''N'') then ''Transfer''       when          a.appl_type in (''7''\,''E''\,''G''\,''P'') then ''Graduate''       else ''No Appl Type''    end\,  addr.perm_country  ','EDWAdminMart'),
('Report','Advance Budget Number Report_Security','2018-02-06','2018-03-28','EDA TEST','EDA TEST','SECURITY TAB TEST: This report displays a list of grant and contract budgets in advance funding status for a selected Org Code structure. No historical information is reported.','Services & Resources','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int \, @budgetperiod char(1) SET @orglevel10 = ''3060001020'' SET @budgetgroup = ''7LNur'' SET @calmonth = ''1'' SET @calyear = 2012 SET @budgetperiod = ''f'' */    DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12   THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = @fiscalyear %2  /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */  DECLARE @acctngmonth INT SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18        WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6        ELSE @calmonth + 21 END         DECLARE @bienniumyear char(4)\, @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@evenoddfy) - 1     select @fiscalYearToUse = convert(char(4)\,(CASE WHEN @evenoddfy =0   and @fiscalyear <   (SELECT max(convert(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN @fiscalyear+1 ELSE @fiscalyear end))                                  IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups   CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\, BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\,Budgetname varchar(50)\, BudgetStatusCode char(1)\, BudgetGroup varchar(50)\, BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN  Insert into #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptName\, BudgetSuperClassCode\, BudgetTypeCode\, BudgetClassCode\, Budgetnbr\, Budgetname\, BudgetStatusCode\, BudgetGroup\, BudgetGroupCode)  (SELECT DISTINCT BI.fiscalyear\,   BI.OrgCode\,   LEFT(BI.OrgCode\,7)\,  OD.OrgDeptName\,  BTC.budgetsuperclasscode\,  BTC.budgettypecode\,   BTC.budgetclasscode\,   BI.budgetnbr\,   BI.budgetname\,   BI.BudgetStatusCode\,   ''Loans To Students - Revolving''  as ''BudgetGroup''\,   ''7LNur'' as ''BudgetGroupCode''  from sec.dimBudgetTypeClassFY BTC INNER JOIN sec.dimBudgetIndexFY BI   ON BI.budgettypecode = BTC.budgettypecode   AND BI.budgetclasscode = BTC.budgetclasscode   AND BI.fiscalyear = BTC.fiscalyear   AND BI.fiscalyear = @fiscalYearToUse LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY    WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4) GROUP BY OrgName\,  left(OrgCode\,7)) OD on LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel WHERE BTC.BudgetSuperClassCode  in (''ROF31''\, ''ROF35'')   AND BI.RFAcctngCode != ''R''  AND  BI.OrgCode IN (@orglevel10))  SELECT   BTC.OrgDeptCode\,  BTC.OrgDeptName\,  BTC.OrgCode\,  BTC.BudgetGroup\,  BTC.BudgetGroupCode\,  BTC.BudgetNbr\,  BTC.BudgetName\,  BTC.BudgetStatusCode\,  (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) as ''TYPE_CLASS''\,  SUM(CASE WHEN   (   FS.TranCode =''32''    AND FS.ObjSubObjCode = ''9788''   )   THEN (FS.SummaryAmt * -1) ELSE 0 END) AS ''FundBeginningBalance''\,  SUM(CASE WHEN   (--Revenue   ((FS.TranCode IN (''30''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73''))   OR (FS.Trancode = ''32'' and FS.ObjSubObjCode != ''9788''))   AND LEFT(FS.ObjSubObjCode\,1) = ''9''  )   THEN (FS.SummaryAmt * -1) ELSE 0 END) AS ''Revenue''\,  --Expenditures without encumberances SUM(CASE WHEN   (   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')   AND LEFT(FS.ObjSubObjCode\,1) != ''9''  )  THEN (FS.SummaryAmt*-1)ELSE 0 END)  as ''Expense''\,  Sum(Case WHEN           (--Revenue   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')    AND LEFT(FS.ObjSubObjCode\,1) = ''9'')   OR          (--Expenses   FS.TranCode IN (''30''\,''32''\,''35''\,''36''\,''44''\,''50''\,''52''\,''60''\,''61''\,''62''\,''65''\,''70''\,''73'')   AND LEFT(FS.ObjSubObjCode\,1) != ''9'') THEN (FS.SummaryAmt*-1) ELSE 0 END) as ''TotalActuals''\,  --Encumberances\, which are not included in the final balance SUM(CASE WHEN   FS.TranCode IN (''40''\, ''41''\,''42''\,''43''\,''51''\,''53'')  THEN (FS.SummaryAmt*-1)ELSE 0 END) AS ''Encumbrances''  FROM   #BudgetGroups BTC INNER JOIN sec.AcctngMonthTransSum FS          ON FS.BienniumYear = @bienniumyear          AND BTC.BudgetNbr = FS.BudgetNbr   WHERE           BTC.budgetGroupCode = @budgetgroup   --DATE LOGIC --regular transactions for acctngmonths up to now AND FS.BienniumYear = @bienniumyear  AND ((CONVERT(INT\, FS .Acctngmonth) <= @acctngmonth) /*Adds in trans  for Calendar June of even fiscal year that are posted with AcctgMonth 13 & 14 of the subsequent fiscal year */  OR (@evenoddfy = 0 AND @calmonth = ''6'' AND FS.Acctngmonth IN (''13''\,''14'') AND fs.fiscalyear = CONVERT(CHAR(4)\, @fiscalyear) ) /*--Adds in trans for biennium close months 24-26 when user selects last month (June) of biennium.*/  OR (@evenoddfy = 1 AND @calmonth = ''6'' AND  FS.Acctngmonth IN (''24''\,''25''\,''26'')) /*Adds in Budget Trans for  Calendar July of odd fisca','EDWAdminMart'),
('Report','Research Budget Expenditures','2018-04-02','2018-05-22','Jim Kresl','Greg Grabowski','The Research Budget Expenditures report provides enough budget detail to assist grant administrators\, GCA Office\, and principal investigators with their research expenditures data needs at a daily ope','Human Resources','SELECT        Person.Name\, Person.IdNbr\, EmploymentStatus.EmploymentStatusCode\, EmploymentStatus.EmploymentStatusDesc\, Contact.HomePDC\, Contact.HomeDeptName\,                           EmploymentStatus.TravelCardInd\, Contact.PersonalCampusMailbox\, Contact.PrimaryUWEmailAddr\, EmploymentStatus.PrimaryEmploymentTypeDesc FROM            ODS_HEPPS.sec.Person  AS Person INNER JOIN                          ODS_HEPPS.sec.EmploymentStatus  AS EmploymentStatus ON Person.PersonKey = EmploymentStatus.PersonKey INNER JOIN                          ODS_HEPPS.sec.Contact  AS Contact ON Person.PersonKey = Contact.PersonKey WHERE        (EmploymentStatus.TravelCardInd = ''Y'') ORDER BY EmploymentStatus.EmploymentStatusCode DESC','EDWAdminMart'),
('Report','Supplier Search','2018-05-30','2018-07-19','Mark Conley','Nina Velikin','The Supplier Search report provides a list of registered UW suppliers that have completed the initial Supplier Registration Form (SRF). The report provides the supplier''s status as of the previous day','Services & Resources','SELECT DISTINCT  v.student_name\,  student_no_char =  CASE  WHEN LEN(CONVERT(CHAR(7)\,v. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, v.student_no)  WHEN LEN(CONVERT(CHAR(7)\, v.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, v.student_no)   ELSE CONVERT(CHAR(7)\, v.student_no)  END\,  v.admitted_for_yr\,  admit_qtr =  case   when v.admitted_for_qtr = 1 then ''Winter''   when v.admitted_for_qtr = 2 then ''Spring''   when v.admitted_for_qtr = 3 then ''Summer''   when v.admitted_for_qtr = 4 then ''Autumn''  end\, mmd.mm_major_abbr\,   class =   case   when v.class = 1 then ''Freshman''   when v.class = 2 then ''Sophomore''   when v.class = 3 then ''Junior''   when v.class = 4 then ''Senior''   when v.class = 5 then ''Fifth Year''   when v.class = 6 then ''Non-Matric''   when v.class = 8 then ''Graduate''   when v.class = 11 then ''1st Year Professional''   when v.class = 12 then ''2nd Year Professional''   when v.class = 13 then ''3rd Year Professional''   when v.class = 14 then ''4th Year Professional''   else ''Unassigned''  end\,  addr.e_mail_ucs\, addr.e_mail_other\,   Registered_Current =  CASE WHEN EXISTS  (SELECT r.system_key                  FROM sec.registration_courses r                  WHERE r.regis_yr=@Current_Year   and r.regis_qtr=@Current_Quarter                                  and r.course_branch = 1   and r.system_key = v.system_key)   THEN ''Yes''   ELSE ''No''  END  FROM sec.student_1 v    LEFT JOIN sec.addresses addr   ON v.system_key = addr.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @Current_Year  AND mm_qtr = @Current_Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no   WHERE   mmd.mm_major_abbr NOT in (''B PRE''\, ''B XPRE'')   AND    v.system_key  IN   (  SELECT  v.system_key   FROM sec.student_1 v  INNER JOIN sec.student_1_college_major m on v.system_key = m.system_key  INNER JOIN (     SELECT DISTINCT rc.system_key                   FROM  sec.registration_courses rc                  WHERE rc.course_branch=1          AND rc.regis_yr=@year       AND rc.regis_qtr=@Quarter       AND rc.request_status in (''A''\,''C''\,''R'')) X     ON X.system_key = v.system_key  INNER JOIN sec.sr_mini_master mm  ON v.system_key = mm_system_key  AND mm_year = @year  AND mm_qtr = @Quarter  AND mm_proc_ind = 2  INNER JOIN sec.sr_mini_master_deg_program mmd  ON mm.mm_year = mmd.mm_year  AND mm.mm_qtr = mmd.mm_qtr  AND mm.mm_proc_ind = mmd.mm_proc_ind  AND mm.mm_student_no = mmd.mm_student_no  WHERE mmd.mm_major_abbr in (''B PRE''\, ''B XPRE'') )','EDWAdminMart'),
('Report','Mockup Report','2018-06-05','2018-07-25','EIIA','Alexis Wall','Lorem ipsum dolor sit amet\, consectetur adipiscing elit. Etiam malesuada nisi ut felis aliquam placerat. Sed mollis magna condimentum ipsum consequat\, vitae egestas nisi interdum. Phasellus ac odio ne','Financial Resources','/*   --Variables for testing     --DECLARE @startdate DATETIME\, @enddate DATETIME \, @jvbud_user VARCHAR(8)     -- SET @startdate = ''1/1/2013''     -- SET @enddate = ''3/25/2014''     -- SET @jvbud_user = ''JVBO276 ''       ------------Derive all Date Variables in the Following Section  */  DECLARE @sfy char(4)\, @sby char(4)\, @sam char(2)\, @ecalyear char(4)\, @ecalmonth char(2)\, @efy char(4)\, @eby char(4)\, @eam VARCHAR(2)\, @jvbud VARCHAR(8)\, @searchtype CHAR(6)            SET @sfy = CASE WHEN MONTH(@startdate) BETWEEN 7 AND 12 THEN YEAR(@startdate) +1 ELSE YEAR(@startdate) END      SET @sby = (@sfy-(@sfy %2)-1)      SET @sam = CASE WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) + 6      WHEN @sfy % 2 = 1 AND MONTH(@startdate) BETWEEN 1 AND 6 THEN MONTH(@startdate) + 18      WHEN @sfy % 2 = 0 AND MONTH(@startdate) BETWEEN 7 AND 12 THEN MONTH(@startdate) - 6      END      SET @sam = CASE when @sam > 1 then @sam - 1 else @sam end      SET @sam = CASE WHEN LEN(@sam) = 1 THEN ''0'' + @sam ELSE @sam END      SET @ecalyear = YEAR(@enddate)      SET @ecalmonth = MONTH(@enddate)      SET @efy = CASE WHEN @ecalmonth BETWEEN 7 and 12 THEN @ecalyear +1 ELSE @ecalyear END      SET @eby = (@efy-(@efy %2)-1)      SET @eam = CASE WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 1 AND 6 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth + 6      WHEN @efy % 2 = 1 AND @ecalmonth BETWEEN 1 AND 5 THEN @ecalmonth + 18      WHEN @efy % 2 = 0 AND @ecalmonth BETWEEN 7 AND 12 THEN @ecalmonth - 6      ELSE 27 END      SET @eam = CASE WHEN LEN(@eam) = 1 THEN ''0'' + @eam ELSE @eam END       --Remove the dash character from the @jv variable if entered with a budget#      SET @jvbud = UPPER(@jvbud_user)      SET @jvbud =  CASE WHEN SUBSTRING(@jvbud\,3\,1)=''-'' AND LEFT(@jvbud\,2)!=''jv'' THEN LEFT(@jvbud\,2) + RIGHT(@jvbud\,4)      WHEN LEN(@jvbud)=''5'' THEN ''JV'' + (@jvbud)      ELSE RTRIM(LTRIM(@jvbud)) END      SET @searchtype = CASE WHEN (LEN(@jvbud) > 7 OR LEN(@jvbud) < 5) THEN ''x''      WHEN LEN(@jvbud) = 6 AND LEFT(@jvbud\,2)!=''JV'' THEN ''b''      WHEN LEN(@jvbud) = 7 AND LEFT(@jvbud\,2)= ''JV'' THEN ''j''      ELSE ''x'' END      --SELECT @searchtype      --SELECT @jvbud            --select @sby\, @sam\, @eby\, @eam        IF OBJECT_ID(''tempdb..#T1'') IS NOT NULL DROP TABLE #T1  CREATE TABLE #T1  (Bienniumyear CHAR(4)\, TranReference2 CHAR (8))      INSERT INTO #T1(BienniumYear\, TranReference2)       ( SELECT DISTINCT BienniumYear\, BAD.TranReference2       FROM sec.BudgetActivityDetail BAD       WHERE (BAD.BudgetNbr = @jvbud        AND LEFT(BAD.TranReference2\,2)=''JV''        AND BAD.BienniumYear BETWEEN @sby AND @eby        AND BAD.TranCode = ''35''        AND BAD.TranPostingDate BETWEEN @startdate AND @enddate        AND @searchtype = ''b''       )      )                  SELECT        BAD.BienniumYear\,        BAD.BudgetNbr\,        BudgetName\,        AccountCode\,        OrgCode\,        OrgName\,        TranAmount\,        TranCode\,        TranDate1\,        TranPostingDate\,       BAD.TranReference2\,        TranReference3\,        TranDesc\,        TranFTE\,        PositionNbr\,        BAD.TDPrimaryKey\,        AppTranOriginating      FROM sec.BudgetActivityDetail BAD       LEFT JOIN #T1        ON BAD.TranReference2 = #T1.TranReference2      WHERE      (       (@searchtype = ''b'' AND #T1.TranReference2 IS NOT NULL)       OR       (@searchtype = ''j'' AND @jvbud = BAD.TranReference2)      ) and      BAD.BienniumYear BETWEEN @sby AND @eby      AND BAD.TranCode = ''35''      AND TranPostingDate BETWEEN @startdate AND @enddate      AND (BAD.BienniumYear + BAD.Acctgmonth) BETWEEN (@sby + @sam) AND (@eby + @eam)      ORDER BY BAD.TranReference2\, BAD.BudgetNbr','EDWAdminMart'),
('Report','NSF Compensation by Fiscal Year','2018-11-18','2019-01-07','Kirsten Defries','Kirk Udovich','The National Science Foundation (NSF) limits compensation (defined as IBS) for \"Senior Personnel\" to no more than two months on all NSF Awards in any one year (defined as UW fiscal\, 7/1/xx-6/30/xx). T','Human Resources','/* DECLARE @startdate datetime\, @enddate datetime\, @oac varchar(4)\, @tctype varchar (2) SET @startdate = ''06-01-2008'' SET @enddate = ''06-24-2008'' SET@oac=''DE'' SET @tctype=''30'' */  DECLARE @fiscalyear char(4)\, @sfy char(4)\, @efy char(4)\, @cfy char(4)\, @sby char(4)\, @eby char(4)\, @cby char(4)\, @sam varchar(2)\, @eam varchar(2) SET @sfy = CASE WHEN DATEPART(MONTH\,@startdate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@startdate) +1 ELSE DATEPART(YEAR\,@startdate) END SET @efy = CASE WHEN DATEPART(MONTH\,@enddate) BETWEEN 7 and 12 THEN DATEPART(YEAR\,@enddate) +1 ELSE DATEPART(YEAR\,@enddate) END SET @cfy = CASE WHEN DATEPART(MONTH\,GETDATE()) BETWEEN 7 and 12 THEN DATEPART(YEAR\,GETDATE()) +1 ELSE DATEPART(YEAR\,GETDATE()) END SET @sby = @sfy-(@sfy %2)-1 SET @eby = @efy-(@efy %2)-1 SET @cby = @cfy-(@cfy %2)-1 SET @sam = CASE WHEN DATEPART(Day\, @startdate)>''7'' THEN     (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 6     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 6      WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 18     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 6     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''25''     ELSE ''26'' END)    ELSE (CASE WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 9 AND 12 THEN DATEPART(MONTH\,@startdate) - 7     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@startdate) + 5     WHEN @sfy % 2 = 1 and DATEPART(MONTH\,@startdate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@startdate) + 17     WHEN @sfy % 2 = 0 and DATEPART(MONTH\,@startdate) = ''7'' THEN ''24''     ELSE ''25'' END) END IF @sam = ''24'' AND DATEPART(DAY\,@startdate) <8 OR @sam IN (''25''\,''26'') BEGIN SET @sby = @sby-2 END SET @eam =  CASE WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) + 6             WHEN @efy % 2 = 1 and DATEPART(MONTH\,@enddate) BETWEEN 1 AND 6 THEN DATEPART(MONTH\,@enddate)+ 18             WHEN @efy % 2 = 0 and DATEPART(MONTH\,@enddate) BETWEEN 7 AND 12 THEN DATEPART(MONTH\,@enddate) - 6             ELSE DATEPART(MONTH\,@enddate) - 6 END; IF LEN(RTRIM(@sam))=1 BEGIN SET @sam = ''0'' + @sam END IF LEN(RTRIM(@eam))=1 BEGIN SET @eam = ''0'' + @eam END  IF @sby = @cby AND NOT (DATEPART(MONTH\,@startdate) IN (''7''\,''8'') AND @sfy % 2 = 0) BEGIN SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\, EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, PriorPeriodInd AS ''PriorYearInd''\,   OriginatingSystemCode+OriginatingAreaCode AS ''ORGSYS''\, CTIBudgetNbr AS ''Serv_Budget''\, '''' AS ''Serv_SL''\,   CTIAccountCode\, CTIAccountCode AS ''Serv_EXP_CDE''\, '''' AS ''CRTask''\, '''' AS ''CROption''\, '''' AS ''CRProject''\, FASRunNbr FROM  sec.BudgetActivityDetailCurrentBiennium BAD WHERE BAD.BienniumYear + BAD.AcctgMonth BETWEEN @sby + @sam AND @eby + @eam  AND TranCode = ''65''  AND @oac = CASE WHEN TranCode = ''60'' OR TranCode = ''65''  THEN LEFT(DocumentNbr\,2) ELSE OriginatingAreaCode END  AND TranPostingDate BETWEEN @startdate AND @enddate  AND DataSource != ''XE1''  AND ISNULL(LEFT(CTIAccountCode\,2)\,0) = CASE WHEN TranCode=''65'' THEN ''96''      WHEN TranCode=''60'' THEN ''21'' ELSE 0 END ORDER BY TranPostingDate\, BudgetNbr  END ELSE  SELECT TDPrimaryKey\, TranCode\, TranPostingDate\, AcctgMonth\, '''' AS ''ProcessTimeStamp''\, OriginatingAreaCode\, BudgetNbr AS ''Req_BudgetNumber''\, FundCode AS ''Req_FND''\,   AppropriationCode AS ''Req_App''\,'''' AS ''Req_SL''\,AccountCode AS ''Req_EXP_CDE''\, PCATaskCodeOrig AS ''Task''\,   PCAOptionCodeOrig AS ''Option''\, PCAProjectCodeOrig AS ''Project''\, DocumentNbr\,EncumbranceLiqCode AS ''LiquidationCd''\,   CommodityCode AS ''CommodityCd''\, TranQuantity AS ''Quantity''\, PositionNbr AS ''PositionNumber''\, JobClassCode AS ''OccupationCode''\,   ServicePeriod AS ''Service''\, TranFTE AS ''FTE''\,TranAmount\,TranDate1 AS ''DocumentDate''\, TranDesc AS ''Name''\,   CashFlag\, CheckFlag\,MoneyOrderFlag\, BankCode\, TranReference1 AS ''ReferenceNumber''\,  TranReference3 AS ''InvoiceNumber''\, EncNbr AS ''RequisitionNumber''\, Prior','EDWAdminMart'),
('Report','Learning Spaces Policy','2019-05-22','2019-07-11','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','This report is used by Time Schedule coordinators to comply with the Learning Spaces Policy. Details regarding the policy are available at https://registrar.washington.edu/classrooms/learning-spaces-f','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','EDWAdminMart'),
('Report','Cost Share Commitments and Contributions','2019-05-21','2019-07-10','Kirsten DeFries','Nina Velikin','This report shows summary information on all active Sponsored Awards (status 1\, 2 or 3) with a Cost Share Commitment entered into the Cost Share Summary system.  Summary information is provided on the','Services & Resources','SELECT sr_adm_appl.appl_qtr \, sr_adm_appl.appl_yr \, sr_adm_appl.appl_branch \, sr_adm_appl.appl_status_rsn \, v.student_no \, v.student_name_lowc \, v.system_key \, sr_adm_appl.appl_status \, sr_adm_appl.adv_reg_prt_dt \, registration.regis_yr \, registration.regis_qtr \, registration.special_program AS Expr1 \, registration.advising_date \, registration.advising_type \, registration.regis_class \, addr.e_mail_ucs \, addr.e_mail_other \, AppStatus = CASE   WHEN sr_adm_appl.appl_status = 1 THEN ''Application Received -- Not Processed''  WHEN sr_adm_appl.appl_status = 2 THEN ''Incomplete''  WHEN sr_adm_appl.appl_status = 4 THEN ''File Complete and Sent to Department''  WHEN sr_adm_appl.appl_status = 5 THEN ''HOLD- Requested Additional Documenation''  WHEN sr_adm_appl.appl_status = 7 THEN ''Applicant Withdrew Application''  WHEN sr_adm_appl.appl_status = 8 THEN ''Applicant is Denied Admission''  WHEN sr_adm_appl.appl_status = 9 THEN ''Temp Hold- File is Complete and Sent to Evaluators''  WHEN sr_adm_appl.appl_status = 10 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 12 THEN ''Applicant has Registered for Classes''  WHEN sr_adm_appl.appl_status = 14 THEN ''Applicant is Admited to the University''  WHEN sr_adm_appl.appl_status = 15 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 16 THEN ''Applicant is Paid Confirmation Fee''  WHEN sr_adm_appl.appl_status = 17 THEN ''Files Complete - Too Late for an Admissions Decision''  WHEN sr_adm_appl.appl_status = 24 THEN ''Applicant Declined Our Offer of Admission''  ELSE ''NON UWB App Status''  END \, (  SELECT COUNT(*) AS Expr1  FROM sec.sr_adm_appl AS app_sea  WHERE (sr_adm_appl.appl_yr = appl_yr) AND (sr_adm_appl.appl_qtr = appl_qtr) AND (sr_adm_appl.system_key = system_key) AND (appl_branch = 0) ) AS seattle_appl_count \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 0  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Seattle_app \, CASE   WHEN (   SELECT COUNT(*)   FROM sec.sr_adm_appl app_sea   WHERE sr_adm_appl.appl_yr = app_sea.appl_yr AND sr_adm_appl.appl_qtr = app_sea.appl_qtr AND sr_adm_appl.system_key = app_sea.system_key AND app_sea.appl_branch = 2  ) = 0 THEN ''No''  ELSE ''Yes''   END AS Tacoma_app \, CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr = b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status IN(10\,14)  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status IN(10\,14)  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch   from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status IN(10\,14)  ) = 2 THEN ''Tacoma'' /* WHEN ((select appl_branch from sr_adm_appl b               where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and                                            b.appl_status IN(10\,14)) AND  (select appl_branch from sr_adm_appl d               where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and                                            d.appl_status IN(10\,14) )) THEN ''Seattle and Tacoma''*/  --Build Case for Seattle- And Tacoma Acceptance  --Build acceptance for all three campus                ELSE ''None'' END AS Accepted \,   CASE   WHEN (   select appl_branch    from sec.sr_adm_appl b   where sr_adm_appl.appl_yr =b.appl_yr and sr_adm_appl.appl_qtr = b.appl_qtr and sr_adm_appl.system_key = b.system_key and b.appl_status = 16  ) = 0 THEN ''Seattle''  WHEN (   select appl_branch    from sec.sr_adm_appl c   where sr_adm_appl.appl_yr = c.appl_yr and sr_adm_appl.appl_qtr = c.appl_qtr and sr_adm_appl.system_key = c.system_key and c.appl_status = 16  ) = 1 THEN ''Bothell''  WHEN (   select appl_branch from sec.sr_adm_appl d   where sr_adm_appl.appl_yr = d.appl_yr and sr_adm_appl.appl_qtr = d.appl_qtr and sr_adm_appl.system_key = d.system_key and d.appl_status = 16  ) = 2 THEN ''Tacoma''  ELSE ''None''  END AS Confirmed   \,HST_Received = appl_doc_rcvd_dt \,Current_Credits = registration.current_credits \,mpt.test_dt \,mpt.test_type \,mpt.test_score  FROM sec.student_1 v INNER JOIN sec.sr_adm_appl ON v.system_key = sr_adm_appl.system_key INNER JOIN sec.registration ON v.system_key = registration.system_key INNER JOIN sec.registration_regis_col_major rcm ON registration.system_key = rcm.system_key  AND registration.regis_yr = rcm.regis_yr  AND registration.regis_qtr = rcm.regis_qtr  INNER JOIN sec.addresses addr ON addr.system_key = v.system_key LEFT JOIN (  SELECT *   FROM sec.sr_adm_applicant_docs  WHERE appl','EDWAdminMart'),
('Report','Study Abroad Students by Unit','2019-07-12','2019-08-31','University Registrar and Chief Officer of Enrollment Information Services','Tom Escobar','This report displays a list of students that have studied abroad for a given academic unit and time period. The report is intended to be used by the Office of Global affairs and departmental administr','Financial Resources','SELECT  * FROM    Report WHERE ReportCodeNbr = @rptcd','EDWAdminMart'),
('Report','Immunization Report','2019-09-03','2019-10-23','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','This report displays a list of students and their immunization status. The report is intended to be used by Hall Health and Health Sciences Immunization Program (HSIP) so that they can identify studen','Financial Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','GL Transactions by Month','2011-04-19','2011-06-08','Dan Schaaf','Dinah Mite Millikin','The GL Transactions by Month report shows transactions records by accounting month for a specific GL Account / Fund Code combination.','Services & Resources','SELECT rvg.FACILITY_CODE FacilityCode\,        rvg.ROOM_NUMBER RoomNumber\,        rvg.ORGANIZATION assignee_organization\,         rvg.EMPLOYEE_ID assignee_eid\,        rvg.budget_number\,        RTRIM(bi.budgetname) AS budget_name  FROM dbo.rooms_vs_grants rvg LEFT JOIN dbo.budgetindexcurrentbiennium bi      ON rvg.budget_number = bi.BudgetNbr WHERE rvg.FACILITY_CODE = @facilitycode AND       rvg.ROOM_NUMBER = @roomno AND       rvg.ORGANIZATION = @assignorg AND       rvg.EMPLOYEE_ID = @empid','EDWAdminMart'),
('Report','Legacy HR/P Check History','2019-10-18','2019-12-07','Please see Interpretation tab in BI Portal for information.','Alin Hunter','This report displays gross amount earned and net amount paid to a specific employee. It can be used to verify prior employment and payment history.  For Usage Guide\, please go back to BI Portal Interp','University Advancement','SELECT   v.system_key\,  v.student_name\,  a.appl_type\,  Appl_level =    case       when          a.appl_type = ''1'' then ''FR''       when          a.appl_type = ''2'' then ''UG 2yr''        when          a.appl_type = ''4'' then ''UG 4yr''       when           a.appl_type = ''6'' OR          a.appl_type = ''R'' then ''UG (Returning)''       when          a.appl_type = ''5'' then ''5YR''       when          a.appl_type = ''N''OR          a.appl_type = ''P'' then ''NM''       when          a.appl_type = ''7'' then ''GR (Returning)''       when          a.appl_type = ''G'' then ''GR (Gradute)''       when          a.appl_type = ''E'' then ''GNM''       when          a.appl_type = ''P'' then ''PRO''       else ''No Appl Type''    end\,  a.appl_status\,  status_dt = convert(char(10)\, a.appl_status_dt\,110)\,  s.appl_stat_descrip\,  Case when r.enroll_status = 12 then ''Yes''  end as Registered\,  a.appl_yr\,  Appl_Qtr =  case  when a.appl_qtr = 1 then ''Winter''  when a.appl_qtr = 2 then ''Spring''  when a.appl_qtr = 3 then ''Summer''  when a.appl_qtr = 4 then ''Autumn''  end\,  rcvd_dt = convert(char(10)\,a.appl_rcvd_dt\,110)\,  ar.req_major_abbr\,  mc.major_full_nm\,  addr.local_line_1\,  addr.local_city\,  addr.local_state\,  addr.local_zip_5 FROM sec.student_1 v  inner join sec.sr_adm_appl a  on v.system_key = a.system_key   inner join sec.sr_adm_appl_req_col_major ar  on a.appl_yr = ar.appl_yr   and a.appl_qtr = ar.appl_qtr   and a.appl_no = ar.appl_no   and a.system_key = ar.system_key   inner join sec.sr_major_code mc  on ar.req_major_abbr = mc.major_abbr   inner join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key    left join sec.addresses addr  on v.system_key = addr.system_key  left join sec.registration r  on a.system_key = r.system_key  and a.appl_yr = r.regis_yr  and a.appl_qtr = r.regis_qtr  WHERE   a.appl_branch = 1 and mc.major_pathway = 0 AND (a.appl_yr = @year) AND (a.appl_qtr = @Quarter) And a.appl_rcvd_dt > @rcvd_date','EDWAdminMart'),
('Report','Legacy HR/P Funding History','2019-11-07','2019-12-27','Please see Interpretation tab in BI Portal for information.','Van Nguyen','This report displays details of funds used to pay a specific employee. It can be used to verify which departments were funding specific employees.  For Usage Guide\, please go back to BI Portal Interpr','University Advancement','/*DECLARE @orglevel10 char(10)\, @budgetgroup char(6)\, @calmonth char(2)\, @calyear int \, @budgetperiod char(1) SET @orglevel10 = ''2600004000'' SET @budgetgroup = ''6GD'' SET @calmonth = ''5'' SET @calyear = 2011 SET @budgetperiod = ''B''  */    DECLARE @fiscalyear int SET @fiscalyear = CASE WHEN @calmonth BETWEEN 7 AND 12   THEN @calyear + 1 ELSE @calyear END DECLARE @evenoddfy int SET @evenoddfy = convert(int\,@fiscalyear)%2  /* Derive the Accounting Month from combination of the fiscalyear AND the Cal Month */  DECLARE @acctngmonth varchar(2) SET @acctngmonth = CASE WHEN @evenoddfy = 0 AND @calmonth BETWEEN 1 AND 6 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth + 6        WHEN @evenoddfy = 1 AND @calmonth BETWEEN 1 AND 5 THEN @calmonth + 18        WHEN @evenoddfy = 0 AND @calmonth BETWEEN 7 AND 12 THEN @calmonth - 6        ELSE @calmonth + 21 END         DECLARE @bienniumyear char(4)\, @fiscalYearToUse char(4) SET @bienniumyear = @fiscalyear - (@fiscalyear %2) - 1     select @fiscalYearToUse = convert(char(4)\,(CASE WHEN @evenoddfy =0   and @fiscalyear <   (SELECT max(convert(int\,fiscalyear))  FROM sec.dimBudgetIndexFY)   THEN @fiscalyear+1 ELSE @fiscalyear end))   IF OBJECT_ID(''tempdb..#BudgetGroups'') IS NOT NULL DROP TABLE #BudgetGroups   CREATE TABLE #BudgetGroups  (Fiscalyear char(4)\, Orgcode char(10)\, OrgDeptCode char(7)\, OrgDeptName varchar(50)\, BudgetSuperClassCode char(5)\, BudgetTypeCode char(2)\, BudgetClassCode char(2)\, Budgetnbr char(6)\,Budgetname varchar(50)\, BudgetStatusCode char(1)\, BudgetGroup varchar(50)\, BudgetGroupCode varchar(10))  IF @budgetperiod = ''b''  BEGIN Insert into #BudgetGroups (FiscalYear\, OrgCode\, OrgDeptCode\, OrgDeptName\, BudgetSuperClassCode\, BudgetTypeCode\, BudgetClassCode\, Budgetnbr\, Budgetname\, BudgetStatusCode\, BudgetGroup\, BudgetGroupCode)  (SELECT DISTINCT BI.fiscalyear \, BI.OrgCode \, LEFT(BI.OrgCode\,7) \, OD.OrgDeptName \, BTC.budgetsuperclasscode \, BTC.budgettypecode \, BTC.budgetclasscode \, BI.budgetnbr \, BI.budgetname \, BI.BudgetStatusCode \, CASE WHEN   BTC.BudgetSuperClassCode  = ''ROF35'' AND BI.RFAcctngCode = ''R'' THEN ''Gifts and Discretionary''  WHEN BTC.budgetsuperclasscode = ''ROF40'' AND BI.RFAcctngCode != ''R'' THEN ''Self Sustaining - Auxillary Ed Activities''  WHEN  (BTC.budgetsuperclasscode = ''ROF70'' AND BI.RFAcctngCode != ''R'' ) OR (BI.BudgetTypeCode = ''56'' and BI.BudgetClassCode = ''04'')  THEN ''Self Sustaining - Service Funds''   WHEN BI.BudgetTypeCode = ''05'' and BI.BudgetClassCode = ''52'' THEN ''Clinical Medicine Fund'' ELSE BTC.budgetsuperclasscode END AS ''BudgetGroup''\, CASE   WHEN BTC.BudgetSuperClassCode  = ''ROF35'' AND BI.RFAcctngCode = ''R'' THEN ''6GD''   WHEN BTC.budgetsuperclasscode = ''ROF40'' AND BI.RFAcctngCode != ''R'' THEN ''8SAEA''   WHEN  (BTC.budgetsuperclasscode = ''ROF70'' AND BI.RFAcctngCode != ''R'' ) OR (BI.BudgetTypeCode = ''56'' and BI.BudgetClassCode = ''04'')  THEN ''9SSSF''   WHEN BI.BudgetTypeCode = ''05'' and BI.BudgetClassCode = ''52'' THEN ''9CMF'' ELSE Budgetsuperclasscode END AS ''BudgetGroupCode'' FROM sec.dimBudgetTypeClassFY BTC  INNER JOIN sec.dimBudgetIndexFY BI  ON BI.budgettypecode = BTC.budgettypecode  AND BI.budgetclasscode = BTC.budgetclasscode  AND  BI.fiscalyear = BTC.fiscalyear  LEFT JOIN (SELECT OrgName as ''OrgDeptname''\,  LEFT(OrgCode\,7) as ''OrgDeptLevel'' FROM  sec.dimOrganizationFY     WHERE FiscalYear = @fiscalyear and OrgLevelCode in (3\,4)  GROUP BY OrgName\,  left(OrgCode\,7)) OD  on LEFT(BI.OrgCode\,7) = OD.OrgDeptLevel WHERE (  (BTC.BudgetSuperClassCode IN (''ROF40''\,  ''ROF70''))   OR (BTC.BudgetTypeCode = ''56'' AND BTC.BudgetClassCode = ''04'')   OR (BTC.BudgetTypeCode = ''05'' AND BTC.BudgetClassCode = ''52'')  OR (BTC.BudgetSuperClassCode = ''ROF35'' AND BI.RFAcctngCode = ''R''))   AND BTC.FiscalYear = @fiscalYearToUse AND BI.OrgCode IN (@orglevel10))  SELECT      BTC.OrgDeptCode \, BTC.OrgDeptName \, btc.OrgCode \, BTC.BudgetGroup \, BTC.BudgetGroupCode \, BTC.BudgetNbr \, BTC.BudgetName \, BTC.BudgetStatusCode \, (BTC.BudgetTypecode + ''-'' + BTC.budgetclasscode) AS ''TYPE_CLASS'' \, SUM(CASE WHEN FS.TranCode =''32''  AND FS.ObjSubObjCode = ''9788'' THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''FundBeginningBalance''\,  SUM(CASE WHEN (/*Revenue*/   ((FS.TranCode IN (''30''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'')) OR(FS.Trancode = ''32'' AND FS.ObjSubObjCode != ''9788'')) AND LEFT(FS.ObjSubObjCode\, 1) = ''9'') THEN (FS.SummaryAmt * - 1) ELSE 0 END)  AS ''Revenue'' \, /*Expenditures without encumbrances*/  SUM(CASE WHEN (FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) != ''9'') THEN (FS.SummaryAmt * - 1) ELSE 0 END) AS ''Expense''\,  SUM(CASE WHEN   (/*Revenue*/ FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) = ''9'')   OR (/*Expenses*/ FS.TranCode IN (''30''\, ''32''\, ''35''\, ''36''\, ''44''\, ''50''\, ''52''\, ''60''\, ''61''\, ''62''\, ''65''\, ''70''\, ''73'') AND LEFT(FS.ObjSubObjCode\, 1) != ''9'')   THEN (FS.SummaryAmt * -','EDWAdminMart'),
('Report','Current Student Information','2019-10-23','2019-12-12','University Registrar and Chief Officer of Enrollment Information Services','Bill Abella','This report displays attributes about the population of currently enrolled students for the selected Major(s)/Minor(s). The report also displays student demographic information\, contact information\, m','Financial Resources','SELECT  AcctngMonth\,   TransTypeCode AS TransCode\,   CASE    WHEN     TransTypeCode = 35 THEN ''Adjustment''    WHEN     TransTypeCode = 50 THEN ''Stipend''    WHEN     TransTypeCode= 70 THEN ''Salary''    WHEN     TransTypeCode= 71 THEN ''Benefits''  END AS ''transdesc''\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM         GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''1160'') AND (BienniumYear = @BienniumYear) AND (AcctngMonth = @acctmonth) GROUP BY   AcctngMonth\,   TransTypeCode ORDER BY                TransTypeCode','EDWAdminMart'),
('Report','Legacy HR/P Employee Search','2020-01-29','2020-01-29','Please see Interpretation tab in BI Portal for information.','Steve Shen','This report displays Employee Name\, Employee Identification Number (EID) and Home Department\, along with links to available reports for the employee. If you do not have access to some of the linked re','University Advancement','SELECT DISTINCT  s1.system_key \,s1.student_name \,''First Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, 1\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))) \,''Middle Name'' = SUBSTRING(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name))\, CHARINDEX('' ''\,SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, LEN(s1.student_name)))+1\,LEN(SUBSTRING(s1.student_name\, CHARINDEX(''\,''\,s1.student_name) + 1\, 1))) \,''Last Name'' = SUBSTRING(s1.student_name\, 1\, CHARINDEX(''\,''\,s1.student_name)-1) \,student_no_char = CASE  WHEN LEN(CONVERT(CHAR(7)\,s1. student_no)) = 6 THEN ''0'' + CONVERT(CHAR(7)\, s1.student_no)  WHEN LEN(CONVERT(CHAR(7)\, s1.student_no)) = 5 THEN ''00'' + CONVERT(CHAR(7)\, s1.student_no)   ELSE CONVERT(CHAR(7)\, s1.student_no)  END \,''SAT_CR'' =  CASE   WHEN s1.s1_high_satv > 0   THEN s1.s1_high_satv    ELSE NULL  END \,''SAT_Math'' =  CASE   WHEN  s1.s1_high_satm > 0   THEN  s1.s1_high_satm   ELSE NULL  END  \, ''SAT'' = CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END \,''ACT Composite'' =  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END \,high_sch_gpa \,a.trans_gpa \,''Cumulative GPA'' = CASE WHEN s1.tot_graded_attmp > 0 THEN (s1.tot_grade_points/s1.tot_graded_attmp) ELSE 0 END \,appl_type \, a.appl_status  \, s.appl_stat_descrip  \,addr.perm_line_1  \, addr.perm_line_2  \, addr.perm_city  \, addr.perm_state  \, addr.perm_zip_5  \,st30hs.high_school_name   FROM sec.student_1 s1  INNER JOIN sec.sr_adm_appl a ON s1.system_key = a.system_key   LEFT join sec.sys_tbl_72_appl_status s  on a.appl_status = s.table_key  left join sec.addresses addr  on s1.system_key = addr.system_key LEFT JOIN sec.sys_tbl_30_highschool st30hs ON a.high_sch_code = st30hs.table_key   WHERE a.appl_yr IN(@Year)    AND a.appl_qtr IN (@Quarter)        AND a.appl_branch = @branch   AND a.appl_type = ''1''      AND (a.resident NOT IN (''5''\, ''6'') AND addr.perm_state <> ''WA''  )     AND    high_sch_gpa >= 3.4 AND  ( CASE   WHEN s1.s1_high_satv > 0 AND s1.s1_high_satm > 0   THEN s1.s1_high_satv + s1.s1_high_satm   ELSE NULL  END >= 1090   OR  CASE   WHEN s1.s1_high_act > 0   THEN s1.s1_high_act   ELSE NULL  END >= 23        )','EDWAdminMart'),
('Cube','EDWAdminMart','2007-07-21','2020-01-20','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','EDW report usage statistics since 2008','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','EDWAdminMart'),
('Cube','Fin Activity Biennium 2007','2007-07-21','2007-07-01','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','Full 2007 Biennium','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2007 '),
('Cube','Fin Activity Biennium 2009','2007-07-21','2009-07-01','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','Full 2009 Biennium','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2009'),
('Cube','Fin Activity Biennium 2011','2007-07-21','2011-06-27','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','Full 2011 Biennium','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2011'),
('Cube','Fin Activity Biennium 2013','2007-07-21','2013-06-28','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','Full 2013 Biennium','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2013'),
('Cube','Fin Activity Biennium 2015','2007-07-21','2015-06-29','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','2015 Biennium to date','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2015'),
('Cube','Fin Activity Biennium 2017','2007-07-21','2017-06-30','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','2017 Biennium to date','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2017'),
('Cube','Financial Activity Biennium 2019','2007-07-21','2019-07-01','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','2019 Biennium to date','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','FinancialActivity2019'),
('Cube','ResearchAdminData','2007-07-21','2018-09-20','University Registrar and Chief Officer of Enrollment Information Services','Enterprise Reporting & Analytics','The ResearchAdminData Cube contains Proposal\, Award\, and Expenditure data for sponsored research at the University of Washington.','Research Administration','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Major Registrations','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Trends in Student Majors</em></strong> dashboard helps track the expansion and contraction of student major registrations over time\, at all levels (Bachelor&rsquo;s\, Master&rsquo;s\,','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Size of Academic Units and Type of Students Served','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Size of Academic Units and Type of Student Served</em></strong> dashboard offers a view of the relative size of academic units and the composition of their student body in terms of ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Undergraduate Student Academic Origin','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lilac','<p>      The <strong><em>Trends in Undergraduate Student Academic Origin</em></strong> dashboard gives users an overview of students’ points of entry into their      undergraduate program at the UW\, a','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Student Geographic Origin','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Trends in Student Geographic Origin</em></strong> dashboard offers academic units and major programs an overview of the composition of their student body in terms of residency (Wash','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Diversity Profile and Trends','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Diversity Profile and Trends</em></strong> dashboard offers academic units and majors an overview of the diversity of their student body\, both in a reference quarter and over time. ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Undergraduate Student Academic Performance','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Undergraduate Student Academic Performance</strong></em> dashboard provides insight into the average academic performance and credit load of     matriculated undergraduate stud','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Graduate/Professional Student Academic Performance','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Graduate/Professional Student Academic Performance</em></strong> dashboard provides insight into the average academic performance and credit load of     matriculated graduate a','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Degree Majors','2007-07-21','2014-04-11','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Trends in Degree Majors</em></strong> dashboard helps track the expansion and contraction of degree major production over time\, at all     levels (Bachelor’s\, Master’s\, etc.) i','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary and Trends - Degree Attributes','2007-07-21','2014-04-11','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Summary and Trends – Degree Attributes</em></strong> dashboard provides information about several trends in degree attainment: 1) how many     degrees students earn simultaneou','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Graduating Student Profile','2007-07-21','2014-04-11','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Graduating Students Profile</em></strong> dashboard displays the number of students graduating with a degree major from a given academic     unit\, and allows the user to break ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Degree Summary','2007-07-21','2014-04-11','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Degree Summary</strong></em> dashboard displays the number of degrees awarded for a given academic unit\, and allows the user to break the     number of degrees down by various ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Degree Summary - Unit Comparisons','2007-07-21','2014-04-11','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic',' <p>     The <strong><em>Degree Summary – Unit Comparisons</strong></em> dashboard provides a comparative display of the number of degrees associated with two     academic units\, and allows the user t','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Undergraduate One-Quarter and One-Year Retention Trends','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic',' <p>     The <strong><em>Undergraduate One-Quarter and One-Year Retention Trends</em></strong> dashboard reports trends in one-quarter and one-year undergraduate     retention rates for each campus\, a','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Undergraduate Graduation Rates and Time to Degree','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Undergraduate Graduation Rates and Time to Degree </em></strong>dashboard reports graduation rate and time to degree trends for     undergraduate students\, and allows this info','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Undergraduate Student Persistence and Graduation by Year of Study','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>     The <strong><em>Undergraduate Student Persistence and Graduation by Year of Study</em></strong> dashboard tracks the retention\, persistence and graduation     patterns of recent undergraduate ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Student Credit Hours','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The&nbsp;<em><strong>Trends in Student Credit Hours</strong></em><strong><em>&nbsp;</em></strong>dashboard helps track the expansion and contraction of student credit hours over time\, at all levels','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Student Characteristics by Course Taken','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The&nbsp;<strong><em>Student Characteristics by Curriculum&nbsp;</em></strong>&nbsp;dashboard displays the number of students who are registered for at least one class at a given level in a given c','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary of Teaching Activity (SCH)','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The&nbsp;<em><strong>Summary of Teaching Activity (SCH)</strong></em>&nbsp;dashboard displays the number student credit hours (SCH) associated with a given academic unit or curriculum\, and allows t','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary of Teaching Activity (SCH) - Unit Comparisons','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Summary of Teaching Activity (SCH) &ndash; Unit Comparisons</em></strong> dashboard provides a comparative display of the number of student credit hours (SCH) associated with two ac','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Enrollment Summary','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Enrollment Summary</em></strong> dashboard displays the number of students enrolled in a given academic unit or major\, and allows the user to break the enrollment down by various ch','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Enrollment Summary - Unit Comparisons','2007-07-21','2018-04-06','University Registrar and Chief Officer of Enrollment Information Services','Nevena Lalic','<p>The <strong><em>Enrollment Summary &ndash; Unit Comparisons</em></strong> dashboard provides a comparative display of the number of students enrolled in two academic units or majors\, and allows the','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Current Course Demand','2007-07-21','2019-05-20','University Registrar and Chief Officer of Enrollment Information Services','Dev Nambi','<p>The <em><strong>Current Course Demand</strong></em> dashboard uses Notify.UW data as a proxy for demonstrating the demand for a selected course. The count of notify subscriptions for a course in th','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Current Notify Course Demand','2007-07-21','2019-05-20','University Registrar and Chief Officer of Enrollment Information Services','Dev Nambi','<p>The <em><strong>Current Notify Course Demand</strong></em> dashboard displays the count of Notify subscribers who successfully register for a course compared with those who did not register\, in all','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Trends in Course Demand','2007-07-21','2019-05-20','University Registrar and Chief Officer of Enrollment Information Services','Dev Nambi','<p>The <em><strong>Trends in Course Demand</strong></em> dashboard uses Notify.UW data as a proxy for understanding demand for a given course over time. The count of notify subscriptions for a course ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary of Research Proposal Counts and Amounts','2007-07-21','2019-08-01','Jim Kresl','Grzegorz Grabowski','<p><strong>The Summary of Research Proposal&nbsp;Counts and Amounts</strong> dashboard facilitates understanding of trends for research proposal&nbsp;counts and nominal research proposal&nbsp;amounts ','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary of Research Award Counts and Amounts','2007-07-21','2019-08-01','Jim Kresl','Grzegorz Grabowski','<p><strong>The Summary of Research Award Counts and Amounts</strong> dashboard facilitates understanding of trends for research award counts and nominal research award amounts over time\, broken down b','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Course Progress in Major','2007-07-21','2019-10-22','University Registrar and Chief Officer of Enrollment Information Services','Dev Nambi and Crystal Eney','<p> The <strong>Course Progress in Major</strong> dashboard displays the course status (grades and registration) for courses commonly taken by students in each major. These ‘frequent’ courses are typi','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Exit Survey for Doctoral','2007-07-21','2017-10-30','University Registrar and Chief Officer of Enrollment Information Services','Jennifer Lehner/Ross Lordon','    <p>The&nbsp;<strong><em>Exit Survey for Doctoral Graduate Students</em></strong>&nbsp;storyboard displays responses to survey questions from the Graduate Student Exit Survey taken by doctoral stud','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Exit Survey for Masters\, Practice Doc\, and Ed Specialist','2007-07-21','2017-10-30','University Registrar and Chief Officer of Enrollment Information Services','Jennifer Lehner/Ross Lordon','    <p>The&nbsp;<em><strong>Exit Survey for Masters\, Practice Doc\, and Ed Specialist Graduate Students</strong></em>&nbsp;storyboard displays responses to survey questions from the Graduate Student Ex','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Faculty Demographic Trends','2007-07-21','2019-11-13','Peg Stuart','Courtney Drake','<p>The <strong><em>Faculty Demographic Trends</em></strong> dashboard displays a point-in-time snapshot of faculty demographic data captured each autumn quarter\, beginning in autumn 2010.</p>  <p>Due ','University Advancement','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Graduate Student Accept Offer Survey','2007-07-21','2017-10-18','Dean of Graduate School','Graduate School - Jennifer Lehner / Ross Lordon','      <p>The <strong><em>Graduate Student <u>Accept</u> Offer Survey</em></strong> <strong><em>Dashboard</em></strong> displays responses to survey questions from the <em>Graduate Student Accept Offer','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Graduate Student Decline Offer Survey','2007-07-21','2017-10-18','Dean of Graduate School','Graduate School - Jennifer Lehner / Ross Lordon','     <p>The <strong><em>Graduate Student <u>Decline</u> Offer Survey</em></strong> <strong><em>Dashboard</em></strong> displays responses to survey questions from the <em>Graduate Student Decline Offe','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Washington State Award Production','2007-07-21','2017-10-31','Dean of Graduate School','Central Puget Sound Higher Education - Jeremy Caci','<p>The<em><strong> Washington State Award Program</strong></em> displays trends from&nbsp;Li Europan lingues es membres del sam familie. Lor separat existentie es un myth. Por scientie\, musica\, sport ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Employment Projections','2007-07-21','2017-10-31','Dean of Graduate School','Central Puget Sound Higher Education - Jeremy Caci','<p>The<em><strong> Employment Projections</strong></em> visualization displays alternative state specific&nbsp; trends of&nbsp; Li Europan lingues es membres del sam familie. Lor separat existentie es','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Overview of Research Total Expenditures','2007-07-21','2019-08-01','Jim Kresl','Grzegorz Grabowski','<p>The <em><strong>Overview of Research Total Expenditures</strong> </em>dashboard helps users to understand trends in total research expenditures amounts (nominal or inflation-adjusted) over time\, br','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Comparison of Research Direct and Indirect Expenditures','2007-07-21','2019-08-01','Jim Kresl','Grzegorz Grabowski','<p>The <em><strong>Comparison of Research Direct and Indirect Expenditures</strong></em> dashboard allows users to explore direct and indirect expenditure amount trends over time. Users can filter the','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Summary of Research Total Expenditures by Funding Entities','2007-07-21','2019-08-01','Jim Kresl','Grzegorz Grabowski','<p>The <em><strong>Summary of Research Total Expenditures by Funding Entities</strong></em> dashboard helps users to visualize the amount of total expenditures by funding source. Users can view the ex','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Sponsored Research Highlights','2007-07-21','2018-09-05','Jim Kresl','Grzegorz Grabowski','        <p>The <strong>Sponsored Research Highlights Dashboard</strong> provides an at-a-glance overview of research funding at the University of Washington. It answers 2 basic questions at a high lev','Human Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Total Classroom Utilization by Hour','2007-07-21','2019-01-16','University Registrar and Chief Officer of Enrollment Information Services',' Bill Abella\, Alexis Wall and Matt Portwood','<p><span style=\"font-weight: 400;\">This visualization was created to help advisers and Time Schedule coordinators to comply with the Learning Spaces Policy. Details regarding the policy are available ','Financial Resources','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','UW Calendars','2007-07-21','2020-01-06','University Registrar and Chief Officer of Enrollment Information Services','Courtney Drake','<p>This visualization displays the various calendars frequently used by the University of Washington’s faculty\, staff\, and students. The visualization is intended to identify\, for any given day\, the p','Healthcare','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData'),
('Visualization','Time Schedule Enrollment by Day and Time','2007-07-21','2020-02-12','University Registrar and Chief Officer of Enrollment Information Services','Greg Grabowski','displays a heat map of current enrollment counts broken down by day and time in order to demonstrate times of high and low campus activity. The dashboard divides the academic day into 30 minute increm','Healthcare','SELECT   GLProcessingDate\,   TransBatchNbr\,   TransTypeCode\,   Sum(RecordCount) as RecondCount\,   SUM(DebitSumAmt) AS Debit\,   SUM(CreditSumAmt) AS Credit FROM            GLDataMart.sec.TransGLSummary WHERE       (GLAccountCode = ''4801'') and   BienniumYear =@bienyear and   AcctngMonth= @Acctgmonth GROUP BY  GLProcessingDate\,   TransBatchNbr\,   TransTypeCode ORDER BY                 GLProcessingDate\,   TransBatchNbr\,   TransTypeCode','ResearchAdminData');